<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (7,862 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (12 samples, 0.15%)</title><rect x="10.2" y="947.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.2" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.11%)</title><rect x="10.3" y="931.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.09%)</title><rect x="10.5" y="915.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="10.6" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.6" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.04%)</title><rect x="11.1" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.1" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.03%)</title><rect x="11.7" y="931.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.7" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.11%)</title><rect x="12.1" y="947.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="15.1" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="12.1" y="931.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.1" y="942.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (3 samples, 0.04%)</title><rect x="12.1" y="915.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.1" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.05%)</title><rect x="12.6" y="931.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="13.2" y="931.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="16.2" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="13.2" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.2" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="13.2" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="16.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6,336 samples, 80.59%)</title><rect x="13.5" y="947.0" width="950.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.5" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,336 samples, 80.59%)</title><rect x="13.5" y="931.0" width="950.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.5" y="942.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,336 samples, 80.59%)</title><rect x="13.5" y="915.0" width="950.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.5" y="926.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (25 samples, 0.32%)</title><rect x="13.6" y="899.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (25 samples, 0.32%)</title><rect x="13.6" y="883.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (25 samples, 0.32%)</title><rect x="13.6" y="867.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.20%)</title><rect x="15.0" y="851.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$73/534297806.run (6 samples, 0.08%)</title><rect x="16.5" y="835.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (687 samples, 8.74%)</title><rect x="17.4" y="899.0" width="103.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.4" y="910.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (685 samples, 8.71%)</title><rect x="17.7" y="883.0" width="102.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.7" y="894.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (503 samples, 6.40%)</title><rect x="19.3" y="867.0" width="75.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.3" y="878.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (12 samples, 0.15%)</title><rect x="19.5" y="851.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (12 samples, 0.15%)</title><rect x="19.5" y="835.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.10%)</title><rect x="21.3" y="851.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.10%)</title><rect x="21.3" y="835.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.10%)</title><rect x="21.3" y="819.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (87 samples, 1.11%)</title><rect x="22.5" y="851.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (87 samples, 1.11%)</title><rect x="22.5" y="835.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (78 samples, 0.99%)</title><rect x="23.5" y="819.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (78 samples, 0.99%)</title><rect x="23.5" y="803.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (74 samples, 0.94%)</title><rect x="24.1" y="787.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.1" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.14%)</title><rect x="24.3" y="771.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="27.3" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="24.9" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="27.9" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="25.3" y="755.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="28.3" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (62 samples, 0.79%)</title><rect x="25.9" y="771.0" width="9.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="28.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.73%)</title><rect x="26.7" y="755.0" width="8.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.73%)</title><rect x="26.7" y="739.0" width="8.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="29.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (54 samples, 0.69%)</title><rect x="27.1" y="723.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="30.1" y="734.0"></text>
</g>
<g>
<title>do_futex (54 samples, 0.69%)</title><rect x="27.1" y="707.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="30.1" y="718.0"></text>
</g>
<g>
<title>futex_wake (53 samples, 0.67%)</title><rect x="27.3" y="691.0" width="7.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.3" y="702.0"></text>
</g>
<g>
<title>wake_up_q (50 samples, 0.64%)</title><rect x="27.7" y="675.0" width="7.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="30.7" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (50 samples, 0.64%)</title><rect x="27.7" y="659.0" width="7.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="30.7" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 0.64%)</title><rect x="27.7" y="643.0" width="7.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="30.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.03%)</title><rect x="35.2" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.03%)</title><rect x="35.5" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.03%)</title><rect x="35.5" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (393 samples, 5.00%)</title><rect x="35.8" y="851.0" width="59.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.8" y="862.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (390 samples, 4.96%)</title><rect x="36.3" y="835.0" width="58.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.3" y="846.0">jdk/in..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.06%)</title><rect x="37.0" y="819.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="40.0" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="37.8" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="40.8" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (149 samples, 1.90%)</title><rect x="38.2" y="819.0" width="22.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="41.2" y="830.0">U..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (8 samples, 0.10%)</title><rect x="40.0" y="803.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="43.0" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (4 samples, 0.05%)</title><rect x="41.2" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="44.2" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (32 samples, 0.41%)</title><rect x="41.8" y="803.0" width="4.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="44.8" y="814.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (6 samples, 0.08%)</title><rect x="44.1" y="787.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="47.1" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.09%)</title><rect x="45.0" y="787.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="48.0" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="46.0" y="787.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="49.0" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="46.6" y="803.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="49.6" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="47.2" y="803.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="50.2" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.06%)</title><rect x="47.7" y="803.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="50.7" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.05%)</title><rect x="48.4" y="803.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="51.4" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (63 samples, 0.80%)</title><rect x="49.0" y="803.0" width="9.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="52.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.67%)</title><rect x="50.5" y="787.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="50.5" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="53.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 0.65%)</title><rect x="50.8" y="771.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="53.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (38 samples, 0.48%)</title><rect x="52.5" y="755.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="55.5" y="766.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.43%)</title><rect x="52.8" y="739.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="55.8" y="750.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.36%)</title><rect x="52.9" y="723.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="55.9" y="734.0"></text>
</g>
<g>
<title>get_futex_key (10 samples, 0.13%)</title><rect x="55.5" y="707.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="58.5" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (3 samples, 0.04%)</title><rect x="56.5" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.5" y="702.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="57.1" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="60.1" y="734.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="57.4" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.4" y="734.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="57.9" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="60.9" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="58.2" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="61.2" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (5 samples, 0.06%)</title><rect x="58.6" y="803.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="61.6" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait (2 samples, 0.03%)</title><rect x="59.5" y="803.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="62.5" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (3 samples, 0.04%)</title><rect x="59.8" y="803.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="62.8" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="60.3" y="803.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="63.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (223 samples, 2.84%)</title><rect x="60.6" y="819.0" width="33.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="63.6" y="830.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.05%)</title><rect x="60.6" y="803.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="63.6" y="814.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.03%)</title><rect x="61.2" y="803.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="64.2" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (194 samples, 2.47%)</title><rect x="61.5" y="803.0" width="29.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="64.5" y="814.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (146 samples, 1.86%)</title><rect x="68.7" y="787.0" width="21.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="71.7" y="798.0">e..</text>
</g>
<g>
<title>do_syscall_64 (145 samples, 1.84%)</title><rect x="68.8" y="771.0" width="21.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="71.8" y="782.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (136 samples, 1.73%)</title><rect x="70.2" y="755.0" width="20.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="73.2" y="766.0"></text>
</g>
<g>
<title>do_futex (126 samples, 1.60%)</title><rect x="71.4" y="739.0" width="18.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="74.4" y="750.0"></text>
</g>
<g>
<title>futex_wait (122 samples, 1.55%)</title><rect x="71.5" y="723.0" width="18.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="74.5" y="734.0"></text>
</g>
<g>
<title>futex_wait_queue_me (86 samples, 1.09%)</title><rect x="73.6" y="707.0" width="12.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.6" y="718.0"></text>
</g>
<g>
<title>schedule (67 samples, 0.85%)</title><rect x="76.5" y="691.0" width="10.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.5" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (58 samples, 0.74%)</title><rect x="77.8" y="675.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="80.8" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (47 samples, 0.60%)</title><rect x="79.5" y="659.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="82.5" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (17 samples, 0.22%)</title><rect x="86.5" y="707.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="89.5" y="718.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.05%)</title><rect x="87.7" y="691.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="90.7" y="702.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="88.0" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.0" y="686.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="88.3" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.3" y="702.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.04%)</title><rect x="88.6" y="691.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.6" y="702.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="89.1" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.1" y="718.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="89.4" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="92.4" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.04%)</title><rect x="89.8" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.8" y="734.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="90.3" y="739.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.3" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (14 samples, 0.18%)</title><rect x="90.6" y="803.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="93.6" y="814.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.06%)</title><rect x="92.7" y="803.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="95.7" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="93.6" y="803.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="96.6" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.06%)</title><rect x="94.0" y="819.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="97.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8 samples, 0.10%)</title><rect x="94.8" y="867.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8 samples, 0.10%)</title><rect x="94.8" y="851.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (8 samples, 0.10%)</title><rect x="94.8" y="835.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.08%)</title><rect x="95.1" y="819.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.08%)</title><rect x="95.1" y="803.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.08%)</title><rect x="95.1" y="787.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.1" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="95.3" y="771.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="98.3" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="95.3" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="95.6" y="771.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="98.6" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.04%)</title><rect x="95.6" y="755.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="98.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (163 samples, 2.07%)</title><rect x="96.0" y="867.0" width="24.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.0" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (163 samples, 2.07%)</title><rect x="96.0" y="851.0" width="24.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.0" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (163 samples, 2.07%)</title><rect x="96.0" y="835.0" width="24.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.0" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (163 samples, 2.07%)</title><rect x="96.0" y="819.0" width="24.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.0" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (150 samples, 1.91%)</title><rect x="98.0" y="803.0" width="22.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.0" y="814.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.18%)</title><rect x="98.1" y="787.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="101.1" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="98.7" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="101.7" y="782.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="99.2" y="771.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="102.2" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.06%)</title><rect x="99.5" y="771.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="102.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (134 samples, 1.70%)</title><rect x="100.2" y="787.0" width="20.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="103.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (131 samples, 1.67%)</title><rect x="100.7" y="771.0" width="19.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (131 samples, 1.67%)</title><rect x="100.7" y="755.0" width="19.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (130 samples, 1.65%)</title><rect x="100.8" y="739.0" width="19.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="103.8" y="750.0"></text>
</g>
<g>
<title>do_futex (130 samples, 1.65%)</title><rect x="100.8" y="723.0" width="19.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="103.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (129 samples, 1.64%)</title><rect x="101.0" y="707.0" width="19.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.0" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.06%)</title><rect x="102.2" y="691.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="105.2" y="702.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.04%)</title><rect x="102.9" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="105.9" y="702.0"></text>
</g>
<g>
<title>wake_up_q (113 samples, 1.44%)</title><rect x="103.4" y="691.0" width="16.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.4" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (111 samples, 1.41%)</title><rect x="103.7" y="675.0" width="16.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="106.7" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (110 samples, 1.40%)</title><rect x="103.7" y="659.0" width="16.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$73/534297806.run (5,623 samples, 71.52%)</title><rect x="120.5" y="899.0" width="843.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.5" y="910.0">ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$73/534297806.run</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$requestHandler$1 (5,623 samples, 71.52%)</title><rect x="120.5" y="883.0" width="843.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.5" y="894.0">ru/mail/polis/service/nik27090/ServiceImpl.lambda$requestHandler$1</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (5,622 samples, 71.51%)</title><rect x="120.6" y="867.0" width="843.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.6" y="878.0">ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.11%)</title><rect x="129.5" y="851.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.5" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.05%)</title><rect x="130.8" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.8" y="862.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="131.4" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.17%)</title><rect x="131.9" y="851.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.13%)</title><rect x="132.3" y="835.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.13%)</title><rect x="132.3" y="819.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.3" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="133.1" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.1" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="133.8" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="134.1" y="851.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.10%)</title><rect x="135.0" y="851.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.0" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.10%)</title><rect x="136.2" y="851.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.2" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.09%)</title><rect x="136.4" y="835.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.4" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="136.4" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="139.4" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="136.4" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="139.4" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="136.4" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="139.4" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="136.4" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="139.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="136.7" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="136.7" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.7" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="137.1" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.06%)</title><rect x="137.4" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.4" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.03%)</title><rect x="138.3" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.3" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (8 samples, 0.10%)</title><rect x="138.8" y="851.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.8" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (6 samples, 0.08%)</title><rect x="139.1" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.1" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (5 samples, 0.06%)</title><rect x="139.1" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.1" y="830.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (5 samples, 0.06%)</title><rect x="139.1" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.1" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.24%)</title><rect x="140.0" y="851.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.0" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (6 samples, 0.08%)</title><rect x="140.1" y="835.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.14%)</title><rect x="141.2" y="835.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (11 samples, 0.14%)</title><rect x="141.2" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.2" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="141.3" y="803.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="144.3" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.characteristics (7 samples, 0.09%)</title><rect x="141.8" y="803.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.8" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$EmptyIterator.hasNext (3 samples, 0.04%)</title><rect x="142.8" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.8" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.&lt;init&gt; (3 samples, 0.04%)</title><rect x="143.3" y="851.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.3" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.04%)</title><rect x="143.7" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.03%)</title><rect x="144.3" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (10 samples, 0.13%)</title><rect x="144.6" y="851.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (54 samples, 0.69%)</title><rect x="146.1" y="851.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (50 samples, 0.64%)</title><rect x="146.7" y="835.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.7" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (50 samples, 0.64%)</title><rect x="146.7" y="819.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (50 samples, 0.64%)</title><rect x="146.7" y="803.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.7" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (45 samples, 0.57%)</title><rect x="146.7" y="787.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.7" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (24 samples, 0.31%)</title><rect x="146.9" y="771.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (22 samples, 0.28%)</title><rect x="147.2" y="755.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (2 samples, 0.03%)</title><rect x="147.8" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$86/1156721799.accept (2 samples, 0.03%)</title><rect x="147.8" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="147.8" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.8" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="147.8" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="147.8" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.8" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="147.8" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="147.8" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$169/1899534069.test (16 samples, 0.20%)</title><rect x="148.1" y="739.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntityExecutor$2 (6 samples, 0.08%)</title><rect x="149.6" y="723.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (6 samples, 0.08%)</title><rect x="149.6" y="707.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="149.9" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="150.2" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.2" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (15 samples, 0.19%)</title><rect x="150.5" y="771.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (11 samples, 0.14%)</title><rect x="151.1" y="755.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$86/1156721799.accept (11 samples, 0.14%)</title><rect x="151.1" y="739.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.14%)</title><rect x="151.1" y="723.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.1" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.14%)</title><rect x="151.1" y="707.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.14%)</title><rect x="151.1" y="691.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="152.0" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.03%)</title><rect x="152.0" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="152.3" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.04%)</title><rect x="152.7" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (2 samples, 0.03%)</title><rect x="153.2" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (2 samples, 0.03%)</title><rect x="153.2" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$79/437290203.get (2 samples, 0.03%)</title><rect x="153.2" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="153.2" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.2" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="153.2" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.2" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="153.2" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.06%)</title><rect x="153.5" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (5 samples, 0.06%)</title><rect x="154.2" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.2" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="155.1" y="851.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="158.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="155.4" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.05%)</title><rect x="155.7" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.04%)</title><rect x="156.5" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (3 samples, 0.04%)</title><rect x="156.9" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper.getEntity (1,067 samples, 13.57%)</title><rect x="157.4" y="851.0" width="160.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.4" y="862.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="157.5" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="160.5" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="157.5" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="160.5" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="157.5" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="160.5" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="157.5" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="160.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/686792785.linkToTargetMethod (10 samples, 0.13%)</title><rect x="157.8" y="835.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/637420610.invoke (10 samples, 0.13%)</title><rect x="157.8" y="819.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1384108691.invokeStatic (2 samples, 0.03%)</title><rect x="158.0" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (2 samples, 0.03%)</title><rect x="158.0" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (2 samples, 0.03%)</title><rect x="158.0" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1662289101.invokeStatic (6 samples, 0.08%)</title><rect x="158.3" y="803.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (6 samples, 0.08%)</title><rect x="158.3" y="787.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (5 samples, 0.06%)</title><rect x="158.4" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.04%)</title><rect x="159.5" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.5" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="159.5" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.14%)</title><rect x="160.1" y="835.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (394 samples, 5.01%)</title><rect x="161.7" y="835.0" width="59.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.7" y="846.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (28 samples, 0.36%)</title><rect x="161.7" y="819.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.7" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (28 samples, 0.36%)</title><rect x="161.7" y="803.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (28 samples, 0.36%)</title><rect x="161.7" y="787.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (28 samples, 0.36%)</title><rect x="161.7" y="771.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (28 samples, 0.36%)</title><rect x="161.7" y="755.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (19 samples, 0.24%)</title><rect x="161.9" y="739.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.15%)</title><rect x="162.2" y="723.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.2" y="734.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.15%)</title><rect x="162.2" y="707.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.14%)</title><rect x="162.3" y="691.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10 samples, 0.13%)</title><rect x="162.5" y="675.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.13%)</title><rect x="162.5" y="659.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (7 samples, 0.09%)</title><rect x="162.9" y="643.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.09%)</title><rect x="162.9" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.09%)</title><rect x="162.9" y="611.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.06%)</title><rect x="162.9" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.06%)</title><rect x="162.9" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.04%)</title><rect x="163.2" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.03%)</title><rect x="163.7" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (2 samples, 0.03%)</title><rect x="163.7" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (2 samples, 0.03%)</title><rect x="163.7" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.7" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.04%)</title><rect x="164.1" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.1" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.04%)</title><rect x="164.1" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (5 samples, 0.06%)</title><rect x="164.7" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.7" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.06%)</title><rect x="164.7" y="723.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.7" y="734.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.04%)</title><rect x="165.0" y="707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="168.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$151/358634853.apply (2 samples, 0.03%)</title><rect x="165.5" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (2 samples, 0.03%)</title><rect x="165.5" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.5" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="165.5" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="165.5" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="165.5" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.05%)</title><rect x="165.9" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.9" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.05%)</title><rect x="165.9" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$160/427024508.apply (4 samples, 0.05%)</title><rect x="165.9" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (4 samples, 0.05%)</title><rect x="165.9" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (4 samples, 0.05%)</title><rect x="165.9" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="165.9" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.05%)</title><rect x="165.9" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="166.1" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="166.1" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.1" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="166.1" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (5 samples, 0.06%)</title><rect x="166.5" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.5" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.06%)</title><rect x="166.5" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.5" y="814.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.04%)</title><rect x="166.8" y="787.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="169.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (8 samples, 0.10%)</title><rect x="167.3" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.3" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.10%)</title><rect x="167.3" y="803.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.3" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.10%)</title><rect x="167.3" y="787.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (7 samples, 0.09%)</title><rect x="167.4" y="771.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="167.4" y="755.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="167.4" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="167.6" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="167.9" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="168.2" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (9 samples, 0.11%)</title><rect x="168.5" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.5" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.11%)</title><rect x="168.5" y="803.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.5" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.10%)</title><rect x="168.6" y="787.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.6" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="168.8" y="771.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="168.8" y="755.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.8" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="168.8" y="739.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="169.1" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="169.2" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="169.2" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.2" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="169.2" y="675.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="172.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="169.5" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (340 samples, 4.32%)</title><rect x="169.8" y="819.0" width="51.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.8" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="169.8" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (335 samples, 4.26%)</title><rect x="170.6" y="803.0" width="50.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.6" y="814.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (23 samples, 0.29%)</title><rect x="170.9" y="787.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.9" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22 samples, 0.28%)</title><rect x="170.9" y="771.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.9" y="782.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.23%)</title><rect x="171.5" y="755.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (17 samples, 0.22%)</title><rect x="171.6" y="739.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (16 samples, 0.20%)</title><rect x="171.8" y="723.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.05%)</title><rect x="172.2" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (3 samples, 0.04%)</title><rect x="172.4" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.04%)</title><rect x="172.4" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.04%)</title><rect x="172.4" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.03%)</title><rect x="172.5" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (5 samples, 0.06%)</title><rect x="172.8" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$107/801053230.get (4 samples, 0.05%)</title><rect x="173.0" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.lambda$spliterator$0 (4 samples, 0.05%)</title><rect x="173.0" y="675.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (4 samples, 0.05%)</title><rect x="173.0" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (4 samples, 0.05%)</title><rect x="173.6" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="173.9" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="173.9" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.get$Lambda (2 samples, 0.03%)</title><rect x="173.9" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="174.3" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.3" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (6 samples, 0.08%)</title><rect x="174.6" y="787.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.08%)</title><rect x="174.6" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.6" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.08%)</title><rect x="174.6" y="755.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.6" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.08%)</title><rect x="174.6" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.6" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (6 samples, 0.08%)</title><rect x="174.6" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.6" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (2 samples, 0.03%)</title><rect x="175.5" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.5" y="798.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (2 samples, 0.03%)</title><rect x="175.5" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.5" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="175.5" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="178.5" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="175.5" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="178.5" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="175.5" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="178.5" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="175.5" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="178.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (47 samples, 0.60%)</title><rect x="175.8" y="787.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (47 samples, 0.60%)</title><rect x="175.8" y="771.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireShared (33 samples, 0.42%)</title><rect x="175.8" y="755.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="176.1" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="176.1" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (25 samples, 0.32%)</title><rect x="176.4" y="739.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (25 samples, 0.32%)</title><rect x="176.4" y="723.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 0.32%)</title><rect x="176.4" y="707.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.4" y="718.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.13%)</title><rect x="176.4" y="691.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="179.4" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.06%)</title><rect x="176.6" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="179.6" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="177.3" y="675.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="180.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="177.3" y="659.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="177.3" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.3" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="177.5" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.5" y="638.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="177.5" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="180.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.18%)</title><rect x="177.9" y="691.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="180.9" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (13 samples, 0.17%)</title><rect x="177.9" y="675.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="180.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.11%)</title><rect x="178.5" y="659.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="181.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.11%)</title><rect x="178.5" y="643.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.5" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.09%)</title><rect x="178.9" y="627.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="181.9" y="638.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.09%)</title><rect x="178.9" y="611.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="181.9" y="622.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.09%)</title><rect x="178.9" y="595.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="181.9" y="606.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.09%)</title><rect x="178.9" y="579.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="181.9" y="590.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="179.3" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.3" y="574.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.05%)</title><rect x="179.3" y="547.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.3" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="179.5" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHeadAndPropagate (3 samples, 0.04%)</title><rect x="180.2" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (3 samples, 0.04%)</title><rect x="180.2" y="723.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="180.4" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="180.4" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="180.4" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.4" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="180.4" y="659.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="183.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="180.4" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="183.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="180.4" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.4" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="180.4" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="183.4" y="622.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="180.4" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (14 samples, 0.18%)</title><rect x="180.8" y="755.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.8" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.08%)</title><rect x="181.4" y="739.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.08%)</title><rect x="181.4" y="723.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.03%)</title><rect x="182.3" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.3" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.03%)</title><rect x="182.3" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="182.3" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (2 samples, 0.03%)</title><rect x="182.6" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (15 samples, 0.19%)</title><rect x="182.9" y="787.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (14 samples, 0.18%)</title><rect x="183.1" y="771.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (14 samples, 0.18%)</title><rect x="183.1" y="755.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.05%)</title><rect x="183.8" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.8" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.05%)</title><rect x="183.8" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="184.1" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="184.6" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="184.6" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="184.6" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (2 samples, 0.03%)</title><rect x="184.9" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (8 samples, 0.10%)</title><rect x="185.2" y="787.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.10%)</title><rect x="185.2" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="185.2" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="185.2" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="185.2" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="185.2" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="185.2" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="188.2" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="185.2" y="675.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="188.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (6 samples, 0.08%)</title><rect x="185.5" y="755.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="186.1" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="186.1" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="186.1" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (34 samples, 0.43%)</title><rect x="186.4" y="787.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 0.43%)</title><rect x="186.4" y="771.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.43%)</title><rect x="186.4" y="755.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.43%)</title><rect x="186.4" y="739.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 0.43%)</title><rect x="186.4" y="723.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.4" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.10%)</title><rect x="186.5" y="707.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="189.5" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="186.8" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="189.8" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.04%)</title><rect x="187.3" y="691.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="190.3" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.32%)</title><rect x="187.7" y="707.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="190.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.29%)</title><rect x="188.0" y="691.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="191.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.29%)</title><rect x="188.0" y="675.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.0" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.27%)</title><rect x="188.2" y="659.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.2" y="670.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.25%)</title><rect x="188.2" y="643.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.2" y="654.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.25%)</title><rect x="188.2" y="627.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.2" y="638.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.25%)</title><rect x="188.2" y="611.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="191.2" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.25%)</title><rect x="188.2" y="595.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.2" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.25%)</title><rect x="188.2" y="579.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.writeLock (2 samples, 0.03%)</title><rect x="191.5" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.20%)</title><rect x="191.8" y="787.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (16 samples, 0.20%)</title><rect x="191.8" y="771.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.19%)</title><rect x="191.9" y="755.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.11%)</title><rect x="192.4" y="739.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.4" y="750.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.10%)</title><rect x="192.5" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.09%)</title><rect x="192.7" y="707.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.09%)</title><rect x="192.7" y="691.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.clear (2 samples, 0.03%)</title><rect x="192.7" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.05%)</title><rect x="193.0" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (3 samples, 0.04%)</title><rect x="193.1" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.04%)</title><rect x="193.1" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.03%)</title><rect x="193.3" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.03%)</title><rect x="193.7" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (178 samples, 2.26%)</title><rect x="194.2" y="787.0" width="26.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.2" y="798.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (168 samples, 2.14%)</title><rect x="194.3" y="771.0" width="25.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.3" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (165 samples, 2.10%)</title><rect x="194.3" y="755.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.3" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (163 samples, 2.07%)</title><rect x="194.6" y="739.0" width="24.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.6" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (157 samples, 2.00%)</title><rect x="194.9" y="723.0" width="23.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.9" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3 samples, 0.04%)</title><rect x="195.4" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.03%)</title><rect x="195.5" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (151 samples, 1.92%)</title><rect x="195.8" y="707.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.8" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (151 samples, 1.92%)</title><rect x="195.8" y="691.0" width="22.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.8" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (17 samples, 0.22%)</title><rect x="196.6" y="675.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.22%)</title><rect x="196.6" y="659.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.20%)</title><rect x="196.7" y="643.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.7" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.20%)</title><rect x="196.7" y="627.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.08%)</title><rect x="197.6" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.08%)</title><rect x="197.6" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.6" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.05%)</title><rect x="198.5" y="611.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="201.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (129 samples, 1.64%)</title><rect x="199.1" y="675.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.08%)</title><rect x="205.7" y="659.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (79 samples, 1.00%)</title><rect x="206.6" y="659.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (79 samples, 1.00%)</title><rect x="206.6" y="643.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (77 samples, 0.98%)</title><rect x="206.9" y="627.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.9" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (77 samples, 0.98%)</title><rect x="206.9" y="611.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (29 samples, 0.37%)</title><rect x="212.5" y="595.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.5" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (29 samples, 0.37%)</title><rect x="212.5" y="579.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.5" y="590.0"></text>
</g>
<g>
<title>vectorizedMismatch (11 samples, 0.14%)</title><rect x="216.8" y="595.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="219.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooHigh (3 samples, 0.04%)</title><rect x="218.5" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="219.1" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (3 samples, 0.04%)</title><rect x="219.1" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.1" y="750.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="219.2" y="723.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="222.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="219.7" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="219.7" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="219.7" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (3 samples, 0.04%)</title><rect x="220.1" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (3 samples, 0.04%)</title><rect x="220.1" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="220.1" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="220.1" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$107/801053230.get$Lambda (2 samples, 0.03%)</title><rect x="220.1" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (2 samples, 0.03%)</title><rect x="220.6" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getCell (644 samples, 8.19%)</title><rect x="220.9" y="835.0" width="96.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.9" y="846.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (41 samples, 0.52%)</title><rect x="221.9" y="819.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.9" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.34%)</title><rect x="221.9" y="803.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.9" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.17%)</title><rect x="222.1" y="787.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.1" y="798.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.17%)</title><rect x="222.1" y="771.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.17%)</title><rect x="222.1" y="755.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.11%)</title><rect x="222.7" y="739.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.09%)</title><rect x="223.0" y="723.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (6 samples, 0.08%)</title><rect x="223.1" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.08%)</title><rect x="223.1" y="691.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.08%)</title><rect x="223.1" y="675.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="223.1" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="223.1" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.03%)</title><rect x="223.1" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.05%)</title><rect x="223.4" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (4 samples, 0.05%)</title><rect x="223.4" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (4 samples, 0.05%)</title><rect x="223.4" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.04%)</title><rect x="224.0" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.0" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.03%)</title><rect x="224.5" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.5" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.03%)</title><rect x="224.5" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.5" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.10%)</title><rect x="224.8" y="787.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.8" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.10%)</title><rect x="224.8" y="771.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.8" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.06%)</title><rect x="225.2" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.2" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.06%)</title><rect x="225.2" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.2" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="225.5" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (13 samples, 0.17%)</title><rect x="226.0" y="803.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.0" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.17%)</title><rect x="226.0" y="787.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="227.3" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.3" y="782.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.03%)</title><rect x="227.6" y="771.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="230.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (18 samples, 0.23%)</title><rect x="228.1" y="819.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.23%)</title><rect x="228.1" y="803.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.1" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (13 samples, 0.17%)</title><rect x="228.4" y="787.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.17%)</title><rect x="228.4" y="771.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.17%)</title><rect x="228.4" y="755.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.14%)</title><rect x="228.5" y="739.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 0.08%)</title><rect x="228.8" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="229.7" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.7" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.04%)</title><rect x="230.3" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getIterator (578 samples, 7.35%)</title><rect x="230.8" y="819.0" width="86.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.8" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (70 samples, 0.89%)</title><rect x="231.8" y="803.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (70 samples, 0.89%)</title><rect x="231.8" y="787.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="232.1" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.1" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.03%)</title><rect x="232.7" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.7" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.05%)</title><rect x="233.2" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.2" y="782.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.03%)</title><rect x="233.5" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.5" y="766.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (57 samples, 0.73%)</title><rect x="233.8" y="771.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (55 samples, 0.70%)</title><rect x="234.1" y="755.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (55 samples, 0.70%)</title><rect x="234.1" y="739.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractSpinedBuffer.count (7 samples, 0.09%)</title><rect x="235.4" y="723.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.09%)</title><rect x="235.4" y="707.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (19 samples, 0.24%)</title><rect x="236.5" y="723.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/Sink.cancellationRequested (4 samples, 0.05%)</title><rect x="236.9" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (12 samples, 0.15%)</title><rect x="237.5" y="707.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.15%)</title><rect x="237.5" y="691.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.15%)</title><rect x="237.5" y="675.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="237.5" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="237.5" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.03%)</title><rect x="237.5" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.13%)</title><rect x="237.8" y="659.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (5 samples, 0.06%)</title><rect x="238.6" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (5 samples, 0.06%)</title><rect x="238.6" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (10 samples, 0.13%)</title><rect x="239.3" y="723.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$107/801053230.get (10 samples, 0.13%)</title><rect x="239.3" y="707.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.lambda$spliterator$0 (10 samples, 0.13%)</title><rect x="239.3" y="691.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (10 samples, 0.13%)</title><rect x="239.3" y="675.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (10 samples, 0.13%)</title><rect x="240.8" y="723.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.09%)</title><rect x="241.0" y="707.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.09%)</title><rect x="241.0" y="691.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.get$Lambda (6 samples, 0.08%)</title><rect x="241.1" y="675.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="242.0" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.03%)</title><rect x="242.0" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="242.5" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.5" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="242.6" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.6" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.11%)</title><rect x="242.9" y="803.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.9" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.11%)</title><rect x="242.9" y="787.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="243.1" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.1" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="243.1" y="755.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.1" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="243.1" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.1" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="243.5" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.5" y="750.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.03%)</title><rect x="244.0" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.0" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (37 samples, 0.47%)</title><rect x="244.3" y="803.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.3" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (35 samples, 0.45%)</title><rect x="244.4" y="787.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (34 samples, 0.43%)</title><rect x="244.4" y="771.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.&lt;init&gt; (31 samples, 0.39%)</title><rect x="244.4" y="755.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.4" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (25 samples, 0.32%)</title><rect x="245.3" y="739.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.3" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="246.8" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.04%)</title><rect x="247.1" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.1" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.03%)</title><rect x="247.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.6" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="248.0" y="723.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="251.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (2 samples, 0.03%)</title><rect x="248.8" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.04%)</title><rect x="249.1" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.1" y="766.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (12 samples, 0.15%)</title><rect x="249.8" y="803.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.15%)</title><rect x="249.8" y="787.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.15%)</title><rect x="249.8" y="771.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.8" y="782.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$118/1137034356.get$Lambda (9 samples, 0.11%)</title><rect x="250.3" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.3" y="766.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$118/1137034356.&lt;init&gt; (9 samples, 0.11%)</title><rect x="250.3" y="739.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.3" y="750.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.08%)</title><rect x="250.7" y="723.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="253.7" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.03%)</title><rect x="251.6" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (48 samples, 0.61%)</title><rect x="251.9" y="803.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (48 samples, 0.61%)</title><rect x="251.9" y="787.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.9" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (2 samples, 0.03%)</title><rect x="252.2" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.2" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.03%)</title><rect x="252.2" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.2" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.size (2 samples, 0.03%)</title><rect x="252.2" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (44 samples, 0.56%)</title><rect x="252.5" y="771.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="253.1" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (30 samples, 0.38%)</title><rect x="253.4" y="755.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.4" y="766.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (28 samples, 0.36%)</title><rect x="253.7" y="739.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (27 samples, 0.34%)</title><rect x="253.9" y="723.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (27 samples, 0.34%)</title><rect x="253.9" y="707.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.clear (10 samples, 0.13%)</title><rect x="254.5" y="691.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.03%)</title><rect x="255.7" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.15%)</title><rect x="256.0" y="691.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (11 samples, 0.14%)</title><rect x="256.1" y="675.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.14%)</title><rect x="256.1" y="659.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.13%)</title><rect x="256.3" y="643.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="256.3" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="256.3" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.04%)</title><rect x="256.3" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.09%)</title><rect x="256.7" y="627.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (5 samples, 0.06%)</title><rect x="257.0" y="611.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (5 samples, 0.06%)</title><rect x="257.0" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.05%)</title><rect x="257.9" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="260.9" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.03%)</title><rect x="258.7" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (387 samples, 4.92%)</title><rect x="259.1" y="803.0" width="58.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.1" y="814.0">ru/mai..</text>
</g>
<g>
<title>java/util/Collection.stream (364 samples, 4.63%)</title><rect x="259.1" y="787.0" width="54.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.1" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (350 samples, 4.45%)</title><rect x="259.4" y="771.0" width="52.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.4" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (345 samples, 4.39%)</title><rect x="260.2" y="755.0" width="51.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.2" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (331 samples, 4.21%)</title><rect x="260.8" y="739.0" width="49.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.8" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (11 samples, 0.14%)</title><rect x="261.1" y="723.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.06%)</title><rect x="261.2" y="707.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (5 samples, 0.06%)</title><rect x="262.0" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.05%)</title><rect x="262.1" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.04%)</title><rect x="262.3" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.04%)</title><rect x="262.3" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.3" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="262.3" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.3" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="262.3" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.3" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="262.3" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (318 samples, 4.04%)</title><rect x="262.7" y="723.0" width="47.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.7" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (317 samples, 4.03%)</title><rect x="262.9" y="707.0" width="47.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.9" y="718.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.05%)</title><rect x="264.7" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.18%)</title><rect x="265.3" y="691.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.15%)</title><rect x="265.6" y="675.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.14%)</title><rect x="265.8" y="659.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.8" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.14%)</title><rect x="265.8" y="643.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.8" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="266.5" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.5" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="266.5" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.5" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.05%)</title><rect x="266.8" y="627.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="269.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (287 samples, 3.65%)</title><rect x="267.4" y="691.0" width="43.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.4" y="702.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.10%)</title><rect x="296.2" y="675.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (85 samples, 1.08%)</title><rect x="297.4" y="675.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (83 samples, 1.06%)</title><rect x="297.7" y="659.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (76 samples, 0.97%)</title><rect x="298.8" y="643.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.8" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (76 samples, 0.97%)</title><rect x="298.8" y="627.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (26 samples, 0.33%)</title><rect x="305.1" y="611.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.1" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (26 samples, 0.33%)</title><rect x="305.1" y="595.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.1" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.10%)</title><rect x="309.0" y="611.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="312.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="310.2" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="313.2" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="310.2" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="313.2" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="310.2" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooHigh (5 samples, 0.06%)</title><rect x="310.5" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (5 samples, 0.06%)</title><rect x="311.2" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.15%)</title><rect x="312.0" y="771.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (11 samples, 0.14%)</title><rect x="312.1" y="755.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.1" y="766.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="312.7" y="739.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="315.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.characteristics (4 samples, 0.05%)</title><rect x="313.2" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.11%)</title><rect x="313.9" y="787.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.11%)</title><rect x="313.9" y="771.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.11%)</title><rect x="313.9" y="755.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (5 samples, 0.06%)</title><rect x="314.5" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (9 samples, 0.11%)</title><rect x="315.3" y="787.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.3" y="798.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.05%)</title><rect x="315.3" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (5 samples, 0.06%)</title><rect x="315.9" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="315.9" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="315.9" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$107/801053230.get$Lambda (4 samples, 0.05%)</title><rect x="315.9" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (4 samples, 0.05%)</title><rect x="316.6" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.sendResponse (2 samples, 0.03%)</title><rect x="317.2" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="317.2" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="317.2" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.2" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="317.2" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="317.2" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="317.2" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper.resolveGet (134 samples, 1.70%)</title><rect x="317.5" y="851.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.5" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (92 samples, 1.17%)</title><rect x="318.1" y="835.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementAt (6 samples, 0.08%)</title><rect x="318.7" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper$$Lambda$172/1583351679.accept (82 samples, 1.04%)</title><rect x="319.6" y="819.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper.lambda$resolveGet$0 (82 samples, 1.04%)</title><rect x="319.6" y="803.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (61 samples, 0.78%)</title><rect x="319.6" y="787.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (22 samples, 0.28%)</title><rect x="319.6" y="771.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.equals (2 samples, 0.03%)</title><rect x="321.4" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (8 samples, 0.10%)</title><rect x="321.7" y="755.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (39 samples, 0.50%)</title><rect x="322.9" y="771.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (38 samples, 0.48%)</title><rect x="323.1" y="755.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.1" y="766.0"></text>
</g>
<g>
<title>JVM_IHashCode (32 samples, 0.41%)</title><rect x="323.2" y="739.0" width="4.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="326.2" y="750.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="323.7" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="326.7" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (12 samples, 0.15%)</title><rect x="324.0" y="723.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="327.0" y="734.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.03%)</title><rect x="325.3" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="328.3" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="325.8" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="328.8" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.06%)</title><rect x="326.1" y="723.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="329.1" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.09%)</title><rect x="326.8" y="723.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="329.8" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.04%)</title><rect x="328.0" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="331.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.put (21 samples, 0.27%)</title><rect x="328.8" y="787.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="329.2" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (16 samples, 0.20%)</title><rect x="329.5" y="771.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (2 samples, 0.03%)</title><rect x="330.1" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.04%)</title><rect x="330.4" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (7 samples, 0.09%)</title><rect x="330.9" y="755.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$EntrySet.iterator (2 samples, 0.03%)</title><rect x="332.1" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$EntryIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="332.1" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper.getTimestamp (34 samples, 0.43%)</title><rect x="332.5" y="835.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (7 samples, 0.09%)</title><rect x="332.5" y="819.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (7 samples, 0.09%)</title><rect x="332.5" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="333.3" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (27 samples, 0.34%)</title><rect x="333.6" y="819.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (25 samples, 0.32%)</title><rect x="333.9" y="803.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (25 samples, 0.32%)</title><rect x="333.9" y="787.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (18 samples, 0.23%)</title><rect x="334.6" y="771.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (18 samples, 0.23%)</title><rect x="334.6" y="755.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.6" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (18 samples, 0.23%)</title><rect x="334.6" y="739.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.6" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="337.3" y="771.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="340.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.calculateResponse (630 samples, 8.01%)</title><rect x="337.6" y="851.0" width="94.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.6" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.sendResponse (627 samples, 7.98%)</title><rect x="338.1" y="835.0" width="94.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.1" y="846.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (625 samples, 7.95%)</title><rect x="338.4" y="819.0" width="93.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.4" y="830.0">one/nio/htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.11%)</title><rect x="339.0" y="803.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.11%)</title><rect x="339.0" y="787.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.11%)</title><rect x="339.0" y="771.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="340.0" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (605 samples, 7.70%)</title><rect x="340.3" y="803.0" width="90.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.3" y="814.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.34%)</title><rect x="340.3" y="787.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.08%)</title><rect x="343.5" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="343.5" y="755.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="343.5" y="739.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="343.5" y="723.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.08%)</title><rect x="343.5" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (578 samples, 7.35%)</title><rect x="344.4" y="787.0" width="86.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.4" y="798.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session.write (578 samples, 7.35%)</title><rect x="344.4" y="771.0" width="86.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.4" y="782.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (574 samples, 7.30%)</title><rect x="344.7" y="755.0" width="86.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.7" y="766.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (572 samples, 7.28%)</title><rect x="345.0" y="739.0" width="85.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.0" y="750.0">one/nio/ne..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="345.9" y="723.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="348.9" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.08%)</title><rect x="346.2" y="723.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="349.2" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="346.6" y="707.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="349.6" y="718.0"></text>
</g>
<g>
<title>send (558 samples, 7.10%)</title><rect x="347.1" y="723.0" width="83.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="350.1" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (551 samples, 7.01%)</title><rect x="348.2" y="707.0" width="82.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="351.2" y="718.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (550 samples, 7.00%)</title><rect x="348.3" y="691.0" width="82.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="351.3" y="702.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (536 samples, 6.82%)</title><rect x="350.0" y="675.0" width="80.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="353.0" y="686.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (535 samples, 6.80%)</title><rect x="350.0" y="659.0" width="80.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="353.0" y="670.0">__sys_sen..</text>
</g>
<g>
<title>sock_sendmsg (521 samples, 6.63%)</title><rect x="350.9" y="643.0" width="78.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="353.9" y="654.0">sock_send..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="351.3" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.3" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (503 samples, 6.40%)</title><rect x="351.8" y="627.0" width="75.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="354.8" y="638.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (502 samples, 6.39%)</title><rect x="351.9" y="611.0" width="75.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.9" y="622.0">tcp_send..</text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="352.2" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.2" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="352.7" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (491 samples, 6.25%)</title><rect x="353.6" y="595.0" width="73.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="356.6" y="606.0">tcp_send..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="354.6" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="357.6" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="354.8" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="357.8" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.04%)</title><rect x="355.7" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="358.7" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="355.7" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="358.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (22 samples, 0.28%)</title><rect x="356.1" y="579.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.1" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (20 samples, 0.25%)</title><rect x="356.3" y="563.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="359.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.05%)</title><rect x="356.4" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="359.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="356.4" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.4" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.06%)</title><rect x="357.0" y="547.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="360.0" y="558.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.05%)</title><rect x="357.8" y="547.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="360.8" y="558.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.05%)</title><rect x="357.8" y="531.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.8" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (3 samples, 0.04%)</title><rect x="358.4" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.4" y="558.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="358.8" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.8" y="558.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="359.4" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.4" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="359.9" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="362.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (437 samples, 5.56%)</title><rect x="360.2" y="579.0" width="65.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="363.2" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (437 samples, 5.56%)</title><rect x="360.2" y="563.0" width="65.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="363.2" y="574.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (433 samples, 5.51%)</title><rect x="360.8" y="547.0" width="64.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="363.8" y="558.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (406 samples, 5.16%)</title><rect x="361.5" y="531.0" width="60.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="364.5" y="542.0">__tcp_..</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="362.3" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="365.3" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (392 samples, 4.99%)</title><rect x="362.9" y="515.0" width="58.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="365.9" y="526.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (390 samples, 4.96%)</title><rect x="362.9" y="499.0" width="58.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.9" y="510.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (387 samples, 4.92%)</title><rect x="363.2" y="483.0" width="58.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.2" y="494.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (60 samples, 0.76%)</title><rect x="363.3" y="467.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="366.3" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.03%)</title><rect x="363.3" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="366.3" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 0.09%)</title><rect x="363.8" y="451.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="366.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (47 samples, 0.60%)</title><rect x="364.8" y="451.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="367.8" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.08%)</title><rect x="365.1" y="435.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="368.1" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.08%)</title><rect x="365.1" y="419.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="368.1" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (33 samples, 0.42%)</title><rect x="366.2" y="435.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="369.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (33 samples, 0.42%)</title><rect x="366.2" y="419.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.2" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (13 samples, 0.17%)</title><rect x="367.1" y="403.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (10 samples, 0.13%)</title><rect x="369.3" y="403.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="372.3" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.03%)</title><rect x="370.1" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="373.1" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.04%)</title><rect x="370.4" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="373.4" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (4 samples, 0.05%)</title><rect x="371.3" y="435.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="374.3" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (4 samples, 0.05%)</title><rect x="371.3" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="374.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (3 samples, 0.04%)</title><rect x="371.4" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="374.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (3 samples, 0.04%)</title><rect x="371.9" y="451.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="374.9" y="462.0"></text>
</g>
<g>
<title>ip_output (325 samples, 4.13%)</title><rect x="372.3" y="467.0" width="48.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="375.3" y="478.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (307 samples, 3.90%)</title><rect x="373.5" y="451.0" width="46.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="376.5" y="462.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="373.7" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="376.7" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (304 samples, 3.87%)</title><rect x="374.0" y="435.0" width="45.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="377.0" y="446.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (302 samples, 3.84%)</title><rect x="374.1" y="419.0" width="45.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="377.1" y="430.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (264 samples, 3.36%)</title><rect x="375.6" y="403.0" width="39.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="378.6" y="414.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (263 samples, 3.35%)</title><rect x="375.8" y="387.0" width="39.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="378.8" y="398.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (259 samples, 3.29%)</title><rect x="376.4" y="371.0" width="38.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.4" y="382.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (259 samples, 3.29%)</title><rect x="376.4" y="355.0" width="38.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="379.4" y="366.0">__s..</text>
</g>
<g>
<title>net_rx_action (252 samples, 3.21%)</title><rect x="377.4" y="339.0" width="37.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.4" y="350.0">net..</text>
</g>
<g>
<title>process_backlog (251 samples, 3.19%)</title><rect x="377.6" y="323.0" width="37.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.6" y="334.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (248 samples, 3.15%)</title><rect x="377.9" y="307.0" width="37.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="380.9" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (246 samples, 3.13%)</title><rect x="378.2" y="291.0" width="36.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.2" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.09%)</title><rect x="378.5" y="275.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="381.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (236 samples, 3.00%)</title><rect x="379.5" y="275.0" width="35.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="382.5" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="380.1" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="383.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.04%)</title><rect x="380.4" y="259.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="383.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (221 samples, 2.81%)</title><rect x="380.9" y="259.0" width="33.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="383.9" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (221 samples, 2.81%)</title><rect x="380.9" y="243.0" width="33.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.9" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (214 samples, 2.72%)</title><rect x="381.0" y="227.0" width="32.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="384.0" y="238.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (209 samples, 2.66%)</title><rect x="381.0" y="211.0" width="31.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="384.0" y="222.0">ip..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.04%)</title><rect x="381.2" y="195.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="384.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (202 samples, 2.57%)</title><rect x="382.1" y="195.0" width="30.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="385.1" y="206.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.09%)</title><rect x="382.5" y="179.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="385.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.11%)</title><rect x="383.7" y="179.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="386.7" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.06%)</title><rect x="384.2" y="163.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="387.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (181 samples, 2.30%)</title><rect x="385.1" y="179.0" width="27.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.1" y="190.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (180 samples, 2.29%)</title><rect x="385.2" y="163.0" width="27.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.2" y="174.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (16 samples, 0.20%)</title><rect x="386.3" y="147.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="389.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (14 samples, 0.18%)</title><rect x="386.6" y="131.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="389.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.18%)</title><rect x="386.6" y="115.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="389.6" y="126.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.17%)</title><rect x="386.7" y="99.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="389.7" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.14%)</title><rect x="386.7" y="83.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.7" y="94.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="388.4" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="391.4" y="94.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.03%)</title><rect x="388.7" y="147.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="391.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="389.0" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="392.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (48 samples, 0.61%)</title><rect x="389.3" y="147.0" width="7.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="392.3" y="158.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="391.5" y="131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="394.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (29 samples, 0.37%)</title><rect x="391.8" y="131.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="394.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.22%)</title><rect x="392.7" y="115.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="395.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.04%)</title><rect x="392.7" y="99.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="395.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="392.7" y="83.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="395.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.15%)</title><rect x="393.2" y="99.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="396.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.15%)</title><rect x="393.2" y="83.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="396.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.04%)</title><rect x="394.5" y="67.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.5" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="394.5" y="51.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="397.5" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="394.5" y="35.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.5" y="46.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="395.0" y="99.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.0" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="395.3" y="115.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.04%)</title><rect x="395.6" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="398.6" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (95 samples, 1.21%)</title><rect x="396.6" y="147.0" width="14.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="399.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (95 samples, 1.21%)</title><rect x="396.6" y="131.0" width="14.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="399.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (95 samples, 1.21%)</title><rect x="396.6" y="115.0" width="14.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (95 samples, 1.21%)</title><rect x="396.6" y="99.0" width="14.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="399.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (93 samples, 1.18%)</title><rect x="396.9" y="83.0" width="14.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.9" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="410.9" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="413.9" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="411.2" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="414.2" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="411.2" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="414.2" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="411.5" y="147.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="414.5" y="158.0"></text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.06%)</title><rect x="412.4" y="211.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="415.4" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.08%)</title><rect x="413.1" y="227.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="416.1" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.05%)</title><rect x="413.4" y="211.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.4" y="222.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (3 samples, 0.04%)</title><rect x="413.4" y="195.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="416.4" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.05%)</title><rect x="414.3" y="259.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="417.3" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (2 samples, 0.03%)</title><rect x="414.6" y="243.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="417.6" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (27 samples, 0.34%)</title><rect x="415.2" y="403.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (26 samples, 0.33%)</title><rect x="415.2" y="387.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="418.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (16 samples, 0.20%)</title><rect x="415.7" y="371.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="418.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (11 samples, 0.14%)</title><rect x="416.1" y="355.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="419.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="416.3" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="419.3" y="350.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.05%)</title><rect x="416.6" y="339.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="419.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.05%)</title><rect x="416.6" y="323.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.05%)</title><rect x="416.6" y="307.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="419.6" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="417.5" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="420.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="418.1" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.1" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.05%)</title><rect x="418.5" y="371.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.5" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="418.5" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="421.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="418.8" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="421.8" y="366.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.04%)</title><rect x="419.6" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.6" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.09%)</title><rect x="420.0" y="451.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="423.0" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (6 samples, 0.08%)</title><rect x="420.0" y="435.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="423.0" y="446.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (5 samples, 0.06%)</title><rect x="420.0" y="419.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="423.0" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (4 samples, 0.05%)</title><rect x="420.2" y="403.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.2" y="414.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="421.7" y="515.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="424.7" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="421.7" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.7" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="422.0" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="425.0" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="422.6" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="425.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.11%)</title><rect x="423.2" y="531.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="426.2" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.03%)</title><rect x="423.3" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="426.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.06%)</title><rect x="423.8" y="515.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="426.8" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="423.9" y="499.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="426.9" y="510.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="423.9" y="483.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.9" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="424.1" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="427.1" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.08%)</title><rect x="424.5" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="427.5" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.13%)</title><rect x="425.7" y="579.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.7" y="590.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="425.7" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="428.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="426.0" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="429.0" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="426.6" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="429.6" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.13%)</title><rect x="427.4" y="627.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.4" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (10 samples, 0.13%)</title><rect x="427.4" y="611.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.4" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.13%)</title><rect x="427.4" y="595.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="430.4" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (6 samples, 0.08%)</title><rect x="428.0" y="579.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="431.0" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.10%)</title><rect x="429.0" y="643.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.0" y="654.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.09%)</title><rect x="429.0" y="627.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="429.0" y="611.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.0" y="622.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="429.0" y="595.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="432.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.04%)</title><rect x="430.4" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="433.4" y="686.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="430.4" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="433.4" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="430.4" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="433.4" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="430.5" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="433.5" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="430.8" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="433.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="430.8" y="739.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="433.8" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="430.8" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="433.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="431.1" y="803.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="431.1" y="787.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="431.1" y="771.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (7 samples, 0.09%)</title><rect x="431.1" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (7 samples, 0.09%)</title><rect x="431.1" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.1" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (7 samples, 0.09%)</title><rect x="431.1" y="723.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.sendResponse (1,269 samples, 16.14%)</title><rect x="432.2" y="851.0" width="190.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.2" y="862.0">ru/mail/polis/service/nik..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,261 samples, 16.04%)</title><rect x="433.4" y="835.0" width="189.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.4" y="846.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.13%)</title><rect x="435.1" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.13%)</title><rect x="435.1" y="803.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.13%)</title><rect x="435.1" y="787.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.04%)</title><rect x="436.1" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,233 samples, 15.68%)</title><rect x="436.6" y="819.0" width="185.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.6" y="830.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (35 samples, 0.45%)</title><rect x="436.6" y="803.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.08%)</title><rect x="440.9" y="787.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="440.9" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="440.9" y="755.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="440.9" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.08%)</title><rect x="440.9" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.9" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="441.5" y="707.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="444.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,198 samples, 15.24%)</title><rect x="441.8" y="803.0" width="179.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.8" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,197 samples, 15.23%)</title><rect x="442.0" y="787.0" width="179.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.0" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="442.1" y="771.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="445.1" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="442.1" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="445.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,184 samples, 15.06%)</title><rect x="442.6" y="771.0" width="177.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.6" y="782.0">one/nio/net/Session$Arr..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,181 samples, 15.02%)</title><rect x="443.0" y="755.0" width="177.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.0" y="766.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="444.4" y="739.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="447.4" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (38 samples, 0.48%)</title><rect x="444.7" y="739.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="447.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="446.9" y="723.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="449.9" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="447.7" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="450.7" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="448.0" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="451.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.13%)</title><rect x="448.4" y="723.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="451.4" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="448.7" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="451.7" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="449.0" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="452.0" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="449.3" y="707.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="452.3" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.04%)</title><rect x="449.9" y="723.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="452.9" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="450.4" y="739.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="453.4" y="750.0"></text>
</g>
<g>
<title>send (1,129 samples, 14.36%)</title><rect x="450.7" y="739.0" width="169.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="453.7" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,120 samples, 14.25%)</title><rect x="452.0" y="723.0" width="168.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.0" y="734.0">entry_SYSCALL_64_after..</text>
</g>
<g>
<title>do_syscall_64 (1,119 samples, 14.23%)</title><rect x="452.2" y="707.0" width="167.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="455.2" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,105 samples, 14.05%)</title><rect x="454.3" y="691.0" width="165.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.3" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,101 samples, 14.00%)</title><rect x="454.3" y="675.0" width="165.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="457.3" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="455.0" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.0" y="670.0"></text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.03%)</title><rect x="455.5" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="458.5" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (1,075 samples, 13.67%)</title><rect x="455.8" y="659.0" width="161.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="458.8" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="456.2" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="459.2" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,045 samples, 13.29%)</title><rect x="456.5" y="643.0" width="156.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="459.5" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="456.7" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="459.7" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,041 samples, 13.24%)</title><rect x="457.1" y="627.0" width="156.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="460.1" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.10%)</title><rect x="457.7" y="611.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="460.7" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="459.1" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="462.1" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="459.4" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="462.4" y="622.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="459.8" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="462.8" y="622.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 0.08%)</title><rect x="460.3" y="611.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="463.3" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.04%)</title><rect x="461.2" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="464.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,008 samples, 12.82%)</title><rect x="461.6" y="611.0" width="151.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.6" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="465.1" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="468.1" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="465.1" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="468.1" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.09%)</title><rect x="465.8" y="595.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="468.8" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.06%)</title><rect x="466.0" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.0" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (6 samples, 0.08%)</title><rect x="467.2" y="595.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="470.2" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6 samples, 0.08%)</title><rect x="467.2" y="579.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="470.2" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.43%)</title><rect x="468.1" y="595.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.1" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (33 samples, 0.42%)</title><rect x="468.2" y="579.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="471.2" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (13 samples, 0.17%)</title><rect x="469.1" y="563.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.08%)</title><rect x="469.1" y="547.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.1" y="558.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="469.7" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.7" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="470.2" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.2" y="558.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.04%)</title><rect x="470.5" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.5" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.08%)</title><rect x="471.1" y="563.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="474.1" y="574.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.06%)</title><rect x="472.0" y="563.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="475.0" y="574.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.06%)</title><rect x="472.0" y="547.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.0" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="472.7" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.7" y="574.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="473.2" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="476.2" y="606.0"></text>
</g>
<g>
<title>tcp_push (915 samples, 11.64%)</title><rect x="473.9" y="595.0" width="137.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="476.9" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (910 samples, 11.57%)</title><rect x="474.4" y="579.0" width="136.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.4" y="590.0">__tcp_push_pendin..</text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.04%)</title><rect x="474.5" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="477.5" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_stop (3 samples, 0.04%)</title><rect x="475.1" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="478.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (900 samples, 11.45%)</title><rect x="475.9" y="563.0" width="135.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.9" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="477.8" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="480.8" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (840 samples, 10.68%)</title><rect x="478.1" y="547.0" width="126.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="481.1" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="480.4" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.4" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="481.0" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="484.0" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (808 samples, 10.28%)</title><rect x="481.3" y="531.0" width="121.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="484.3" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (804 samples, 10.23%)</title><rect x="481.3" y="515.0" width="120.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="484.3" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.06%)</title><rect x="482.5" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.5" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.05%)</title><rect x="482.6" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (788 samples, 10.02%)</title><rect x="483.2" y="499.0" width="118.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="486.2" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (107 samples, 1.36%)</title><rect x="483.7" y="483.0" width="16.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="486.7" y="494.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.04%)</title><rect x="483.7" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.7" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.04%)</title><rect x="484.1" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="487.1" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.04%)</title><rect x="484.6" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="487.6" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (96 samples, 1.22%)</title><rect x="485.0" y="467.0" width="14.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="488.0" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (12 samples, 0.15%)</title><rect x="485.9" y="451.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="488.9" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (12 samples, 0.15%)</title><rect x="485.9" y="435.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="488.9" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (66 samples, 0.84%)</title><rect x="487.9" y="451.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="490.9" y="462.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (4 samples, 0.05%)</title><rect x="487.9" y="435.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="490.9" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (61 samples, 0.78%)</title><rect x="488.5" y="435.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="491.5" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (12 samples, 0.15%)</title><rect x="489.7" y="419.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="492.7" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (3 samples, 0.04%)</title><rect x="491.5" y="419.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.5" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (6 samples, 0.08%)</title><rect x="492.1" y="419.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="495.1" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (20 samples, 0.25%)</title><rect x="493.0" y="419.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="496.0" y="430.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.04%)</title><rect x="494.0" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="497.0" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (10 samples, 0.13%)</title><rect x="494.5" y="403.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="497.5" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.04%)</title><rect x="495.5" y="387.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.5" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (8 samples, 0.10%)</title><rect x="496.0" y="419.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.0" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.04%)</title><rect x="497.2" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="500.2" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="497.8" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="500.8" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (9 samples, 0.11%)</title><rect x="498.1" y="451.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="501.1" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="498.2" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="501.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (6 samples, 0.08%)</title><rect x="498.5" y="435.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="501.5" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="498.5" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="501.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (4 samples, 0.05%)</title><rect x="498.8" y="419.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="499.4" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="502.4" y="478.0"></text>
</g>
<g>
<title>ip_output (676 samples, 8.60%)</title><rect x="499.7" y="483.0" width="101.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="502.7" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (658 samples, 8.37%)</title><rect x="500.5" y="467.0" width="98.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="503.5" y="478.0">ip_finish_ou..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.06%)</title><rect x="500.6" y="451.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="503.6" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (651 samples, 8.28%)</title><rect x="501.4" y="451.0" width="97.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.4" y="462.0">__ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (647 samples, 8.23%)</title><rect x="501.7" y="435.0" width="97.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="504.7" y="446.0">ip_finish_o..</text>
</g>
<g>
<title>__local_bh_enable_ip (581 samples, 7.39%)</title><rect x="504.1" y="419.0" width="87.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="507.1" y="430.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (578 samples, 7.35%)</title><rect x="504.5" y="403.0" width="86.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="507.5" y="414.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (572 samples, 7.28%)</title><rect x="505.4" y="387.0" width="85.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.4" y="398.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (571 samples, 7.26%)</title><rect x="505.4" y="371.0" width="85.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="508.4" y="382.0">__softirqe..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="507.2" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.2" y="366.0"></text>
</g>
<g>
<title>net_rx_action (552 samples, 7.02%)</title><rect x="507.5" y="355.0" width="82.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.5" y="366.0">net_rx_ac..</text>
</g>
<g>
<title>process_backlog (547 samples, 6.96%)</title><rect x="508.3" y="339.0" width="82.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="511.3" y="350.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb (538 samples, 6.84%)</title><rect x="509.0" y="323.0" width="80.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="512.0" y="334.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (534 samples, 6.79%)</title><rect x="509.6" y="307.0" width="80.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="512.6" y="318.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (14 samples, 0.18%)</title><rect x="510.1" y="291.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="513.1" y="302.0"></text>
</g>
<g>
<title>ip_rcv (513 samples, 6.53%)</title><rect x="512.2" y="291.0" width="77.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="515.2" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="513.1" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="516.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (485 samples, 6.17%)</title><rect x="513.4" y="275.0" width="72.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="516.4" y="286.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (481 samples, 6.12%)</title><rect x="513.7" y="259.0" width="72.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="516.7" y="270.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (467 samples, 5.94%)</title><rect x="514.1" y="243.0" width="70.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.1" y="254.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (464 samples, 5.90%)</title><rect x="514.1" y="227.0" width="69.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="517.1" y="238.0">ip_prot..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="515.3" y="211.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.3" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="515.6" y="211.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="518.6" y="222.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.04%)</title><rect x="516.1" y="211.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="519.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (447 samples, 5.69%)</title><rect x="516.7" y="211.0" width="67.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="519.7" y="222.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (16 samples, 0.20%)</title><rect x="518.2" y="195.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.2" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.05%)</title><rect x="520.0" y="179.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="523.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13 samples, 0.17%)</title><rect x="520.9" y="195.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.9" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.06%)</title><rect x="521.1" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="524.1" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="521.8" y="179.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="524.8" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.05%)</title><rect x="522.3" y="179.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (405 samples, 5.15%)</title><rect x="522.9" y="195.0" width="60.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="525.9" y="206.0">tcp_v4..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="523.3" y="179.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.3" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.03%)</title><rect x="523.6" y="179.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.6" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (397 samples, 5.05%)</title><rect x="524.1" y="179.0" width="59.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="527.1" y="190.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (10 samples, 0.13%)</title><rect x="525.7" y="163.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="528.7" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.11%)</title><rect x="525.9" y="147.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="528.9" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.09%)</title><rect x="526.2" y="131.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="529.2" y="142.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.08%)</title><rect x="526.3" y="115.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="529.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="526.3" y="99.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (86 samples, 1.09%)</title><rect x="527.5" y="163.0" width="12.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.5" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="529.2" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="532.2" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="529.6" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="532.6" y="158.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.04%)</title><rect x="529.9" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="532.9" y="158.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="530.4" y="147.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="533.4" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (59 samples, 0.75%)</title><rect x="531.1" y="147.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="534.1" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (33 samples, 0.42%)</title><rect x="533.1" y="131.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="536.1" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.11%)</title><rect x="533.1" y="115.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="536.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (8 samples, 0.10%)</title><rect x="533.2" y="99.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="536.2" y="110.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="534.0" y="83.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="537.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (22 samples, 0.28%)</title><rect x="534.4" y="115.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (20 samples, 0.25%)</title><rect x="534.4" y="99.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.4" y="110.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.05%)</title><rect x="536.8" y="83.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="539.8" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="536.8" y="67.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.8" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="537.1" y="67.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="540.1" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="537.1" y="51.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="540.1" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="537.4" y="99.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="540.4" y="110.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="537.7" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="540.7" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="538.0" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="541.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.06%)</title><rect x="538.6" y="131.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="541.6" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="539.5" y="131.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="542.5" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (266 samples, 3.38%)</title><rect x="540.6" y="163.0" width="39.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="543.6" y="174.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (265 samples, 3.37%)</title><rect x="540.7" y="147.0" width="39.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.7" y="158.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (265 samples, 3.37%)</title><rect x="540.7" y="131.0" width="39.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="543.7" y="142.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (265 samples, 3.37%)</title><rect x="540.7" y="115.0" width="39.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="543.7" y="126.0">__w..</text>
</g>
<g>
<title>__lock_text_start (263 samples, 3.35%)</title><rect x="540.9" y="99.0" width="39.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="543.9" y="110.0">__l..</text>
</g>
<g>
<title>tcp_event_data_recv (7 samples, 0.09%)</title><rect x="580.5" y="163.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="583.5" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.05%)</title><rect x="581.5" y="163.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="584.5" y="174.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="581.7" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.7" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="582.1" y="163.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="585.1" y="174.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="582.6" y="163.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="583.0" y="163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="586.0" y="174.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="583.3" y="163.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="586.3" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.04%)</title><rect x="583.8" y="227.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.8" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.13%)</title><rect x="584.4" y="243.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="587.4" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.06%)</title><rect x="584.4" y="227.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.4" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.06%)</title><rect x="584.4" y="211.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.4" y="222.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.05%)</title><rect x="585.1" y="227.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="588.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.04%)</title><rect x="586.2" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="589.2" y="286.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (4 samples, 0.05%)</title><rect x="586.6" y="275.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="589.6" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="587.2" y="275.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="590.2" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (4 samples, 0.05%)</title><rect x="587.7" y="275.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="590.7" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.08%)</title><rect x="588.3" y="275.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.3" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (3 samples, 0.04%)</title><rect x="588.3" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="591.3" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.04%)</title><rect x="588.3" y="243.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="591.3" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (3 samples, 0.04%)</title><rect x="588.7" y="259.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="591.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="589.2" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="592.2" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="589.5" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="592.5" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.05%)</title><rect x="589.8" y="323.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="592.8" y="334.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.04%)</title><rect x="590.4" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="593.4" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (49 samples, 0.62%)</title><rect x="591.3" y="419.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="594.3" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (47 samples, 0.60%)</title><rect x="591.3" y="403.0" width="7.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="594.3" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 0.28%)</title><rect x="592.5" y="387.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.5" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (16 samples, 0.20%)</title><rect x="592.8" y="371.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="595.8" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.04%)</title><rect x="592.9" y="355.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="595.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.11%)</title><rect x="593.4" y="355.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="596.4" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.10%)</title><rect x="593.5" y="339.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="596.5" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.10%)</title><rect x="593.5" y="323.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="596.5" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.05%)</title><rect x="595.2" y="371.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="598.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.04%)</title><rect x="595.8" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="598.8" y="398.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="596.4" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.4" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.11%)</title><rect x="596.7" y="387.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="599.7" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.06%)</title><rect x="597.1" y="371.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.1" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="598.0" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.0" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="598.3" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="601.3" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="598.8" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.8" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="599.2" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.2" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.14%)</title><rect x="599.5" y="467.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="602.5" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.05%)</title><rect x="599.5" y="451.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="602.5" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="599.8" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="602.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (6 samples, 0.08%)</title><rect x="600.3" y="451.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.3" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (5 samples, 0.06%)</title><rect x="600.5" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.5" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (5 samples, 0.06%)</title><rect x="600.5" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="603.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="601.2" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="604.2" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="601.5" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="604.5" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="602.0" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.0" y="526.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.09%)</title><rect x="602.6" y="531.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="605.6" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="602.7" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="605.7" y="526.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.05%)</title><rect x="603.0" y="515.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="606.0" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="603.6" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.6" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="603.9" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="606.9" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="604.2" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="607.2" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="604.7" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="607.7" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="605.1" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="608.1" y="558.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="605.4" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="608.4" y="558.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="605.7" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="608.7" y="558.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="606.0" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.0" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (18 samples, 0.23%)</title><rect x="606.3" y="547.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.3" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (10 samples, 0.13%)</title><rect x="607.5" y="531.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="610.5" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.09%)</title><rect x="608.0" y="515.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="611.0" y="526.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.09%)</title><rect x="608.0" y="499.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="611.0" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="609.2" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="612.2" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.10%)</title><rect x="609.5" y="547.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="612.5" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.03%)</title><rect x="611.0" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="614.0" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.13%)</title><rect x="611.3" y="595.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="614.3" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.10%)</title><rect x="611.4" y="579.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="614.4" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="612.9" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.9" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (23 samples, 0.29%)</title><rect x="613.5" y="643.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="616.5" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (21 samples, 0.27%)</title><rect x="613.8" y="627.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="616.8" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (21 samples, 0.27%)</title><rect x="613.8" y="611.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="616.8" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (15 samples, 0.19%)</title><rect x="614.7" y="595.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="617.7" y="606.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.03%)</title><rect x="615.9" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="618.9" y="590.0"></text>
</g>
<g>
<title>aa_profile_af_perm (5 samples, 0.06%)</title><rect x="616.2" y="579.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="619.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.20%)</title><rect x="617.1" y="659.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.1" y="670.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.13%)</title><rect x="617.3" y="643.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.3" y="654.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.13%)</title><rect x="617.3" y="627.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="620.3" y="638.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.13%)</title><rect x="617.3" y="611.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="620.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="618.8" y="643.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="621.8" y="654.0"></text>
</g>
<g>
<title>fput (3 samples, 0.04%)</title><rect x="619.5" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="622.5" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.11%)</title><rect x="620.3" y="771.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="623.3" y="782.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="620.3" y="755.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="623.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="620.7" y="755.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="623.7" y="766.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="620.9" y="739.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="623.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.08%)</title><rect x="621.6" y="819.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="621.8" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="621.8" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.06%)</title><rect x="621.8" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.06%)</title><rect x="621.8" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.8" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (5 samples, 0.06%)</title><rect x="621.8" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getReplicas (3 samples, 0.04%)</title><rect x="622.7" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getResponseFromNodes (2,249 samples, 28.61%)</title><rect x="623.1" y="851.0" width="337.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.1" y="862.0">ru/mail/polis/service/nik27090/RendezvousTopol..</text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.20%)</title><rect x="626.1" y="835.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.20%)</title><rect x="626.1" y="819.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.1" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.20%)</title><rect x="626.1" y="803.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.1" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.20%)</title><rect x="626.1" y="787.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.1" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.20%)</title><rect x="626.1" y="771.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.proxy (4 samples, 0.05%)</title><rect x="627.9" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.proxy (2,213 samples, 28.15%)</title><rect x="628.5" y="835.0" width="332.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.5" y="846.0">ru/mail/polis/service/nik27090/HttpHelper.proxy</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="628.5" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1426329391.invoke (3 samples, 0.04%)</title><rect x="628.5" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1259475182.invoke (3 samples, 0.04%)</title><rect x="628.5" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="628.5" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (3 samples, 0.04%)</title><rect x="628.5" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.04%)</title><rect x="628.5" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="628.7" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="631.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.05%)</title><rect x="629.0" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="629.0" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="629.0" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,199 samples, 27.97%)</title><rect x="629.6" y="819.0" width="330.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.6" y="830.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,198 samples, 27.96%)</title><rect x="629.7" y="803.0" width="329.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.7" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (16 samples, 0.20%)</title><rect x="631.8" y="787.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.20%)</title><rect x="631.8" y="771.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.20%)</title><rect x="631.8" y="755.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.03%)</title><rect x="633.9" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (537 samples, 6.83%)</title><rect x="634.2" y="787.0" width="80.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.2" y="798.0">one/nio/h..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.11%)</title><rect x="640.2" y="771.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="643.2" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.11%)</title><rect x="640.2" y="755.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="643.2" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.11%)</title><rect x="640.2" y="739.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="643.2" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.09%)</title><rect x="640.2" y="723.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="643.2" y="734.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (6 samples, 0.08%)</title><rect x="640.4" y="707.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="643.4" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.03%)</title><rect x="640.5" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="643.5" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="640.5" y="675.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="643.5" y="686.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (2 samples, 0.03%)</title><rect x="640.5" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="643.5" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (2 samples, 0.03%)</title><rect x="640.5" y="643.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="643.5" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="641.0" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="644.0" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="641.3" y="723.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="644.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (485 samples, 6.17%)</title><rect x="641.6" y="771.0" width="72.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.6" y="782.0">one/nio/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (14 samples, 0.18%)</title><rect x="642.0" y="755.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="645.0" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (40 samples, 0.51%)</title><rect x="644.1" y="755.0" width="6.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="647.1" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="645.8" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="648.8" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (26 samples, 0.33%)</title><rect x="646.1" y="739.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="649.1" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (6 samples, 0.08%)</title><rect x="648.3" y="723.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="651.3" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="649.2" y="723.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="652.2" y="734.0"></text>
</g>
<g>
<title>__recv (424 samples, 5.39%)</title><rect x="650.1" y="755.0" width="63.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="653.1" y="766.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (404 samples, 5.14%)</title><rect x="653.1" y="739.0" width="60.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="656.1" y="750.0">entry_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.04%)</title><rect x="653.1" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="656.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (401 samples, 5.10%)</title><rect x="653.6" y="723.0" width="60.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.6" y="734.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_recvfrom (393 samples, 5.00%)</title><rect x="654.8" y="707.0" width="59.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.8" y="718.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (389 samples, 4.95%)</title><rect x="654.9" y="691.0" width="58.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="657.9" y="702.0">__sys_..</text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="656.0" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="659.0" y="686.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="656.4" y="675.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="659.4" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (363 samples, 4.62%)</title><rect x="657.0" y="675.0" width="54.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="660.0" y="686.0">sock_..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.05%)</title><rect x="657.3" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="660.3" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (332 samples, 4.22%)</title><rect x="657.9" y="659.0" width="49.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="660.9" y="670.0">inet6..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="658.5" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="661.5" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (323 samples, 4.11%)</title><rect x="659.3" y="643.0" width="48.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="662.3" y="654.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (28 samples, 0.36%)</title><rect x="664.4" y="627.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="667.4" y="638.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="664.4" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="667.4" y="622.0"></text>
</g>
<g>
<title>skb_release_all (26 samples, 0.33%)</title><rect x="664.7" y="611.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="667.7" y="622.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.04%)</title><rect x="664.7" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.7" y="606.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="665.1" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="668.1" y="606.0"></text>
</g>
<g>
<title>skb_release_head_state (12 samples, 0.15%)</title><rect x="665.9" y="595.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="668.9" y="606.0"></text>
</g>
<g>
<title>dst_release (12 samples, 0.15%)</title><rect x="665.9" y="579.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="668.9" y="590.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.08%)</title><rect x="667.7" y="595.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="670.7" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.03%)</title><rect x="668.6" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="671.6" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.06%)</title><rect x="668.9" y="627.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="671.9" y="638.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="669.6" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.6" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="670.1" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="673.1" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="670.1" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="673.1" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="670.5" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="673.5" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (137 samples, 1.74%)</title><rect x="671.0" y="627.0" width="20.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="674.0" y="638.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="671.7" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="674.7" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="672.0" y="611.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="675.0" y="622.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.05%)</title><rect x="672.8" y="611.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="675.8" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="672.8" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="675.8" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="673.4" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="676.4" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="673.7" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="676.7" y="622.0"></text>
</g>
<g>
<title>remove_wait_queue (7 samples, 0.09%)</title><rect x="674.0" y="611.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.0" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="674.0" y="595.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="677.0" y="606.0"></text>
</g>
<g>
<title>wait_woken (109 samples, 1.39%)</title><rect x="675.2" y="611.0" width="16.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="678.2" y="622.0"></text>
</g>
<g>
<title>del_timer_sync (9 samples, 0.11%)</title><rect x="676.5" y="595.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.5" y="606.0"></text>
</g>
<g>
<title>schedule_timeout (90 samples, 1.14%)</title><rect x="678.0" y="595.0" width="13.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="681.0" y="606.0"></text>
</g>
<g>
<title>__mod_timer (24 samples, 0.31%)</title><rect x="678.5" y="579.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="681.5" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.29%)</title><rect x="678.6" y="563.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="681.6" y="574.0"></text>
</g>
<g>
<title>del_timer_sync (14 samples, 0.18%)</title><rect x="682.1" y="579.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.1" y="590.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (14 samples, 0.18%)</title><rect x="682.1" y="563.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="685.1" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.11%)</title><rect x="682.7" y="547.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="685.7" y="558.0"></text>
</g>
<g>
<title>schedule (45 samples, 0.57%)</title><rect x="684.2" y="579.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="687.2" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (41 samples, 0.52%)</title><rect x="684.8" y="563.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="687.8" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (30 samples, 0.38%)</title><rect x="686.5" y="547.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.5" y="558.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (4 samples, 0.05%)</title><rect x="691.0" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="694.0" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (41 samples, 0.52%)</title><rect x="691.6" y="627.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="694.6" y="638.0"></text>
</g>
<g>
<title>__skb_datagram_iter (40 samples, 0.51%)</title><rect x="691.7" y="611.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.7" y="622.0"></text>
</g>
<g>
<title>simple_copy_to_iter (29 samples, 0.37%)</title><rect x="693.4" y="595.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="696.4" y="606.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.14%)</title><rect x="693.4" y="579.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="696.4" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.10%)</title><rect x="693.8" y="563.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.8" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (15 samples, 0.19%)</title><rect x="695.2" y="579.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="698.2" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.17%)</title><rect x="695.5" y="563.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="698.5" y="574.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="697.4" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.4" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (48 samples, 0.61%)</title><rect x="697.9" y="627.0" width="7.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="700.9" y="638.0"></text>
</g>
<g>
<title>tcp_send_ack (44 samples, 0.56%)</title><rect x="698.5" y="611.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="701.5" y="622.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (44 samples, 0.56%)</title><rect x="698.5" y="595.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.5" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.06%)</title><rect x="698.5" y="579.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="701.5" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="698.6" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="701.6" y="574.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="698.9" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="701.9" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="698.9" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.9" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (39 samples, 0.50%)</title><rect x="699.2" y="579.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.2" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (37 samples, 0.47%)</title><rect x="699.5" y="563.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.5" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (37 samples, 0.47%)</title><rect x="699.5" y="547.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.5" y="558.0"></text>
</g>
<g>
<title>ip_local_out (37 samples, 0.47%)</title><rect x="699.5" y="531.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="702.5" y="542.0"></text>
</g>
<g>
<title>__ip_local_out (10 samples, 0.13%)</title><rect x="699.5" y="515.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="702.5" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.13%)</title><rect x="699.5" y="499.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.5" y="510.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.05%)</title><rect x="699.8" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.8" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.05%)</title><rect x="699.8" y="467.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.8" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.04%)</title><rect x="699.8" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="702.8" y="462.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.04%)</title><rect x="699.8" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="702.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (3 samples, 0.04%)</title><rect x="700.6" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.6" y="494.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="700.6" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="703.6" y="478.0"></text>
</g>
<g>
<title>ip_output (27 samples, 0.34%)</title><rect x="701.0" y="515.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="704.0" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (22 samples, 0.28%)</title><rect x="701.3" y="499.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="704.3" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (21 samples, 0.27%)</title><rect x="701.5" y="483.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="704.5" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (21 samples, 0.27%)</title><rect x="701.5" y="467.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.5" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (16 samples, 0.20%)</title><rect x="701.9" y="451.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="704.9" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (16 samples, 0.20%)</title><rect x="701.9" y="435.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="704.9" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (15 samples, 0.19%)</title><rect x="702.1" y="419.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.1" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (15 samples, 0.19%)</title><rect x="702.1" y="403.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="705.1" y="414.0"></text>
</g>
<g>
<title>net_rx_action (15 samples, 0.19%)</title><rect x="702.1" y="387.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.1" y="398.0"></text>
</g>
<g>
<title>process_backlog (14 samples, 0.18%)</title><rect x="702.2" y="371.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.2" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (14 samples, 0.18%)</title><rect x="702.2" y="355.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.2" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (14 samples, 0.18%)</title><rect x="702.2" y="339.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.2" y="350.0"></text>
</g>
<g>
<title>ip_rcv (12 samples, 0.15%)</title><rect x="702.4" y="323.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.4" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (12 samples, 0.15%)</title><rect x="702.4" y="307.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="705.4" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (12 samples, 0.15%)</title><rect x="702.4" y="291.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="705.4" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 0.13%)</title><rect x="702.4" y="275.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="705.4" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (10 samples, 0.13%)</title><rect x="702.4" y="259.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="705.4" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 0.11%)</title><rect x="702.5" y="243.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="705.5" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 0.10%)</title><rect x="702.7" y="227.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="705.7" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 0.10%)</title><rect x="702.7" y="211.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="705.7" y="222.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.10%)</title><rect x="702.7" y="195.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.7" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.08%)</title><rect x="703.0" y="179.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="706.0" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.08%)</title><rect x="703.0" y="163.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="706.0" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="703.0" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.0" y="158.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.05%)</title><rect x="703.3" y="147.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="706.3" y="158.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.05%)</title><rect x="703.3" y="131.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="706.3" y="142.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.04%)</title><rect x="703.4" y="115.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="706.4" y="126.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="703.4" y="99.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="706.4" y="110.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="703.9" y="275.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="706.9" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="704.3" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="707.3" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="704.3" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="707.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="704.8" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="707.8" y="510.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="704.8" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="707.8" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (14 samples, 0.18%)</title><rect x="705.1" y="627.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="708.1" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.08%)</title><rect x="706.3" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="709.3" y="622.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="706.9" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="709.9" y="606.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.03%)</title><rect x="707.5" y="627.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="710.5" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (25 samples, 0.32%)</title><rect x="707.8" y="659.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="710.8" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (25 samples, 0.32%)</title><rect x="707.8" y="643.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="710.8" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (25 samples, 0.32%)</title><rect x="707.8" y="627.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="710.8" y="638.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (18 samples, 0.23%)</title><rect x="708.8" y="611.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.8" y="622.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.03%)</title><rect x="710.0" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="713.0" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (8 samples, 0.10%)</title><rect x="710.3" y="595.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="713.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.15%)</title><rect x="711.5" y="675.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="714.5" y="686.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.10%)</title><rect x="711.7" y="659.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="714.7" y="670.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="711.7" y="643.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="714.7" y="654.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.10%)</title><rect x="711.7" y="627.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="712.9" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="715.9" y="670.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="713.5" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="716.5" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="713.8" y="755.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="716.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (3 samples, 0.04%)</title><rect x="714.4" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (162 samples, 2.06%)</title><rect x="714.8" y="787.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.8" y="798.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.09%)</title><rect x="715.3" y="771.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="715.3" y="755.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="715.4" y="739.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="716.0" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="716.0" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.23%)</title><rect x="716.3" y="771.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.05%)</title><rect x="716.6" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.15%)</title><rect x="717.2" y="755.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.11%)</title><rect x="717.2" y="739.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="718.1" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="718.6" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (58 samples, 0.74%)</title><rect x="719.0" y="771.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="719.2" y="755.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="722.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 0.66%)</title><rect x="719.9" y="755.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (51 samples, 0.65%)</title><rect x="720.1" y="739.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (20 samples, 0.25%)</title><rect x="727.7" y="771.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (9 samples, 0.11%)</title><rect x="730.7" y="771.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.7" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="731.6" y="755.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="734.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (47 samples, 0.60%)</title><rect x="732.1" y="771.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (38 samples, 0.48%)</title><rect x="733.3" y="755.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (38 samples, 0.48%)</title><rect x="733.3" y="739.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (25 samples, 0.32%)</title><rect x="734.9" y="723.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (25 samples, 0.32%)</title><rect x="734.9" y="707.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.9" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (25 samples, 0.32%)</title><rect x="734.9" y="691.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (85 samples, 1.08%)</title><rect x="739.1" y="787.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 0.11%)</title><rect x="741.5" y="771.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="742.3" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.3" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="742.3" y="739.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="745.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (55 samples, 0.70%)</title><rect x="742.9" y="771.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.10%)</title><rect x="743.8" y="755.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (3 samples, 0.04%)</title><rect x="744.5" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="745.0" y="755.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="745.4" y="739.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="748.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (34 samples, 0.43%)</title><rect x="746.0" y="755.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (34 samples, 0.43%)</title><rect x="746.0" y="739.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="746.3" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (29 samples, 0.37%)</title><rect x="746.8" y="723.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (18 samples, 0.23%)</title><rect x="748.4" y="707.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (10 samples, 0.13%)</title><rect x="749.6" y="691.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="752.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.05%)</title><rect x="751.1" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="751.4" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (20 samples, 0.25%)</title><rect x="751.9" y="787.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.22%)</title><rect x="752.3" y="771.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (17 samples, 0.22%)</title><rect x="752.3" y="755.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (13 samples, 0.17%)</title><rect x="752.9" y="739.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (13 samples, 0.17%)</title><rect x="752.9" y="723.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.9" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (13 samples, 0.17%)</title><rect x="752.9" y="707.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.04%)</title><rect x="754.9" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.9" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (153 samples, 1.95%)</title><rect x="755.3" y="787.0" width="23.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.3" y="798.0">o..</text>
</g>
<g>
<title>setsockopt (147 samples, 1.87%)</title><rect x="756.2" y="771.0" width="22.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="759.2" y="782.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (137 samples, 1.74%)</title><rect x="757.7" y="755.0" width="20.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="760.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (3 samples, 0.04%)</title><rect x="757.7" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="760.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (134 samples, 1.70%)</title><rect x="758.2" y="739.0" width="20.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="761.2" y="750.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (127 samples, 1.62%)</title><rect x="759.2" y="723.0" width="19.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="762.2" y="734.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (4 samples, 0.05%)</title><rect x="759.2" y="707.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="762.2" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (118 samples, 1.50%)</title><rect x="759.8" y="707.0" width="17.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="762.8" y="718.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (6 samples, 0.08%)</title><rect x="760.9" y="691.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="763.9" y="702.0"></text>
</g>
<g>
<title>__get_user_4 (8 samples, 0.10%)</title><rect x="761.8" y="691.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.8" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (8 samples, 0.10%)</title><rect x="763.0" y="691.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="766.0" y="702.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="764.5" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="767.5" y="702.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="764.9" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="767.9" y="702.0"></text>
</g>
<g>
<title>security_socket_setsockopt (29 samples, 0.37%)</title><rect x="765.5" y="691.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="768.5" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (27 samples, 0.34%)</title><rect x="765.8" y="675.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="768.8" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (26 samples, 0.33%)</title><rect x="766.0" y="659.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="769.0" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (21 samples, 0.27%)</title><rect x="766.7" y="643.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="769.7" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (7 samples, 0.09%)</title><rect x="768.9" y="627.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="771.9" y="638.0"></text>
</g>
<g>
<title>sock_set_timeout (3 samples, 0.04%)</title><rect x="769.9" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="772.9" y="702.0"></text>
</g>
<g>
<title>sock_setsockopt (37 samples, 0.47%)</title><rect x="770.4" y="691.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="773.4" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (10 samples, 0.13%)</title><rect x="771.1" y="675.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.1" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.05%)</title><rect x="772.6" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="775.6" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="772.8" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="775.8" y="670.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="773.2" y="675.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="776.2" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="773.5" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="776.5" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (11 samples, 0.14%)</title><rect x="773.8" y="675.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="776.8" y="686.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="774.1" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="777.1" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.06%)</title><rect x="774.4" y="659.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="777.4" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="775.2" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="778.2" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="775.5" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="778.5" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.14%)</title><rect x="775.9" y="691.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="778.9" y="702.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.06%)</title><rect x="776.1" y="675.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.1" y="686.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="776.1" y="659.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.1" y="670.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="776.1" y="643.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="776.8" y="675.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.8" y="686.0"></text>
</g>
<g>
<title>sock_setsockopt (4 samples, 0.05%)</title><rect x="777.6" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="780.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,173 samples, 14.92%)</title><rect x="778.3" y="787.0" width="176.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.3" y="798.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.09%)</title><rect x="779.7" y="771.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="782.7" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (26 samples, 0.33%)</title><rect x="780.7" y="771.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="783.7" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="782.7" y="755.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="785.7" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.13%)</title><rect x="783.1" y="755.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="786.1" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="784.0" y="739.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="787.0" y="750.0"></text>
</g>
<g>
<title>send (1,129 samples, 14.36%)</title><rect x="784.9" y="771.0" width="169.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="787.9" y="782.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,107 samples, 14.08%)</title><rect x="788.2" y="755.0" width="166.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="791.2" y="766.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>do_syscall_64 (1,106 samples, 14.07%)</title><rect x="788.4" y="739.0" width="166.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="791.4" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,085 samples, 13.80%)</title><rect x="789.1" y="723.0" width="162.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="792.1" y="734.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,081 samples, 13.75%)</title><rect x="789.3" y="707.0" width="162.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="792.3" y="718.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,068 samples, 13.58%)</title><rect x="790.5" y="691.0" width="160.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="793.5" y="702.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (1,057 samples, 13.44%)</title><rect x="790.8" y="675.0" width="158.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.8" y="686.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="791.7" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.7" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,049 samples, 13.34%)</title><rect x="792.0" y="659.0" width="157.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="795.0" y="670.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="792.4" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="795.4" y="654.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="793.0" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="796.0" y="654.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="793.5" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="796.5" y="654.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.04%)</title><rect x="793.8" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="796.8" y="654.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (7 samples, 0.09%)</title><rect x="794.2" y="643.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="797.2" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,026 samples, 13.05%)</title><rect x="795.3" y="643.0" width="154.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="798.3" y="654.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.08%)</title><rect x="797.7" y="627.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="800.7" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.08%)</title><rect x="797.7" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="800.7" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="798.6" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="801.6" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (14 samples, 0.18%)</title><rect x="798.9" y="627.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="801.9" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.10%)</title><rect x="799.0" y="611.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="802.0" y="622.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="800.2" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="803.2" y="622.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.04%)</title><rect x="800.5" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="803.5" y="622.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.04%)</title><rect x="801.4" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="804.4" y="638.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="801.4" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="804.4" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (46 samples, 0.59%)</title><rect x="801.9" y="627.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.9" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (42 samples, 0.53%)</title><rect x="802.5" y="611.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="805.5" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (17 samples, 0.22%)</title><rect x="803.1" y="595.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="806.1" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.15%)</title><rect x="803.1" y="579.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="806.1" y="590.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="804.6" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="807.6" y="574.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.05%)</title><rect x="805.0" y="579.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="808.0" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.14%)</title><rect x="805.6" y="595.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="808.6" y="606.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.05%)</title><rect x="807.3" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="810.3" y="606.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.05%)</title><rect x="807.3" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="810.3" y="590.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (3 samples, 0.04%)</title><rect x="807.9" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.9" y="606.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="808.3" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="811.3" y="606.0"></text>
</g>
<g>
<title>skb_entail (7 samples, 0.09%)</title><rect x="808.8" y="627.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.8" y="638.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="809.8" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="812.8" y="638.0"></text>
</g>
<g>
<title>tcp_push (910 samples, 11.57%)</title><rect x="810.6" y="627.0" width="136.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.6" y="638.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (908 samples, 11.55%)</title><rect x="810.7" y="611.0" width="136.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="813.7" y="622.0">__tcp_push_pendin..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="810.9" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="813.9" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (901 samples, 11.46%)</title><rect x="811.8" y="595.0" width="135.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="814.8" y="606.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (856 samples, 10.89%)</title><rect x="813.7" y="579.0" width="128.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="816.7" y="590.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="817.3" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="820.3" y="574.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="817.8" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="820.8" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (817 samples, 10.39%)</title><rect x="818.2" y="563.0" width="122.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="821.2" y="574.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (811 samples, 10.32%)</title><rect x="818.2" y="547.0" width="121.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="821.2" y="558.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.05%)</title><rect x="819.7" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="822.7" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="820.0" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="823.0" y="526.0"></text>
</g>
<g>
<title>ip_local_out (791 samples, 10.06%)</title><rect x="820.3" y="531.0" width="118.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="823.3" y="542.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (119 samples, 1.51%)</title><rect x="820.6" y="515.0" width="17.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="823.6" y="526.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.04%)</title><rect x="820.9" y="499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="823.9" y="510.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="821.4" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="824.4" y="510.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.04%)</title><rect x="821.8" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="824.8" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (107 samples, 1.36%)</title><rect x="822.3" y="499.0" width="16.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="825.3" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.06%)</title><rect x="822.6" y="483.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="825.6" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (11 samples, 0.14%)</title><rect x="823.3" y="483.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="826.3" y="494.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (11 samples, 0.14%)</title><rect x="823.3" y="467.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="826.3" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (82 samples, 1.04%)</title><rect x="825.1" y="483.0" width="12.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="828.1" y="494.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.03%)</title><rect x="825.3" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="828.3" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (77 samples, 0.98%)</title><rect x="825.6" y="467.0" width="11.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="828.6" y="478.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (11 samples, 0.14%)</title><rect x="827.4" y="451.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="830.4" y="462.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (5 samples, 0.06%)</title><rect x="829.2" y="451.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="832.2" y="462.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (3 samples, 0.04%)</title><rect x="829.9" y="451.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.9" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (37 samples, 0.47%)</title><rect x="830.4" y="451.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.4" y="462.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.04%)</title><rect x="832.2" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="835.2" y="446.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (22 samples, 0.28%)</title><rect x="832.6" y="435.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="835.6" y="446.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (6 samples, 0.08%)</title><rect x="835.0" y="419.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.0" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (5 samples, 0.06%)</title><rect x="835.9" y="451.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.9" y="462.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.04%)</title><rect x="836.7" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="839.7" y="462.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.03%)</title><rect x="837.1" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.1" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="837.4" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.4" y="494.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (4 samples, 0.05%)</title><rect x="837.7" y="483.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="840.7" y="494.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="838.0" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="841.0" y="478.0"></text>
</g>
<g>
<title>ip_output (668 samples, 8.50%)</title><rect x="838.5" y="515.0" width="100.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="841.5" y="526.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (652 samples, 8.29%)</title><rect x="839.2" y="499.0" width="97.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="842.2" y="510.0">ip_finish_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="839.4" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="842.4" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (648 samples, 8.24%)</title><rect x="839.8" y="483.0" width="97.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="842.8" y="494.0">__ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (645 samples, 8.20%)</title><rect x="840.3" y="467.0" width="96.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="843.3" y="478.0">ip_finish_o..</text>
</g>
<g>
<title>__local_bh_enable_ip (580 samples, 7.38%)</title><rect x="842.5" y="451.0" width="87.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="845.5" y="462.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (579 samples, 7.36%)</title><rect x="842.7" y="435.0" width="86.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="845.7" y="446.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (574 samples, 7.30%)</title><rect x="843.4" y="419.0" width="86.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.4" y="430.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (574 samples, 7.30%)</title><rect x="843.4" y="403.0" width="86.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="846.4" y="414.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (567 samples, 7.21%)</title><rect x="844.3" y="387.0" width="85.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="847.3" y="398.0">net_rx_act..</text>
</g>
<g>
<title>__kfree_skb_flush (7 samples, 0.09%)</title><rect x="845.2" y="371.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="848.2" y="382.0"></text>
</g>
<g>
<title>process_backlog (554 samples, 7.05%)</title><rect x="846.3" y="371.0" width="83.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="849.3" y="382.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb (544 samples, 6.92%)</title><rect x="847.3" y="355.0" width="81.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.3" y="366.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (544 samples, 6.92%)</title><rect x="847.3" y="339.0" width="81.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="850.3" y="350.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (14 samples, 0.18%)</title><rect x="847.9" y="323.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="850.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv (524 samples, 6.66%)</title><rect x="850.0" y="323.0" width="78.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="853.0" y="334.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="850.2" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="853.2" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (509 samples, 6.47%)</title><rect x="850.5" y="307.0" width="76.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="853.5" y="318.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (507 samples, 6.45%)</title><rect x="850.6" y="291.0" width="76.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="853.6" y="302.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (493 samples, 6.27%)</title><rect x="850.9" y="275.0" width="74.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="853.9" y="286.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (489 samples, 6.22%)</title><rect x="850.9" y="259.0" width="73.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="853.9" y="270.0">ip_proto..</text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.05%)</title><rect x="851.8" y="243.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="854.8" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.05%)</title><rect x="852.4" y="243.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="855.4" y="254.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.04%)</title><rect x="853.1" y="243.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (472 samples, 6.00%)</title><rect x="853.5" y="243.0" width="70.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.5" y="254.0">tcp_v4_rcv</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="855.2" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="858.2" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.06%)</title><rect x="855.6" y="227.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="858.6" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.09%)</title><rect x="856.5" y="227.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="859.5" y="238.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="856.7" y="211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="859.7" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="857.1" y="211.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="860.1" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="857.6" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="860.6" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (441 samples, 5.61%)</title><rect x="857.9" y="227.0" width="66.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="860.9" y="238.0">tcp_v4_..</text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.03%)</title><rect x="858.2" y="211.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="861.2" y="222.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="858.5" y="211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="861.5" y="222.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.04%)</title><rect x="858.8" y="211.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="861.8" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.03%)</title><rect x="859.2" y="211.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="862.2" y="222.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="859.5" y="211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="862.5" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (428 samples, 5.44%)</title><rect x="859.8" y="211.0" width="64.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.8" y="222.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.17%)</title><rect x="861.8" y="195.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="864.8" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (12 samples, 0.15%)</title><rect x="861.9" y="179.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="864.9" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.14%)</title><rect x="862.1" y="163.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="865.1" y="174.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.13%)</title><rect x="862.2" y="147.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="865.2" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.09%)</title><rect x="862.7" y="131.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="865.7" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="863.7" y="195.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="866.7" y="206.0"></text>
</g>
<g>
<title>tcp_ack (76 samples, 0.97%)</title><rect x="864.2" y="195.0" width="11.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="867.2" y="206.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="865.7" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.7" y="190.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="866.0" y="179.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.0" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (50 samples, 0.64%)</title><rect x="866.3" y="179.0" width="7.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="869.3" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (30 samples, 0.38%)</title><rect x="867.8" y="163.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="870.8" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (11 samples, 0.14%)</title><rect x="867.8" y="147.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.8" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (11 samples, 0.14%)</title><rect x="867.8" y="131.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="870.8" y="142.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.08%)</title><rect x="868.5" y="115.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.23%)</title><rect x="869.4" y="147.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="872.4" y="158.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.22%)</title><rect x="869.4" y="131.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="872.4" y="142.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.08%)</title><rect x="871.1" y="115.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="874.1" y="126.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.08%)</title><rect x="871.1" y="99.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="874.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="871.5" y="83.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="874.5" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="872.3" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="875.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (6 samples, 0.08%)</title><rect x="872.7" y="163.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="875.7" y="174.0"></text>
</g>
<g>
<title>tcp_newly_delivered (4 samples, 0.05%)</title><rect x="873.8" y="179.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="876.8" y="190.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.03%)</title><rect x="874.4" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="877.4" y="190.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="874.7" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="877.7" y="190.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.04%)</title><rect x="875.0" y="179.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="878.0" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (301 samples, 3.83%)</title><rect x="875.7" y="195.0" width="45.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="878.7" y="206.0">tcp_..</text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.05%)</title><rect x="875.7" y="179.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="878.7" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (297 samples, 3.78%)</title><rect x="876.3" y="179.0" width="44.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="879.3" y="190.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (292 samples, 3.71%)</title><rect x="877.1" y="163.0" width="43.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="880.1" y="174.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (292 samples, 3.71%)</title><rect x="877.1" y="147.0" width="43.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="880.1" y="158.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (291 samples, 3.70%)</title><rect x="877.2" y="131.0" width="43.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.2" y="142.0">__lo..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="920.9" y="195.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.9" y="206.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="921.6" y="195.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="924.6" y="206.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="921.8" y="179.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="924.8" y="190.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.08%)</title><rect x="922.4" y="195.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="925.4" y="206.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="923.3" y="195.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.3" y="206.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="923.6" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="926.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="924.0" y="227.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="927.0" y="238.0"></text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.05%)</title><rect x="924.3" y="259.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="927.3" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.11%)</title><rect x="925.4" y="275.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="928.4" y="286.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.04%)</title><rect x="925.5" y="259.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="928.5" y="270.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.04%)</title><rect x="925.5" y="243.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="928.5" y="254.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.05%)</title><rect x="926.0" y="259.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.0" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.13%)</title><rect x="927.2" y="307.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="930.2" y="318.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (5 samples, 0.06%)</title><rect x="927.2" y="291.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="930.2" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.06%)</title><rect x="927.2" y="275.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="930.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (5 samples, 0.06%)</title><rect x="927.9" y="291.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.9" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (4 samples, 0.05%)</title><rect x="928.1" y="275.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="931.1" y="286.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.04%)</title><rect x="928.1" y="259.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="931.1" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.04%)</title><rect x="929.0" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="932.0" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (50 samples, 0.64%)</title><rect x="929.6" y="451.0" width="7.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.6" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (50 samples, 0.64%)</title><rect x="929.6" y="435.0" width="7.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="932.6" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (20 samples, 0.25%)</title><rect x="931.8" y="419.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="934.8" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (16 samples, 0.20%)</title><rect x="932.3" y="403.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.3" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.05%)</title><rect x="932.4" y="387.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="935.4" y="398.0"></text>
</g>
<g>
<title>netif_rx (11 samples, 0.14%)</title><rect x="933.0" y="387.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="936.0" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="933.0" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="936.0" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.11%)</title><rect x="933.3" y="371.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="936.3" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.11%)</title><rect x="933.3" y="355.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="936.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="934.8" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="937.8" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (10 samples, 0.13%)</title><rect x="935.4" y="419.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="938.4" y="430.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.05%)</title><rect x="935.9" y="403.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.9" y="414.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="936.2" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="939.2" y="398.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="936.5" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.5" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.05%)</title><rect x="937.1" y="499.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="940.1" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.08%)</title><rect x="937.7" y="499.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="940.7" y="510.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.04%)</title><rect x="937.7" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.7" y="494.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="937.7" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.7" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (2 samples, 0.03%)</title><rect x="938.3" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="941.3" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="938.8" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.8" y="526.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.03%)</title><rect x="939.1" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="942.1" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="939.4" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.4" y="542.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="939.7" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="942.7" y="542.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="940.0" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="943.0" y="558.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.04%)</title><rect x="940.3" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="943.3" y="558.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.09%)</title><rect x="940.9" y="563.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="943.9" y="574.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="941.5" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="944.5" y="558.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="942.2" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="945.2" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="942.5" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.5" y="590.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="942.8" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.8" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.11%)</title><rect x="943.6" y="579.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="946.6" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.08%)</title><rect x="944.0" y="563.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="947.0" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="944.3" y="547.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="947.3" y="558.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="944.3" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="947.3" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="944.9" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="947.9" y="590.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="945.4" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.4" y="590.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (5 samples, 0.06%)</title><rect x="946.0" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="949.0" y="590.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="946.7" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="949.7" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.17%)</title><rect x="947.3" y="627.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="950.3" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="947.6" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="950.6" y="622.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.08%)</title><rect x="948.2" y="611.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="951.2" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.11%)</title><rect x="949.4" y="675.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="952.4" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.08%)</title><rect x="949.9" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="952.9" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.08%)</title><rect x="949.9" y="643.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="952.9" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.04%)</title><rect x="950.2" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="953.2" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="950.8" y="691.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="953.8" y="702.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="950.8" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="953.8" y="686.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="950.8" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.8" y="670.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="950.8" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="953.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="951.2" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="954.2" y="686.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="951.5" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="954.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (16 samples, 0.20%)</title><rect x="952.0" y="723.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="955.0" y="734.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.15%)</title><rect x="952.6" y="707.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="955.6" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (10 samples, 0.13%)</title><rect x="952.9" y="691.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="955.9" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.09%)</title><rect x="953.3" y="675.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="956.3" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="954.1" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="957.1" y="670.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="954.1" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="957.1" y="654.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="954.1" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="957.1" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="954.1" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="957.1" y="622.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (23 samples, 0.29%)</title><rect x="954.4" y="787.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.4" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="957.4" y="771.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="960.4" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.04%)</title><rect x="957.4" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="960.4" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.04%)</title><rect x="957.4" y="739.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="960.4" y="750.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (12 samples, 0.15%)</title><rect x="957.8" y="787.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.8" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="959.2" y="771.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="962.2" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="959.3" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="962.3" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.03%)</title><rect x="959.3" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="962.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (7 samples, 0.09%)</title><rect x="959.6" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="962.6" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="959.9" y="803.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="962.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.isProxyReq (25 samples, 0.32%)</title><rect x="960.7" y="851.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (25 samples, 0.32%)</title><rect x="960.7" y="835.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.19%)</title><rect x="961.6" y="819.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.19%)</title><rect x="961.6" y="803.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.06%)</title><rect x="962.6" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.06%)</title><rect x="962.6" y="771.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.6" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (5 samples, 0.06%)</title><rect x="962.6" y="755.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="963.5" y="787.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="966.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="963.8" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="963.8" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.8" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,446 samples, 18.39%)</title><rect x="964.4" y="947.0" width="217.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.4" y="958.0">one/nio/server/SelectorThread..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.03%)</title><rect x="965.8" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.11%)</title><rect x="966.1" y="931.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.11%)</title><rect x="966.1" y="915.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.06%)</title><rect x="966.7" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (439 samples, 5.58%)</title><rect x="967.4" y="931.0" width="65.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.4" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (9 samples, 0.11%)</title><rect x="969.4" y="915.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.05%)</title><rect x="970.0" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (417 samples, 5.30%)</title><rect x="970.7" y="915.0" width="62.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.7" y="926.0">one/ni..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.08%)</title><rect x="973.4" y="899.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="976.4" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (7 samples, 0.09%)</title><rect x="974.3" y="899.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="977.3" y="910.0"></text>
</g>
<g>
<title>clock_gettime (21 samples, 0.27%)</title><rect x="975.4" y="899.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="978.4" y="910.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.09%)</title><rect x="977.5" y="883.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="980.5" y="894.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.08%)</title><rect x="977.6" y="867.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="980.6" y="878.0"></text>
</g>
<g>
<title>clock_gettime@plt (3 samples, 0.04%)</title><rect x="978.5" y="899.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="981.5" y="910.0"></text>
</g>
<g>
<title>epoll_wait (362 samples, 4.60%)</title><rect x="979.0" y="899.0" width="54.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="982.0" y="910.0">epoll..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (296 samples, 3.76%)</title><rect x="988.9" y="883.0" width="44.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="991.9" y="894.0">entr..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.06%)</title><rect x="988.9" y="867.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (291 samples, 3.70%)</title><rect x="989.6" y="867.0" width="43.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="992.6" y="878.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (282 samples, 3.59%)</title><rect x="990.5" y="851.0" width="42.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="993.5" y="862.0">__x6..</text>
</g>
<g>
<title>do_epoll_wait (281 samples, 3.57%)</title><rect x="990.5" y="835.0" width="42.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.5" y="846.0">do_e..</text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="991.3" y="819.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="994.3" y="830.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="991.3" y="803.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="994.3" y="814.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="991.3" y="787.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="994.3" y="798.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="991.9" y="819.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.9" y="830.0"></text>
</g>
<g>
<title>ep_poll (251 samples, 3.19%)</title><rect x="992.5" y="819.0" width="37.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="995.5" y="830.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (117 samples, 1.49%)</title><rect x="996.4" y="803.0" width="17.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="999.4" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (72 samples, 0.92%)</title><rect x="1000.4" y="787.0" width="10.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1003.4" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (44 samples, 0.56%)</title><rect x="1003.3" y="771.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1006.3" y="782.0"></text>
</g>
<g>
<title>sock_poll (34 samples, 0.43%)</title><rect x="1004.6" y="755.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1007.6" y="766.0"></text>
</g>
<g>
<title>tcp_poll (12 samples, 0.15%)</title><rect x="1007.2" y="739.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1010.2" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.06%)</title><rect x="1009.0" y="739.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1012.0" y="750.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.11%)</title><rect x="1009.9" y="771.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1012.9" y="782.0"></text>
</g>
<g>
<title>mutex_lock (18 samples, 0.23%)</title><rect x="1011.2" y="787.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.2" y="798.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.04%)</title><rect x="1013.5" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.5" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="1013.9" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1016.9" y="814.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="1014.2" y="803.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1017.2" y="814.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="1014.7" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1017.7" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (99 samples, 1.26%)</title><rect x="1015.0" y="803.0" width="14.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1018.0" y="814.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="1015.4" y="787.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1018.4" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (92 samples, 1.17%)</title><rect x="1016.0" y="787.0" width="13.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1019.0" y="798.0"></text>
</g>
<g>
<title>schedule (76 samples, 0.97%)</title><rect x="1018.4" y="771.0" width="11.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.4" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (67 samples, 0.85%)</title><rect x="1019.8" y="755.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1022.8" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (57 samples, 0.73%)</title><rect x="1021.3" y="739.0" width="8.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.3" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="1029.9" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1032.9" y="814.0"></text>
</g>
<g>
<title>fput_many (13 samples, 0.17%)</title><rect x="1030.5" y="819.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1033.5" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="1032.4" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1035.4" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.04%)</title><rect x="1032.9" y="851.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1035.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (984 samples, 12.52%)</title><rect x="1033.3" y="931.0" width="147.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.3" y="942.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (978 samples, 12.44%)</title><rect x="1033.9" y="915.0" width="146.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.9" y="926.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (646 samples, 8.22%)</title><rect x="1034.2" y="899.0" width="97.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.2" y="910.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (409 samples, 5.20%)</title><rect x="1042.2" y="883.0" width="61.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.2" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (409 samples, 5.20%)</title><rect x="1042.2" y="867.0" width="61.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.2" y="878.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_requestHandler.handleRequest (339 samples, 4.31%)</title><rect x="1048.2" y="851.0" width="50.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.2" y="862.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.14%)</title><rect x="1048.2" y="835.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="1048.8" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.06%)</title><rect x="1048.8" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1051.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1049.5" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="1049.5" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (45 samples, 0.57%)</title><rect x="1049.8" y="835.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (45 samples, 0.57%)</title><rect x="1049.8" y="819.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.08%)</title><rect x="1051.2" y="803.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.08%)</title><rect x="1051.2" y="787.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.13%)</title><rect x="1052.1" y="803.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="1052.1" y="787.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.1" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="1052.4" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.08%)</title><rect x="1052.7" y="771.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.7" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="1053.6" y="803.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1056.6" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="1053.9" y="803.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1056.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (13 samples, 0.17%)</title><rect x="1054.6" y="803.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="1055.8" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="1055.8" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.06%)</title><rect x="1055.8" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.requestHandler (283 samples, 3.60%)</title><rect x="1056.6" y="835.0" width="42.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.6" y="846.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (282 samples, 3.59%)</title><rect x="1056.7" y="819.0" width="42.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.7" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (282 samples, 3.59%)</title><rect x="1056.7" y="803.0" width="42.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.7" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (28 samples, 0.36%)</title><rect x="1059.4" y="787.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (28 samples, 0.36%)</title><rect x="1059.4" y="771.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (28 samples, 0.36%)</title><rect x="1059.4" y="755.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (28 samples, 0.36%)</title><rect x="1059.4" y="739.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.11%)</title><rect x="1063.6" y="787.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.11%)</title><rect x="1063.6" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.11%)</title><rect x="1063.6" y="755.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.11%)</title><rect x="1063.6" y="739.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.11%)</title><rect x="1063.6" y="723.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.05%)</title><rect x="1064.2" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1067.2" y="718.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.04%)</title><rect x="1064.2" y="691.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1067.2" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="1064.2" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (227 samples, 2.89%)</title><rect x="1065.0" y="787.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.0" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (227 samples, 2.89%)</title><rect x="1065.0" y="771.0" width="34.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1068.0" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (227 samples, 2.89%)</title><rect x="1065.0" y="755.0" width="34.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.0" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (227 samples, 2.89%)</title><rect x="1065.0" y="739.0" width="34.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1068.0" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.03%)</title><rect x="1066.2" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (217 samples, 2.76%)</title><rect x="1066.5" y="723.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.5" y="734.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.04%)</title><rect x="1066.6" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1069.6" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (36 samples, 0.46%)</title><rect x="1067.1" y="707.0" width="5.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1070.1" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.04%)</title><rect x="1068.4" y="691.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1071.4" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.09%)</title><rect x="1068.9" y="691.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1071.9" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="1069.9" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1072.9" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.06%)</title><rect x="1070.2" y="691.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1073.2" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.04%)</title><rect x="1071.0" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1074.0" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="1071.4" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1074.4" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.06%)</title><rect x="1071.7" y="691.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1074.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (165 samples, 2.10%)</title><rect x="1072.5" y="707.0" width="24.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1075.5" y="718.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (152 samples, 1.93%)</title><rect x="1074.4" y="691.0" width="22.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1077.4" y="702.0">e..</text>
</g>
<g>
<title>do_syscall_64 (151 samples, 1.92%)</title><rect x="1074.6" y="675.0" width="22.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1077.6" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (145 samples, 1.84%)</title><rect x="1075.3" y="659.0" width="21.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.3" y="670.0">_..</text>
</g>
<g>
<title>do_futex (139 samples, 1.77%)</title><rect x="1075.9" y="643.0" width="20.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1078.9" y="654.0"></text>
</g>
<g>
<title>futex_wake (138 samples, 1.76%)</title><rect x="1076.1" y="627.0" width="20.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1079.1" y="638.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="1077.3" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.3" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (8 samples, 0.10%)</title><rect x="1077.6" y="611.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1080.6" y="622.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.03%)</title><rect x="1078.8" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1081.8" y="622.0"></text>
</g>
<g>
<title>wake_up_q (118 samples, 1.50%)</title><rect x="1079.1" y="611.0" width="17.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1082.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (118 samples, 1.50%)</title><rect x="1079.1" y="595.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1082.1" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (117 samples, 1.49%)</title><rect x="1079.1" y="579.0" width="17.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1082.1" y="590.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1096.8" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1099.8" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (10 samples, 0.13%)</title><rect x="1097.2" y="707.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1100.2" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@plt (2 samples, 0.03%)</title><rect x="1098.7" y="707.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1101.7" y="718.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1099.0" y="851.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1102.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (27 samples, 0.34%)</title><rect x="1099.3" y="851.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (27 samples, 0.34%)</title><rect x="1099.3" y="835.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.09%)</title><rect x="1099.3" y="819.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1102.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (20 samples, 0.25%)</title><rect x="1100.4" y="819.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (20 samples, 0.25%)</title><rect x="1100.4" y="803.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (20 samples, 0.25%)</title><rect x="1100.4" y="787.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1103.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (87 samples, 1.11%)</title><rect x="1103.5" y="883.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21 samples, 0.27%)</title><rect x="1104.0" y="867.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.0" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1104.1" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="1104.1" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.23%)</title><rect x="1104.4" y="851.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.23%)</title><rect x="1104.4" y="835.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (18 samples, 0.23%)</title><rect x="1104.4" y="819.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="1106.1" y="803.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1109.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.55%)</title><rect x="1107.2" y="867.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.52%)</title><rect x="1107.5" y="851.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.5" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.08%)</title><rect x="1112.4" y="835.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1115.4" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.08%)</title><rect x="1112.4" y="819.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.4" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.08%)</title><rect x="1112.4" y="803.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.4" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.08%)</title><rect x="1112.4" y="787.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.4" y="798.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.06%)</title><rect x="1112.4" y="771.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1115.4" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.06%)</title><rect x="1112.4" y="755.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1115.4" y="766.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.04%)</title><rect x="1112.7" y="739.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.7" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (2 samples, 0.03%)</title><rect x="1112.7" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1115.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (20 samples, 0.25%)</title><rect x="1113.6" y="867.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1116.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.29%)</title><rect x="1116.6" y="883.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="1119.5" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="1119.5" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.05%)</title><rect x="1119.5" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.05%)</title><rect x="1119.5" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.5" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.05%)</title><rect x="1119.5" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (74 samples, 0.94%)</title><rect x="1120.1" y="883.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.1" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_requestHandler.handleRequest (10 samples, 0.13%)</title><rect x="1121.0" y="867.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.0" y="878.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.18%)</title><rect x="1122.5" y="867.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1125.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 0.56%)</title><rect x="1124.6" y="867.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.6" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="1129.5" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.5" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1129.7" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.7" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1129.7" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.7" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="1130.1" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="1130.1" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1133.1" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="1130.1" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1133.1" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1130.1" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1133.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1130.4" y="851.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1130.4" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.06%)</title><rect x="1130.4" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.4" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="1130.4" y="803.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1133.4" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="1130.4" y="787.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.4" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="1130.4" y="771.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1133.4" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="1130.4" y="755.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.4" y="766.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="1130.4" y="739.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1133.4" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="1130.4" y="723.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.05%)</title><rect x="1131.2" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (326 samples, 4.15%)</title><rect x="1131.8" y="899.0" width="48.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.8" y="910.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (324 samples, 4.12%)</title><rect x="1131.9" y="883.0" width="48.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.9" y="894.0">one/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.08%)</title><rect x="1133.3" y="867.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1136.3" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (55 samples, 0.70%)</title><rect x="1134.2" y="867.0" width="8.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1137.2" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.08%)</title><rect x="1134.6" y="851.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1137.6" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="1135.5" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.5" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="1136.4" y="851.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1139.4" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (37 samples, 0.47%)</title><rect x="1136.7" y="851.0" width="5.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1139.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (7 samples, 0.09%)</title><rect x="1138.8" y="835.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.8" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (16 samples, 0.20%)</title><rect x="1139.9" y="835.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1142.9" y="846.0"></text>
</g>
<g>
<title>__recv (245 samples, 3.12%)</title><rect x="1142.4" y="867.0" width="36.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1145.4" y="878.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (223 samples, 2.84%)</title><rect x="1145.7" y="851.0" width="33.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1148.7" y="862.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.05%)</title><rect x="1145.7" y="835.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1148.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (219 samples, 2.79%)</title><rect x="1146.3" y="835.0" width="32.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1149.3" y="846.0">do..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.03%)</title><rect x="1147.5" y="819.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (209 samples, 2.66%)</title><rect x="1147.8" y="819.0" width="31.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1150.8" y="830.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (204 samples, 2.59%)</title><rect x="1147.8" y="803.0" width="30.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.8" y="814.0">__..</text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.03%)</title><rect x="1149.5" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.5" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (175 samples, 2.23%)</title><rect x="1149.8" y="787.0" width="26.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.8" y="798.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (142 samples, 1.81%)</title><rect x="1150.1" y="771.0" width="21.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1153.1" y="782.0">i..</text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.06%)</title><rect x="1150.1" y="755.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1153.1" y="766.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="1150.8" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.8" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.03%)</title><rect x="1151.3" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.3" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="1151.6" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1154.6" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (130 samples, 1.65%)</title><rect x="1151.9" y="755.0" width="19.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1154.9" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.29%)</title><rect x="1156.5" y="739.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.5" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1156.5" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1159.5" y="734.0"></text>
</g>
<g>
<title>skb_release_all (21 samples, 0.27%)</title><rect x="1156.8" y="723.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1159.8" y="734.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="1156.8" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1159.8" y="718.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="1157.1" y="707.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.1" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (9 samples, 0.11%)</title><rect x="1157.9" y="707.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1160.9" y="718.0"></text>
</g>
<g>
<title>dst_release (9 samples, 0.11%)</title><rect x="1157.9" y="691.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1160.9" y="702.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.06%)</title><rect x="1159.2" y="707.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1162.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (10 samples, 0.13%)</title><rect x="1160.3" y="739.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.3" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1161.8" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1164.8" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1162.1" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1165.1" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1162.4" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.4" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1162.4" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1165.4" y="734.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="1162.7" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1165.7" y="750.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="1162.8" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1165.8" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (39 samples, 0.50%)</title><rect x="1163.1" y="739.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1166.1" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (37 samples, 0.47%)</title><rect x="1163.3" y="723.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1166.3" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (24 samples, 0.31%)</title><rect x="1165.2" y="707.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.2" y="718.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.14%)</title><rect x="1165.2" y="691.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1168.2" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="1166.3" y="675.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1169.3" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.13%)</title><rect x="1166.9" y="691.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1169.9" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.06%)</title><rect x="1167.0" y="675.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1170.0" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="1167.8" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1170.8" y="686.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="1168.1" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1171.1" y="686.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="1168.4" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.4" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="1169.0" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1172.0" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (10 samples, 0.13%)</title><rect x="1169.3" y="739.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.3" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1169.7" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1172.7" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="1170.0" y="723.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1173.0" y="734.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="1170.3" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.3" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.05%)</title><rect x="1170.8" y="739.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.8" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (29 samples, 0.37%)</title><rect x="1171.4" y="771.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.4" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (26 samples, 0.33%)</title><rect x="1171.8" y="755.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1174.8" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (26 samples, 0.33%)</title><rect x="1171.8" y="739.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1174.8" y="750.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.03%)</title><rect x="1173.0" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1176.0" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (16 samples, 0.20%)</title><rect x="1173.3" y="723.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1176.3" y="734.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.03%)</title><rect x="1174.4" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.4" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (7 samples, 0.09%)</title><rect x="1174.7" y="707.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="1175.7" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1178.7" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.20%)</title><rect x="1176.0" y="787.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1179.0" y="798.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.14%)</title><rect x="1176.2" y="771.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1179.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.14%)</title><rect x="1176.2" y="755.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1179.2" y="766.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.14%)</title><rect x="1176.2" y="739.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.2" y="750.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="1177.8" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1180.8" y="782.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="1178.4" y="803.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1181.4" y="814.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1178.7" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.7" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.11%)</title><rect x="1179.2" y="867.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1182.2" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1180.7" y="915.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.7" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1181.0" y="931.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.0" y="942.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="1181.0" y="915.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1184.0" y="926.0"></text>
</g>
<g>
<title>start_thread (55 samples, 0.70%)</title><rect x="1181.7" y="947.0" width="8.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1184.7" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (55 samples, 0.70%)</title><rect x="1181.7" y="931.0" width="8.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1184.7" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (55 samples, 0.70%)</title><rect x="1181.7" y="915.0" width="8.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.7" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (41 samples, 0.52%)</title><rect x="1181.7" y="899.0" width="6.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.7" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (39 samples, 0.50%)</title><rect x="1181.9" y="883.0" width="5.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.9" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (32 samples, 0.41%)</title><rect x="1181.9" y="867.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.9" y="878.0"></text>
</g>
<g>
<title>SpinPause (32 samples, 0.41%)</title><rect x="1181.9" y="851.0" width="4.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1184.9" y="862.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.05%)</title><rect x="1186.7" y="867.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.7" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.05%)</title><rect x="1186.7" y="851.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.7" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.05%)</title><rect x="1186.7" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (4 samples, 0.05%)</title><rect x="1186.7" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.05%)</title><rect x="1186.7" y="803.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.7" y="814.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (4 samples, 0.05%)</title><rect x="1186.7" y="787.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="798.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.04%)</title><rect x="1186.7" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.7" y="782.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1187.3" y="867.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.03%)</title><rect x="1187.3" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1187.3" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1187.3" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 0.14%)</title><rect x="1187.9" y="899.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 0.14%)</title><rect x="1187.9" y="883.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 0.14%)</title><rect x="1187.9" y="867.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 0.14%)</title><rect x="1187.9" y="851.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (11 samples, 0.14%)</title><rect x="1187.9" y="835.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (8 samples, 0.10%)</title><rect x="1187.9" y="819.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (7 samples, 0.09%)</title><rect x="1188.0" y="803.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.03%)</title><rect x="1188.2" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.03%)</title><rect x="1189.1" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.04%)</title><rect x="1189.5" y="899.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.04%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="1189.7" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.7" y="878.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.7" y="851.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.7" y="862.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.7" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.7" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.7" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (2 samples, 0.03%)</title><rect x="1189.7" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.7" y="814.0"></text>
</g>
</g>
</svg>
