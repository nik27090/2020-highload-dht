<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (8,177 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="10.0" y="915.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,121 samples, 99.32%)</title><rect x="10.7" y="915.0" width="1171.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.7" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (67 samples, 0.82%)</title><rect x="11.2" y="899.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (67 samples, 0.82%)</title><rect x="11.2" y="883.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.2" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.02%)</title><rect x="12.0" y="867.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="15.0" y="878.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.09%)</title><rect x="12.3" y="867.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="15.3" y="878.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="12.9" y="851.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="15.9" y="862.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="12.9" y="835.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="15.9" y="846.0"></text>
</g>
<g>
<title>epoll_wait (51 samples, 0.62%)</title><rect x="13.5" y="867.0" width="7.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="16.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.49%)</title><rect x="15.1" y="851.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="18.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.49%)</title><rect x="15.1" y="835.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="18.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (37 samples, 0.45%)</title><rect x="15.5" y="819.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="18.5" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (37 samples, 0.45%)</title><rect x="15.5" y="803.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="18.5" y="814.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="15.8" y="787.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.8" y="798.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="15.8" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="18.8" y="782.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="15.8" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="18.8" y="766.0"></text>
</g>
<g>
<title>ep_poll (28 samples, 0.34%)</title><rect x="16.5" y="787.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="19.5" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (18 samples, 0.22%)</title><rect x="16.9" y="771.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="19.9" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.16%)</title><rect x="17.1" y="755.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="20.1" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (9 samples, 0.11%)</title><rect x="17.5" y="739.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.5" y="750.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.10%)</title><rect x="17.6" y="723.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="20.6" y="734.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.05%)</title><rect x="17.9" y="707.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="20.9" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="18.5" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="21.5" y="718.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.05%)</title><rect x="18.9" y="755.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.07%)</title><rect x="19.7" y="771.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="22.7" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.05%)</title><rect x="20.0" y="755.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.0" y="766.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="20.0" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="23.0" y="750.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.05%)</title><rect x="20.0" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.0" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="20.1" y="707.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.1" y="718.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="20.5" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,051 samples, 98.46%)</title><rect x="20.8" y="899.0" width="1161.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.8" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,050 samples, 98.45%)</title><rect x="21.0" y="883.0" width="1161.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.0" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,982 samples, 97.62%)</title><rect x="21.0" y="867.0" width="1151.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.0" y="878.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,956 samples, 97.30%)</title><rect x="21.1" y="851.0" width="1148.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.1" y="862.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,956 samples, 97.30%)</title><rect x="21.1" y="835.0" width="1148.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.1" y="846.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler3_getEntity.handleRequest (7,951 samples, 97.24%)</title><rect x="21.1" y="819.0" width="1147.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.1" y="830.0">RequestHandler3_getEntity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (322 samples, 3.94%)</title><rect x="21.3" y="803.0" width="46.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.3" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (315 samples, 3.85%)</title><rect x="21.3" y="787.0" width="45.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.3" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.07%)</title><rect x="21.3" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.04%)</title><rect x="21.7" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.04%)</title><rect x="21.7" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="21.7" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.7" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="21.8" y="707.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="24.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (309 samples, 3.78%)</title><rect x="22.1" y="771.0" width="44.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.1" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (309 samples, 3.78%)</title><rect x="22.1" y="755.0" width="44.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.1" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (307 samples, 3.75%)</title><rect x="22.4" y="739.0" width="44.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.4" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (307 samples, 3.75%)</title><rect x="22.4" y="723.0" width="44.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.4" y="734.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.09%)</title><rect x="22.8" y="707.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="25.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.06%)</title><rect x="23.1" y="691.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="26.1" y="702.0"></text>
</g>
<g>
<title>send (296 samples, 3.62%)</title><rect x="24.0" y="707.0" width="42.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="27.0" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (291 samples, 3.56%)</title><rect x="24.7" y="691.0" width="42.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="27.7" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (290 samples, 3.55%)</title><rect x="24.9" y="675.0" width="41.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.9" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (288 samples, 3.52%)</title><rect x="25.2" y="659.0" width="41.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="28.2" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (288 samples, 3.52%)</title><rect x="25.2" y="643.0" width="41.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="28.2" y="654.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (284 samples, 3.47%)</title><rect x="25.4" y="627.0" width="41.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.4" y="638.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.02%)</title><rect x="25.4" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.4" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (281 samples, 3.44%)</title><rect x="25.7" y="611.0" width="40.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="28.7" y="622.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (280 samples, 3.42%)</title><rect x="25.9" y="595.0" width="40.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="28.9" y="606.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (275 samples, 3.36%)</title><rect x="26.5" y="579.0" width="39.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.5" y="590.0">tcp..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="26.5" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="29.5" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="26.5" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.5" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="26.9" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.9" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (21 samples, 0.26%)</title><rect x="27.3" y="563.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="30.3" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.23%)</title><rect x="27.5" y="547.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (8 samples, 0.10%)</title><rect x="27.5" y="531.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.07%)</title><rect x="27.5" y="515.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="30.5" y="526.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.02%)</title><rect x="28.6" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="31.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.10%)</title><rect x="28.9" y="531.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.9" y="542.0"></text>
</g>
<g>
<title>tcp_push (241 samples, 2.95%)</title><rect x="30.5" y="563.0" width="34.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="33.5" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (240 samples, 2.94%)</title><rect x="30.6" y="547.0" width="34.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="33.6" y="558.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (238 samples, 2.91%)</title><rect x="30.9" y="531.0" width="34.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="33.9" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (227 samples, 2.78%)</title><rect x="31.6" y="515.0" width="32.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.6" y="526.0">__..</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="32.2" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.2" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (217 samples, 2.65%)</title><rect x="32.7" y="499.0" width="31.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="35.7" y="510.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (217 samples, 2.65%)</title><rect x="32.7" y="483.0" width="31.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="35.7" y="494.0">__..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.04%)</title><rect x="32.8" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="35.8" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="32.8" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="35.8" y="462.0"></text>
</g>
<g>
<title>ip_local_out (212 samples, 2.59%)</title><rect x="33.2" y="467.0" width="30.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="36.2" y="478.0">ip..</text>
</g>
<g>
<title>__ip_local_out (39 samples, 0.48%)</title><rect x="33.4" y="451.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.4" y="462.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.02%)</title><rect x="33.4" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="36.4" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.02%)</title><rect x="33.7" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="36.7" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.02%)</title><rect x="34.1" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="37.1" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (32 samples, 0.39%)</title><rect x="34.4" y="435.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.4" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.09%)</title><rect x="34.4" y="419.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="37.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.09%)</title><rect x="34.4" y="403.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="37.4" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="35.1" y="387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="38.1" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (20 samples, 0.24%)</title><rect x="35.4" y="419.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="38.4" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.02%)</title><rect x="35.5" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="38.5" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (15 samples, 0.18%)</title><rect x="35.8" y="403.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="38.8" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (10 samples, 0.12%)</title><rect x="36.6" y="387.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="39.6" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (4 samples, 0.05%)</title><rect x="37.4" y="371.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="40.4" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.02%)</title><rect x="38.0" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="41.0" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (3 samples, 0.04%)</title><rect x="38.6" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="41.6" y="430.0"></text>
</g>
<g>
<title>ip_output (171 samples, 2.09%)</title><rect x="39.2" y="451.0" width="24.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.2" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (166 samples, 2.03%)</title><rect x="39.3" y="435.0" width="23.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="42.3" y="446.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="39.3" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="42.3" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (164 samples, 2.01%)</title><rect x="39.6" y="419.0" width="23.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.6" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (164 samples, 2.01%)</title><rect x="39.6" y="403.0" width="23.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="42.6" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (147 samples, 1.80%)</title><rect x="40.7" y="387.0" width="21.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="43.7" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (147 samples, 1.80%)</title><rect x="40.7" y="371.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.7" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (145 samples, 1.77%)</title><rect x="41.0" y="355.0" width="21.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="44.0" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (145 samples, 1.77%)</title><rect x="41.0" y="339.0" width="21.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="44.0" y="350.0"></text>
</g>
<g>
<title>net_rx_action (139 samples, 1.70%)</title><rect x="41.7" y="323.0" width="20.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="44.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (138 samples, 1.69%)</title><rect x="41.9" y="307.0" width="19.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (135 samples, 1.65%)</title><rect x="42.3" y="291.0" width="19.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="45.3" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (135 samples, 1.65%)</title><rect x="42.3" y="275.0" width="19.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="45.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (132 samples, 1.61%)</title><rect x="42.3" y="259.0" width="19.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="45.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (126 samples, 1.54%)</title><rect x="42.8" y="243.0" width="18.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="45.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (123 samples, 1.50%)</title><rect x="42.8" y="227.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.8" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (117 samples, 1.43%)</title><rect x="42.8" y="211.0" width="16.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="45.8" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (116 samples, 1.42%)</title><rect x="42.8" y="195.0" width="16.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="45.8" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.02%)</title><rect x="43.5" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (109 samples, 1.33%)</title><rect x="43.8" y="179.0" width="15.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.8" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="44.6" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="47.6" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.05%)</title><rect x="44.9" y="163.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="47.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="45.2" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="48.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (95 samples, 1.16%)</title><rect x="45.6" y="163.0" width="13.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="48.6" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.02%)</title><rect x="45.6" y="147.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="48.6" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.02%)</title><rect x="45.9" y="147.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="48.9" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (91 samples, 1.11%)</title><rect x="46.2" y="147.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="49.2" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.06%)</title><rect x="46.7" y="131.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.7" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.06%)</title><rect x="46.7" y="115.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="49.7" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="46.7" y="99.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="49.7" y="110.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="46.9" y="83.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="49.9" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="46.9" y="67.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="49.9" y="78.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.24%)</title><rect x="47.5" y="131.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="50.5" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.02%)</title><rect x="47.8" y="115.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="50.8" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (12 samples, 0.15%)</title><rect x="48.2" y="115.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="51.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.11%)</title><rect x="48.7" y="99.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.7" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.04%)</title><rect x="48.7" y="83.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="51.7" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="48.7" y="67.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="51.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.06%)</title><rect x="49.3" y="83.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="52.3" y="94.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="49.3" y="67.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.3" y="78.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.04%)</title><rect x="49.5" y="51.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="52.5" y="62.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="49.5" y="35.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="52.5" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (57 samples, 0.70%)</title><rect x="50.4" y="131.0" width="8.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="53.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (56 samples, 0.68%)</title><rect x="50.6" y="115.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="53.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (56 samples, 0.68%)</title><rect x="50.6" y="99.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (56 samples, 0.68%)</title><rect x="50.6" y="83.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.6" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (56 samples, 0.68%)</title><rect x="50.6" y="67.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="53.6" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="58.6" y="131.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.6" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.06%)</title><rect x="59.8" y="211.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="62.8" y="222.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="60.1" y="195.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="63.1" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="60.7" y="227.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="63.7" y="238.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.02%)</title><rect x="60.9" y="243.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.02%)</title><rect x="61.4" y="259.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.4" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.11%)</title><rect x="62.0" y="387.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="65.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.11%)</title><rect x="62.0" y="371.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.0" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.07%)</title><rect x="62.1" y="355.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.06%)</title><rect x="62.1" y="339.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="65.1" y="350.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.05%)</title><rect x="62.1" y="323.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="65.1" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.05%)</title><rect x="62.1" y="307.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="65.1" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.05%)</title><rect x="62.1" y="291.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="65.1" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="63.0" y="355.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="66.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="63.4" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="66.4" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="63.4" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.4" y="430.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="63.4" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="66.4" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.02%)</title><rect x="63.4" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.4" y="398.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="64.0" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.0" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="64.8" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="67.8" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.06%)</title><rect x="65.4" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="68.4" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="65.6" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="68.6" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="66.4" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.4" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="66.4" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="66.4" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="69.4" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="66.4" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="69.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="66.7" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="67.0" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="67.0" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.06%)</title><rect x="67.0" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.06%)</title><rect x="67.0" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.0" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (5 samples, 0.06%)</title><rect x="67.0" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.0" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="67.4" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="70.4" y="702.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="67.4" y="675.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="70.4" y="686.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="67.4" y="659.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="70.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.09%)</title><rect x="67.7" y="803.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.09%)</title><rect x="67.7" y="787.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="68.3" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="68.3" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="68.3" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="68.3" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (7,621 samples, 93.20%)</title><rect x="68.7" y="803.0" width="1099.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.7" y="814.0">ru/mail/polis/service/nik27090/ServiceImpl.getEntity</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.04%)</title><rect x="68.9" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.02%)</title><rect x="69.0" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.02%)</title><rect x="69.0" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="69.0" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="69.3" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="69.3" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="69.6" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="69.6" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.6" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="69.6" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.6" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2 samples, 0.02%)</title><rect x="69.6" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (7,612 samples, 93.09%)</title><rect x="70.0" y="787.0" width="1098.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.0" y="798.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (99 samples, 1.21%)</title><rect x="70.2" y="771.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (99 samples, 1.21%)</title><rect x="70.2" y="755.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (99 samples, 1.21%)</title><rect x="70.2" y="739.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (99 samples, 1.21%)</title><rect x="70.2" y="723.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (97 samples, 1.19%)</title><rect x="70.5" y="707.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (96 samples, 1.17%)</title><rect x="70.5" y="691.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (23 samples, 0.28%)</title><rect x="70.6" y="675.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (23 samples, 0.28%)</title><rect x="70.6" y="659.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (23 samples, 0.28%)</title><rect x="70.6" y="643.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getNext (23 samples, 0.28%)</title><rect x="70.6" y="627.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (9 samples, 0.11%)</title><rect x="70.6" y="611.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.10%)</title><rect x="70.8" y="595.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.10%)</title><rect x="70.8" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.07%)</title><rect x="70.9" y="563.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.06%)</title><rect x="70.9" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.06%)</title><rect x="70.9" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.06%)</title><rect x="70.9" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.9" y="526.0"></text>
</g>
<g>
<title>__libc_pread (4 samples, 0.05%)</title><rect x="71.0" y="499.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="74.0" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="71.0" y="483.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.0" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="71.0" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="74.0" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.05%)</title><rect x="71.0" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="74.0" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.05%)</title><rect x="71.0" y="435.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="74.0" y="446.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="71.3" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="74.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (14 samples, 0.17%)</title><rect x="71.9" y="611.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.16%)</title><rect x="72.1" y="595.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.16%)</title><rect x="72.1" y="579.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.15%)</title><rect x="72.2" y="563.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.13%)</title><rect x="72.2" y="547.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.13%)</title><rect x="72.2" y="531.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.13%)</title><rect x="72.2" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.2" y="526.0"></text>
</g>
<g>
<title>__libc_pread (10 samples, 0.12%)</title><rect x="72.3" y="499.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="75.3" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.12%)</title><rect x="72.3" y="483.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="75.3" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.12%)</title><rect x="72.3" y="467.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="75.3" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.10%)</title><rect x="72.6" y="451.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="75.6" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.10%)</title><rect x="72.6" y="435.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.6" y="446.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.09%)</title><rect x="72.8" y="419.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="75.8" y="430.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="72.8" y="403.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="75.8" y="414.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.05%)</title><rect x="72.9" y="387.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="75.9" y="398.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.05%)</title><rect x="72.9" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="75.9" y="382.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.05%)</title><rect x="72.9" y="355.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="75.9" y="366.0"></text>
</g>
<g>
<title>generic_file_buffered_read (3 samples, 0.04%)</title><rect x="73.1" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="76.1" y="350.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="73.2" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.2" y="334.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="73.2" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.2" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="73.5" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.5" y="414.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="73.5" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.5" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.02%)</title><rect x="73.9" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.02%)</title><rect x="73.9" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.02%)</title><rect x="73.9" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.9" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (70 samples, 0.86%)</title><rect x="74.2" y="675.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (70 samples, 0.86%)</title><rect x="74.2" y="659.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (69 samples, 0.84%)</title><rect x="74.4" y="643.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (69 samples, 0.84%)</title><rect x="74.4" y="627.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.84%)</title><rect x="74.4" y="611.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.84%)</title><rect x="74.4" y="595.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (69 samples, 0.84%)</title><rect x="74.4" y="579.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (69 samples, 0.84%)</title><rect x="74.4" y="563.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (69 samples, 0.84%)</title><rect x="74.4" y="547.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getNext (69 samples, 0.84%)</title><rect x="74.4" y="531.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (33 samples, 0.40%)</title><rect x="74.4" y="515.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (32 samples, 0.39%)</title><rect x="74.5" y="499.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (32 samples, 0.39%)</title><rect x="74.5" y="483.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="74.5" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.5" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="74.5" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 0.37%)</title><rect x="74.8" y="467.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (27 samples, 0.33%)</title><rect x="75.1" y="451.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (27 samples, 0.33%)</title><rect x="75.1" y="435.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (27 samples, 0.33%)</title><rect x="75.1" y="419.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.1" y="430.0"></text>
</g>
<g>
<title>__libc_pread (25 samples, 0.31%)</title><rect x="75.4" y="403.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="78.4" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.29%)</title><rect x="75.5" y="387.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="78.5" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.29%)</title><rect x="75.5" y="371.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.5" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (21 samples, 0.26%)</title><rect x="75.9" y="355.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.9" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 0.24%)</title><rect x="76.1" y="339.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="79.1" y="350.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="76.1" y="323.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="79.1" y="334.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="76.1" y="307.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="79.1" y="318.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="76.1" y="291.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.1" y="302.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="76.5" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.5" y="334.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.17%)</title><rect x="77.0" y="323.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.0" y="334.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.12%)</title><rect x="77.2" y="307.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.12%)</title><rect x="77.2" y="291.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="80.2" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.10%)</title><rect x="77.5" y="275.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.5" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.09%)</title><rect x="77.7" y="259.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="80.7" y="270.0"></text>
</g>
<g>
<title>generic_file_buffered_read (7 samples, 0.09%)</title><rect x="77.7" y="243.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.7" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="78.1" y="227.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.1" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="78.1" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.1" y="222.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="78.4" y="227.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (36 samples, 0.44%)</title><rect x="79.1" y="515.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="79.3" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="79.3" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (33 samples, 0.40%)</title><rect x="79.6" y="499.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (33 samples, 0.40%)</title><rect x="79.6" y="483.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.04%)</title><rect x="79.7" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.7" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.04%)</title><rect x="79.7" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (29 samples, 0.35%)</title><rect x="80.1" y="467.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (24 samples, 0.29%)</title><rect x="80.1" y="451.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (24 samples, 0.29%)</title><rect x="80.1" y="435.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (24 samples, 0.29%)</title><rect x="80.1" y="419.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.1" y="430.0"></text>
</g>
<g>
<title>__libc_pread (21 samples, 0.26%)</title><rect x="80.6" y="403.0" width="3.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="83.6" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.24%)</title><rect x="80.7" y="387.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="83.7" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.23%)</title><rect x="80.9" y="371.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.9" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (18 samples, 0.22%)</title><rect x="81.0" y="355.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="84.0" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (18 samples, 0.22%)</title><rect x="81.0" y="339.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="84.0" y="350.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.18%)</title><rect x="81.4" y="323.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="84.4" y="334.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.11%)</title><rect x="82.2" y="307.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="85.2" y="318.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.11%)</title><rect x="82.2" y="291.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.2" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.11%)</title><rect x="82.2" y="275.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="85.2" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.11%)</title><rect x="82.2" y="259.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="85.2" y="270.0"></text>
</g>
<g>
<title>generic_file_buffered_read (8 samples, 0.10%)</title><rect x="82.3" y="243.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="85.3" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="82.6" y="227.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.06%)</title><rect x="83.6" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="83.9" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.02%)</title><rect x="84.5" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.04%)</title><rect x="84.8" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="84.8" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.04%)</title><rect x="84.8" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="84.8" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="84.8" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (7,506 samples, 91.79%)</title><rect x="85.3" y="771.0" width="1083.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.3" y="782.0">ru/mail/polis/dao/nik27090/DAOImpl.iterator</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.02%)</title><rect x="85.5" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="85.5" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="85.5" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="85.5" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (7,503 samples, 91.76%)</title><rect x="85.8" y="755.0" width="1082.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.8" y="766.0">ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,152 samples, 63.01%)</title><rect x="85.8" y="739.0" width="743.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.8" y="750.0">com/google/common/collect/Iterators.mergeSorted</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,152 samples, 63.01%)</title><rect x="85.8" y="723.0" width="743.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.8" y="734.0">com/google/common/collect/Iterators$MergingIterator.&lt;init&gt;</text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (6 samples, 0.07%)</title><rect x="134.7" y="707.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (4 samples, 0.05%)</title><rect x="135.0" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3 samples, 0.04%)</title><rect x="135.1" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (236 samples, 2.89%)</title><rect x="135.5" y="707.0" width="34.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.5" y="718.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (236 samples, 2.89%)</title><rect x="135.5" y="691.0" width="34.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.5" y="702.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (236 samples, 2.89%)</title><rect x="135.5" y="675.0" width="34.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.5" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (236 samples, 2.89%)</title><rect x="135.5" y="659.0" width="34.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.5" y="670.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (236 samples, 2.89%)</title><rect x="135.5" y="643.0" width="34.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.5" y="654.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (236 samples, 2.89%)</title><rect x="135.5" y="627.0" width="34.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.5" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (236 samples, 2.89%)</title><rect x="135.5" y="611.0" width="34.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.5" y="622.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (236 samples, 2.89%)</title><rect x="135.5" y="595.0" width="34.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.5" y="606.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (236 samples, 2.89%)</title><rect x="135.5" y="579.0" width="34.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.5" y="590.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getNext (236 samples, 2.89%)</title><rect x="135.5" y="563.0" width="34.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.5" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (97 samples, 1.19%)</title><rect x="135.5" y="547.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="135.5" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="135.5" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="135.5" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (94 samples, 1.15%)</title><rect x="136.0" y="531.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (94 samples, 1.15%)</title><rect x="136.0" y="515.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.05%)</title><rect x="136.1" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.1" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.05%)</title><rect x="136.1" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (81 samples, 0.99%)</title><rect x="136.8" y="499.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (63 samples, 0.77%)</title><rect x="137.3" y="483.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (62 samples, 0.76%)</title><rect x="137.4" y="467.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (62 samples, 0.76%)</title><rect x="137.4" y="451.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.4" y="462.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="138.0" y="435.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="141.0" y="446.0"></text>
</g>
<g>
<title>__libc_pread (56 samples, 0.68%)</title><rect x="138.3" y="435.0" width="8.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="141.3" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.61%)</title><rect x="139.2" y="419.0" width="7.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="142.2" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (49 samples, 0.60%)</title><rect x="139.3" y="403.0" width="7.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="142.3" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (42 samples, 0.51%)</title><rect x="140.3" y="387.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="143.3" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (41 samples, 0.50%)</title><rect x="140.5" y="371.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="143.5" y="382.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="140.5" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="143.5" y="366.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="140.5" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="143.5" y="350.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="140.5" y="323.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="143.5" y="334.0"></text>
</g>
<g>
<title>vfs_read (37 samples, 0.45%)</title><rect x="141.0" y="355.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="144.0" y="366.0"></text>
</g>
<g>
<title>__vfs_read (25 samples, 0.31%)</title><rect x="141.5" y="339.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="144.5" y="350.0"></text>
</g>
<g>
<title>new_sync_read (25 samples, 0.31%)</title><rect x="141.5" y="323.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="144.5" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (24 samples, 0.29%)</title><rect x="141.6" y="307.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="144.6" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (24 samples, 0.29%)</title><rect x="141.6" y="291.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="144.6" y="302.0"></text>
</g>
<g>
<title>generic_file_buffered_read (23 samples, 0.28%)</title><rect x="141.6" y="275.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="144.6" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (13 samples, 0.16%)</title><rect x="142.2" y="259.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="145.2" y="270.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="142.6" y="243.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.6" y="254.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.02%)</title><rect x="142.9" y="243.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="145.9" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.07%)</title><rect x="143.2" y="243.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="146.2" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.05%)</title><rect x="144.1" y="259.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="147.1" y="270.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.05%)</title><rect x="144.1" y="243.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="147.1" y="254.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="144.2" y="227.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="147.2" y="238.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="144.6" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="147.6" y="270.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="145.1" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="148.1" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.09%)</title><rect x="145.4" y="339.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="148.4" y="350.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.09%)</title><rect x="145.4" y="323.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.4" y="334.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.04%)</title><rect x="145.5" y="307.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="148.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (15 samples, 0.18%)</title><rect x="146.4" y="483.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.4" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="146.7" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.7" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="146.8" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 0.12%)</title><rect x="147.1" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (2 samples, 0.02%)</title><rect x="148.2" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.04%)</title><rect x="148.5" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="148.7" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.05%)</title><rect x="149.0" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (139 samples, 1.70%)</title><rect x="149.5" y="547.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.12%)</title><rect x="149.5" y="531.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.10%)</title><rect x="149.8" y="515.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="150.1" y="499.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.1" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="150.7" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (128 samples, 1.57%)</title><rect x="151.1" y="531.0" width="18.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (126 samples, 1.54%)</title><rect x="151.4" y="515.0" width="18.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (10 samples, 0.12%)</title><rect x="151.9" y="499.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.9" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (10 samples, 0.12%)</title><rect x="151.9" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (100 samples, 1.22%)</title><rect x="153.4" y="499.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (83 samples, 1.02%)</title><rect x="153.9" y="483.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (82 samples, 1.00%)</title><rect x="154.0" y="467.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (82 samples, 1.00%)</title><rect x="154.0" y="451.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.0" y="462.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="154.5" y="435.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="157.5" y="446.0"></text>
</g>
<g>
<title>__libc_pread (74 samples, 0.90%)</title><rect x="155.2" y="435.0" width="10.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="158.2" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 0.82%)</title><rect x="156.2" y="419.0" width="9.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="159.2" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 0.82%)</title><rect x="156.2" y="403.0" width="9.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="159.2" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (59 samples, 0.72%)</title><rect x="157.2" y="387.0" width="8.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="160.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (59 samples, 0.72%)</title><rect x="157.2" y="371.0" width="8.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="160.2" y="382.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.07%)</title><rect x="157.3" y="355.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="160.3" y="366.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.07%)</title><rect x="157.3" y="339.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="160.3" y="350.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.07%)</title><rect x="157.3" y="323.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="160.3" y="334.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="158.2" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="161.2" y="366.0"></text>
</g>
<g>
<title>vfs_read (48 samples, 0.59%)</title><rect x="158.8" y="355.0" width="6.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="161.8" y="366.0"></text>
</g>
<g>
<title>__vfs_read (38 samples, 0.46%)</title><rect x="159.1" y="339.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="162.1" y="350.0"></text>
</g>
<g>
<title>new_sync_read (37 samples, 0.45%)</title><rect x="159.2" y="323.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.2" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (36 samples, 0.44%)</title><rect x="159.4" y="307.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.4" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (35 samples, 0.43%)</title><rect x="159.5" y="291.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.5" y="302.0"></text>
</g>
<g>
<title>generic_file_buffered_read (34 samples, 0.42%)</title><rect x="159.6" y="275.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.6" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (11 samples, 0.13%)</title><rect x="160.1" y="259.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="163.1" y="270.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.02%)</title><rect x="160.8" y="243.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="163.8" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.05%)</title><rect x="161.1" y="243.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="164.1" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (16 samples, 0.20%)</title><rect x="161.7" y="259.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="164.7" y="270.0"></text>
</g>
<g>
<title>find_get_entry (16 samples, 0.20%)</title><rect x="161.7" y="243.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="164.7" y="254.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.10%)</title><rect x="162.7" y="227.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.7" y="238.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.05%)</title><rect x="164.0" y="259.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="167.0" y="270.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="164.3" y="243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="167.3" y="254.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.09%)</title><rect x="164.7" y="339.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="167.7" y="350.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.07%)</title><rect x="164.8" y="323.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.8" y="334.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="165.0" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.0" y="318.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="165.0" y="291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.0" y="302.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="165.4" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (14 samples, 0.17%)</title><rect x="165.9" y="483.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.9" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="166.0" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.0" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="166.0" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.13%)</title><rect x="166.3" y="467.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.09%)</title><rect x="167.9" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.06%)</title><rect x="168.2" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5 samples, 0.06%)</title><rect x="168.9" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.9" y="510.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4,570 samples, 55.89%)</title><rect x="169.6" y="707.0" width="659.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.6" y="718.0">java/util/Spliterators$1Adapter.hasNext</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4,449 samples, 54.41%)</title><rect x="187.1" y="691.0" width="642.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.1" y="702.0">java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4,449 samples, 54.41%)</title><rect x="187.1" y="675.0" width="642.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.1" y="686.0">java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance</text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (3,366 samples, 41.16%)</title><rect x="187.1" y="659.0" width="485.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.1" y="670.0">java/util/Spliterator.getExactSizeIfKnown</text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (3,366 samples, 41.16%)</title><rect x="187.1" y="643.0" width="485.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.1" y="654.0">java/util/Spliterators$IteratorSpliterator.estimateSize</text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2,758 samples, 33.73%)</title><rect x="187.2" y="627.0" width="398.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.2" y="638.0">java/util/TreeMap$AscendingSubMap$AscendingEntrySetVie..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (2,594 samples, 31.72%)</title><rect x="187.2" y="611.0" width="374.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.2" y="622.0">java/util/TreeMap$NavigableSubMap$SubMapEntryIterat..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (2,594 samples, 31.72%)</title><rect x="187.2" y="595.0" width="374.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.2" y="606.0">java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;i..</text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="561.1" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="564.1" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="561.1" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.1" y="574.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.02%)</title><rect x="561.1" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="564.1" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="561.1" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="564.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (164 samples, 2.01%)</title><rect x="561.5" y="611.0" width="23.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.5" y="622.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (11 samples, 0.13%)</title><rect x="583.6" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="583.6" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (9 samples, 0.11%)</title><rect x="583.9" y="579.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.07%)</title><rect x="584.3" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.07%)</title><rect x="584.3" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.3" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.07%)</title><rect x="584.3" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="584.8" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.8" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.02%)</title><rect x="584.8" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (607 samples, 7.42%)</title><rect x="585.2" y="627.0" width="87.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.2" y="638.0">java/util/..</text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (10 samples, 0.12%)</title><rect x="598.3" y="611.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (10 samples, 0.12%)</title><rect x="598.3" y="595.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.3" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (10 samples, 0.12%)</title><rect x="598.3" y="579.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (10 samples, 0.12%)</title><rect x="598.3" y="563.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.12%)</title><rect x="598.3" y="547.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.12%)</title><rect x="598.3" y="531.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.3" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.12%)</title><rect x="598.3" y="515.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.3" y="526.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.02%)</title><rect x="599.5" y="499.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="602.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (506 samples, 6.19%)</title><rect x="599.8" y="611.0" width="73.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.8" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (506 samples, 6.19%)</title><rect x="599.8" y="595.0" width="73.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.8" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (506 samples, 6.19%)</title><rect x="599.8" y="579.0" width="73.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.8" y="590.0">java/uti..</text>
</g>
<g>
<title>java/util/TreeMap.successor (185 samples, 2.26%)</title><rect x="646.1" y="563.0" width="26.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.1" y="574.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (97 samples, 1.19%)</title><rect x="672.8" y="659.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (42 samples, 0.51%)</title><rect x="672.9" y="643.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$69/1913638415.getAsBoolean (54 samples, 0.66%)</title><rect x="679.0" y="643.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (54 samples, 0.66%)</title><rect x="679.0" y="627.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.0" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (53 samples, 0.65%)</title><rect x="679.2" y="611.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.2" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (50 samples, 0.61%)</title><rect x="679.2" y="595.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (50 samples, 0.61%)</title><rect x="679.2" y="579.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (50 samples, 0.61%)</title><rect x="679.2" y="563.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (2 samples, 0.02%)</title><rect x="686.4" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (985 samples, 12.05%)</title><rect x="686.8" y="659.0" width="142.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.8" y="670.0">java/util/stream/S..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (2,244 samples, 27.44%)</title><rect x="829.2" y="739.0" width="323.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.2" y="750.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (2 samples, 0.02%)</title><rect x="829.2" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (2 samples, 0.02%)</title><rect x="829.2" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.2" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (5 samples, 0.06%)</title><rect x="829.7" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.7" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (4 samples, 0.05%)</title><rect x="829.8" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.8" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (4 samples, 0.05%)</title><rect x="829.8" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.8" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absHighest (2 samples, 0.02%)</title><rect x="830.1" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$72/1013792596.accept (2,236 samples, 27.34%)</title><rect x="830.4" y="723.0" width="322.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.4" y="734.0">ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$7..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (2,236 samples, 27.34%)</title><rect x="830.4" y="707.0" width="322.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.4" y="718.0">ru/mail/polis/dao/nik27090/DAOImpl.lambda$ge..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (2,235 samples, 27.33%)</title><rect x="830.5" y="691.0" width="322.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.5" y="702.0">ru/mail/polis/dao/nik27090/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (2,234 samples, 27.32%)</title><rect x="830.7" y="675.0" width="322.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.7" y="686.0">ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (2,233 samples, 27.31%)</title><rect x="830.8" y="659.0" width="322.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.8" y="670.0">ru/mail/polis/dao/nik27090/SSTable.findElement</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.17%)</title><rect x="831.7" y="643.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.7" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 0.17%)</title><rect x="831.7" y="627.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.05%)</title><rect x="832.7" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.7" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.04%)</title><rect x="833.3" y="611.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="836.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (37 samples, 0.45%)</title><rect x="833.7" y="643.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (35 samples, 0.43%)</title><rect x="834.0" y="627.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.42%)</title><rect x="834.0" y="611.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (29 samples, 0.35%)</title><rect x="834.7" y="595.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.7" y="606.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.05%)</title><rect x="835.3" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (14 samples, 0.17%)</title><rect x="835.9" y="579.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (14 samples, 0.17%)</title><rect x="835.9" y="563.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (14 samples, 0.17%)</title><rect x="835.9" y="547.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.02%)</title><rect x="837.6" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.05%)</title><rect x="837.9" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.05%)</title><rect x="837.9" y="563.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.05%)</title><rect x="837.9" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.9" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="838.0" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.04%)</title><rect x="838.5" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (2,176 samples, 26.61%)</title><rect x="839.0" y="643.0" width="314.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.0" y="654.0">ru/mail/polis/dao/nik27090/SSTable.getKeyB..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (28 samples, 0.34%)</title><rect x="840.1" y="627.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.1" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="840.1" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="843.1" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.05%)</title><rect x="840.1" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="843.1" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.05%)</title><rect x="840.1" y="579.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="843.1" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="840.1" y="563.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="843.1" y="574.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="840.3" y="547.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="843.3" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="840.3" y="531.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="843.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.29%)</title><rect x="840.6" y="611.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.21%)</title><rect x="841.6" y="595.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.6" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.16%)</title><rect x="842.2" y="579.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="843.7" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,140 samples, 26.17%)</title><rect x="844.1" y="627.0" width="308.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.1" y="638.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (2 samples, 0.02%)</title><rect x="845.0" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.0" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.02%)</title><rect x="845.0" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,132 samples, 26.07%)</title><rect x="845.3" y="611.0" width="307.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.3" y="622.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (19 samples, 0.23%)</title><rect x="849.4" y="595.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (133 samples, 1.63%)</title><rect x="852.2" y="595.0" width="19.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.2" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (132 samples, 1.61%)</title><rect x="852.3" y="579.0" width="19.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.3" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (30 samples, 0.37%)</title><rect x="867.0" y="563.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="870.0" y="574.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (30 samples, 0.37%)</title><rect x="867.0" y="547.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (30 samples, 0.37%)</title><rect x="867.0" y="531.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (40 samples, 0.49%)</title><rect x="871.4" y="595.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.4" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (39 samples, 0.48%)</title><rect x="871.5" y="579.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.06%)</title><rect x="876.4" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.4" y="574.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="876.4" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="876.4" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/SharedSecrets.getJavaLangAccess (3 samples, 0.04%)</title><rect x="876.7" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="879.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (2 samples, 0.02%)</title><rect x="877.1" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,751 samples, 21.41%)</title><rect x="877.4" y="595.0" width="252.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.4" y="606.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (18 samples, 0.22%)</title><rect x="879.5" y="579.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.5" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (15 samples, 0.18%)</title><rect x="879.5" y="563.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.5" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="881.2" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.2" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.isDirect (3 samples, 0.04%)</title><rect x="881.6" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.6" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (3 samples, 0.04%)</title><rect x="882.0" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.0" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (3 samples, 0.04%)</title><rect x="882.0" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (3 samples, 0.04%)</title><rect x="882.0" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.0" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (3 samples, 0.04%)</title><rect x="882.0" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,477 samples, 18.06%)</title><rect x="882.5" y="579.0" width="213.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.5" y="590.0">sun/nio/ch/IOUtil.readIntoNa..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,468 samples, 17.95%)</title><rect x="883.8" y="563.0" width="211.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="886.8" y="574.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,466 samples, 17.93%)</title><rect x="884.1" y="547.0" width="211.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.1" y="558.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (52 samples, 0.64%)</title><rect x="891.6" y="531.0" width="7.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="894.6" y="542.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (10 samples, 0.12%)</title><rect x="899.1" y="531.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="902.1" y="542.0"></text>
</g>
<g>
<title>__libc_pread (1,342 samples, 16.41%)</title><rect x="900.5" y="531.0" width="193.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="903.5" y="542.0">__libc_pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,189 samples, 14.54%)</title><rect x="922.6" y="515.0" width="171.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="925.6" y="526.0">entry_SYSCALL_64_after..</text>
</g>
<g>
<title>__x64_sys_pread64 (16 samples, 0.20%)</title><rect x="922.6" y="499.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="925.6" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="924.9" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="927.9" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1,171 samples, 14.32%)</title><rect x="925.2" y="499.0" width="169.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="928.2" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (1,000 samples, 12.23%)</title><rect x="949.3" y="483.0" width="144.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="952.3" y="494.0">__x64_sys_pread64</text>
</g>
<g>
<title>fput (5 samples, 0.06%)</title><rect x="949.4" y="467.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="952.4" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (993 samples, 12.14%)</title><rect x="950.2" y="467.0" width="143.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="953.2" y="478.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (66 samples, 0.81%)</title><rect x="952.8" y="451.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="955.8" y="462.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="952.8" y="435.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="955.8" y="446.0"></text>
</g>
<g>
<title>__fget_light (64 samples, 0.78%)</title><rect x="953.0" y="435.0" width="9.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="956.0" y="446.0"></text>
</g>
<g>
<title>__fget (62 samples, 0.76%)</title><rect x="953.3" y="419.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="956.3" y="430.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.11%)</title><rect x="962.3" y="451.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="965.3" y="462.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.10%)</title><rect x="963.6" y="451.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="966.6" y="462.0"></text>
</g>
<g>
<title>fput (4 samples, 0.05%)</title><rect x="964.7" y="451.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.7" y="462.0"></text>
</g>
<g>
<title>fput_many (32 samples, 0.39%)</title><rect x="965.3" y="451.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="968.3" y="462.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="969.9" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="972.9" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.05%)</title><rect x="970.2" y="451.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="973.2" y="462.0"></text>
</g>
<g>
<title>vfs_read (850 samples, 10.40%)</title><rect x="970.8" y="451.0" width="122.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="973.8" y="462.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (22 samples, 0.27%)</title><rect x="977.6" y="435.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="980.6" y="446.0"></text>
</g>
<g>
<title>__vfs_read (614 samples, 7.51%)</title><rect x="980.8" y="435.0" width="88.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="983.8" y="446.0">__vfs_read</text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.15%)</title><rect x="981.3" y="419.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="984.3" y="430.0"></text>
</g>
<g>
<title>iov_iter_init (7 samples, 0.09%)</title><rect x="983.1" y="419.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.1" y="430.0"></text>
</g>
<g>
<title>new_sync_read (591 samples, 7.23%)</title><rect x="984.1" y="419.0" width="85.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="987.1" y="430.0">new_sync_r..</text>
</g>
<g>
<title>ext4_file_read_iter (543 samples, 6.64%)</title><rect x="990.9" y="403.0" width="78.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="993.9" y="414.0">ext4_file..</text>
</g>
<g>
<title>generic_file_buffered_read (6 samples, 0.07%)</title><rect x="992.9" y="387.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="995.9" y="398.0"></text>
</g>
<g>
<title>generic_file_read_iter (523 samples, 6.40%)</title><rect x="993.7" y="387.0" width="75.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="996.7" y="398.0">generic_..</text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.06%)</title><rect x="995.6" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="998.6" y="382.0"></text>
</g>
<g>
<title>generic_file_buffered_read (499 samples, 6.10%)</title><rect x="996.3" y="371.0" width="72.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="999.3" y="382.0">generic_..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.06%)</title><rect x="1011.2" y="355.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1014.2" y="366.0"></text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.05%)</title><rect x="1011.9" y="355.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1014.9" y="366.0"></text>
</g>
<g>
<title>copy_page_to_iter (157 samples, 1.92%)</title><rect x="1012.5" y="355.0" width="22.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1015.5" y="366.0">c..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (26 samples, 0.32%)</title><rect x="1017.7" y="339.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1020.7" y="350.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (87 samples, 1.06%)</title><rect x="1021.4" y="339.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1024.4" y="350.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.05%)</title><rect x="1034.0" y="339.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.0" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.05%)</title><rect x="1034.6" y="339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1037.6" y="350.0"></text>
</g>
<g>
<title>copyout (11 samples, 0.13%)</title><rect x="1035.2" y="355.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1038.2" y="366.0"></text>
</g>
<g>
<title>mark_page_accessed (8 samples, 0.10%)</title><rect x="1036.9" y="355.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1039.9" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (150 samples, 1.83%)</title><rect x="1038.0" y="355.0" width="21.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.0" y="366.0">p..</text>
</g>
<g>
<title>PageHuge (2 samples, 0.02%)</title><rect x="1038.6" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1041.6" y="350.0"></text>
</g>
<g>
<title>find_get_entry (142 samples, 1.74%)</title><rect x="1038.9" y="339.0" width="20.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1041.9" y="350.0"></text>
</g>
<g>
<title>PageHuge (4 samples, 0.05%)</title><rect x="1048.3" y="323.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1051.3" y="334.0"></text>
</g>
<g>
<title>xas_load (57 samples, 0.70%)</title><rect x="1048.9" y="323.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1051.9" y="334.0"></text>
</g>
<g>
<title>xas_start (16 samples, 0.20%)</title><rect x="1057.1" y="323.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1060.1" y="334.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="1059.4" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1062.4" y="350.0"></text>
</g>
<g>
<title>touch_atime (59 samples, 0.72%)</title><rect x="1059.8" y="355.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1062.8" y="366.0"></text>
</g>
<g>
<title>atime_needs_update (42 samples, 0.51%)</title><rect x="1061.4" y="339.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.4" y="350.0"></text>
</g>
<g>
<title>current_time (27 samples, 0.33%)</title><rect x="1063.0" y="323.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.0" y="334.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.05%)</title><rect x="1064.6" y="307.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1067.6" y="318.0"></text>
</g>
<g>
<title>timestamp_truncate (12 samples, 0.15%)</title><rect x="1065.2" y="307.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1068.2" y="318.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.04%)</title><rect x="1067.1" y="323.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.1" y="334.0"></text>
</g>
<g>
<title>current_time (6 samples, 0.07%)</title><rect x="1067.5" y="339.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.5" y="350.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="1068.3" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1071.3" y="382.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.05%)</title><rect x="1068.6" y="371.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1071.6" y="382.0"></text>
</g>
<g>
<title>fsnotify (22 samples, 0.27%)</title><rect x="1069.4" y="435.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1072.4" y="446.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.09%)</title><rect x="1072.5" y="435.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1075.5" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (136 samples, 1.66%)</title><rect x="1073.5" y="435.0" width="19.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1076.5" y="446.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="1075.7" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1078.7" y="430.0"></text>
</g>
<g>
<title>security_file_permission (117 samples, 1.43%)</title><rect x="1076.3" y="419.0" width="16.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1079.3" y="430.0"></text>
</g>
<g>
<title>__fsnotify_parent (17 samples, 0.21%)</title><rect x="1077.9" y="403.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1080.9" y="414.0"></text>
</g>
<g>
<title>apparmor_file_permission (61 samples, 0.75%)</title><rect x="1080.3" y="403.0" width="8.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1083.3" y="414.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.05%)</title><rect x="1080.3" y="387.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1083.3" y="398.0"></text>
</g>
<g>
<title>common_file_perm (57 samples, 0.70%)</title><rect x="1080.9" y="387.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1083.9" y="398.0"></text>
</g>
<g>
<title>aa_file_perm (23 samples, 0.28%)</title><rect x="1084.9" y="371.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1087.9" y="382.0"></text>
</g>
<g>
<title>aa_label_is_subset (4 samples, 0.05%)</title><rect x="1087.7" y="355.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1090.7" y="366.0"></text>
</g>
<g>
<title>aa_label_is_subset (6 samples, 0.07%)</title><rect x="1088.3" y="371.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1091.3" y="382.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.05%)</title><rect x="1089.1" y="403.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1092.1" y="414.0"></text>
</g>
<g>
<title>fsnotify (24 samples, 0.29%)</title><rect x="1089.7" y="403.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1092.7" y="414.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="1093.2" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1096.2" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.05%)</title><rect x="1093.6" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1096.6" y="494.0"></text>
</g>
<g>
<title>convertReturnVal (4 samples, 0.05%)</title><rect x="1094.2" y="531.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1097.2" y="542.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.07%)</title><rect x="1094.8" y="531.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1097.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (239 samples, 2.92%)</title><rect x="1095.6" y="579.0" width="34.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1098.6" y="590.0">su..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (56 samples, 0.68%)</title><rect x="1098.9" y="563.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.9" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (18 samples, 0.22%)</title><rect x="1103.7" y="547.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.7" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (5 samples, 0.06%)</title><rect x="1106.3" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (160 samples, 1.96%)</title><rect x="1107.0" y="563.0" width="23.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.0" y="574.0">s..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (3 samples, 0.04%)</title><rect x="1126.1" y="547.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.06%)</title><rect x="1126.5" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (20 samples, 0.24%)</title><rect x="1127.2" y="547.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.2" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="1128.4" y="531.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1131.4" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="1129.2" y="531.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1132.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (104 samples, 1.27%)</title><rect x="1130.1" y="595.0" width="15.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (65 samples, 0.79%)</title><rect x="1135.7" y="579.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.7" y="590.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so (3 samples, 0.04%)</title><rect x="1144.4" y="563.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1147.4" y="574.0"></text>
</g>
<g>
<title>pthread_self (2 samples, 0.02%)</title><rect x="1144.8" y="563.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1147.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (54 samples, 0.66%)</title><rect x="1145.1" y="595.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (101 samples, 1.24%)</title><rect x="1153.2" y="739.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (101 samples, 1.24%)</title><rect x="1153.2" y="723.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (101 samples, 1.24%)</title><rect x="1153.2" y="707.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1156.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (20 samples, 0.24%)</title><rect x="1153.3" y="691.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (19 samples, 0.23%)</title><rect x="1153.5" y="675.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1156.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (19 samples, 0.23%)</title><rect x="1153.5" y="659.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getNext (19 samples, 0.23%)</title><rect x="1153.5" y="643.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (9 samples, 0.11%)</title><rect x="1153.5" y="627.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.11%)</title><rect x="1153.5" y="611.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.11%)</title><rect x="1153.5" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.10%)</title><rect x="1153.6" y="579.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.09%)</title><rect x="1153.6" y="563.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.09%)</title><rect x="1153.6" y="547.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.09%)</title><rect x="1153.6" y="531.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.6" y="542.0"></text>
</g>
<g>
<title>__libc_pread (6 samples, 0.07%)</title><rect x="1153.8" y="515.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1156.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="1153.9" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.9" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="1153.9" y="483.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.9" y="494.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="1153.9" y="467.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1156.9" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.05%)</title><rect x="1154.1" y="451.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.1" y="462.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.05%)</title><rect x="1154.1" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1157.1" y="446.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.05%)</title><rect x="1154.1" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1157.1" y="430.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.05%)</title><rect x="1154.1" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.1" y="414.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.04%)</title><rect x="1154.2" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1157.2" y="398.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.04%)</title><rect x="1154.2" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.2" y="382.0"></text>
</g>
<g>
<title>generic_file_buffered_read (3 samples, 0.04%)</title><rect x="1154.2" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.2" y="366.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="1154.2" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1157.2" y="350.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="1154.4" y="323.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1157.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (10 samples, 0.12%)</title><rect x="1154.8" y="627.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="1154.8" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1154.8" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1157.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.09%)</title><rect x="1155.2" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.09%)</title><rect x="1155.2" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1158.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="1155.2" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.2" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="1155.2" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.05%)</title><rect x="1155.7" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.04%)</title><rect x="1155.7" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.04%)</title><rect x="1155.7" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.04%)</title><rect x="1155.7" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.7" y="542.0"></text>
</g>
<g>
<title>__libc_pread (3 samples, 0.04%)</title><rect x="1155.7" y="515.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1158.7" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1155.8" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1158.8" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1155.8" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (79 samples, 0.97%)</title><rect x="1156.4" y="691.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.4" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (79 samples, 0.97%)</title><rect x="1156.4" y="675.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.4" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (78 samples, 0.95%)</title><rect x="1156.5" y="659.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (78 samples, 0.95%)</title><rect x="1156.5" y="643.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (78 samples, 0.95%)</title><rect x="1156.5" y="627.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (78 samples, 0.95%)</title><rect x="1156.5" y="611.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (78 samples, 0.95%)</title><rect x="1156.5" y="595.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1159.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (78 samples, 0.95%)</title><rect x="1156.5" y="579.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (78 samples, 0.95%)</title><rect x="1156.5" y="563.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getNext (78 samples, 0.95%)</title><rect x="1156.5" y="547.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (35 samples, 0.43%)</title><rect x="1156.5" y="531.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="1156.5" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1156.5" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1156.5" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1156.5" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (32 samples, 0.39%)</title><rect x="1157.0" y="515.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (32 samples, 0.39%)</title><rect x="1157.0" y="499.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.31%)</title><rect x="1157.5" y="483.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (23 samples, 0.28%)</title><rect x="1157.5" y="467.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (23 samples, 0.28%)</title><rect x="1157.5" y="451.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (23 samples, 0.28%)</title><rect x="1157.5" y="435.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.5" y="446.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="1157.5" y="419.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1160.5" y="430.0"></text>
</g>
<g>
<title>__libc_pread (20 samples, 0.24%)</title><rect x="1158.0" y="419.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1161.0" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.20%)</title><rect x="1158.5" y="403.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1161.5" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.18%)</title><rect x="1158.7" y="387.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1161.7" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (13 samples, 0.16%)</title><rect x="1159.0" y="371.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1162.0" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (13 samples, 0.16%)</title><rect x="1159.0" y="355.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1162.0" y="366.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.15%)</title><rect x="1159.1" y="339.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1162.1" y="350.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.10%)</title><rect x="1159.4" y="323.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1162.4" y="334.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.09%)</title><rect x="1159.6" y="307.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1162.6" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.07%)</title><rect x="1159.7" y="291.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1162.7" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (6 samples, 0.07%)</title><rect x="1159.7" y="275.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1162.7" y="286.0"></text>
</g>
<g>
<title>generic_file_buffered_read (5 samples, 0.06%)</title><rect x="1159.8" y="259.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.8" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="1160.1" y="243.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.1" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.04%)</title><rect x="1160.1" y="227.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.1" y="238.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="1160.6" y="323.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.6" y="334.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="1160.6" y="307.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1163.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="1160.8" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.02%)</title><rect x="1160.8" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.04%)</title><rect x="1161.1" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="1161.3" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (43 samples, 0.53%)</title><rect x="1161.6" y="531.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.06%)</title><rect x="1161.6" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1162.0" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (38 samples, 0.46%)</title><rect x="1162.3" y="515.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1165.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (38 samples, 0.46%)</title><rect x="1162.3" y="499.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.38%)</title><rect x="1162.6" y="483.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 0.32%)</title><rect x="1162.7" y="467.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (26 samples, 0.32%)</title><rect x="1162.7" y="451.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1165.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (26 samples, 0.32%)</title><rect x="1162.7" y="435.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1165.7" y="446.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="1162.7" y="419.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1165.7" y="430.0"></text>
</g>
<g>
<title>__libc_pread (22 samples, 0.27%)</title><rect x="1163.3" y="419.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1166.3" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.23%)</title><rect x="1163.7" y="403.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1166.7" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.23%)</title><rect x="1163.7" y="387.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1166.7" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.21%)</title><rect x="1164.0" y="371.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.0" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (17 samples, 0.21%)</title><rect x="1164.0" y="355.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.0" y="366.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="1164.0" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.0" y="350.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="1164.0" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.0" y="334.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="1164.0" y="307.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.0" y="318.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.18%)</title><rect x="1164.3" y="339.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1167.3" y="350.0"></text>
</g>
<g>
<title>__vfs_read (14 samples, 0.17%)</title><rect x="1164.3" y="323.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1167.3" y="334.0"></text>
</g>
<g>
<title>new_sync_read (13 samples, 0.16%)</title><rect x="1164.5" y="307.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1167.5" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (13 samples, 0.16%)</title><rect x="1164.5" y="291.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1167.5" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (13 samples, 0.16%)</title><rect x="1164.5" y="275.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1167.5" y="286.0"></text>
</g>
<g>
<title>generic_file_buffered_read (13 samples, 0.16%)</title><rect x="1164.5" y="259.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1167.5" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="1165.0" y="243.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1168.0" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.06%)</title><rect x="1165.5" y="243.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.5" y="254.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.05%)</title><rect x="1165.6" y="227.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1168.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.05%)</title><rect x="1166.5" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="1166.6" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1169.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.05%)</title><rect x="1167.1" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (5 samples, 0.06%)</title><rect x="1167.8" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.04%)</title><rect x="1168.5" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="1168.5" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1171.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="1168.5" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="1168.6" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.02%)</title><rect x="1168.9" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="1168.9" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1171.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.20%)</title><rect x="1169.2" y="851.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1169.4" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1169.7" y="819.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1172.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1169.7" y="803.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1172.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="1169.7" y="787.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.13%)</title><rect x="1169.9" y="835.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.13%)</title><rect x="1169.9" y="819.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1171.2" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1174.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.05%)</title><rect x="1171.5" y="851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.06%)</title><rect x="1172.1" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="1172.1" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1175.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="1172.3" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="1172.3" y="803.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="1172.3" y="787.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="1172.3" y="771.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.02%)</title><rect x="1172.3" y="755.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.3" y="766.0"></text>
</g>
<g>
<title>RequestHandler3_getEntity.handleRequest (2 samples, 0.02%)</title><rect x="1172.3" y="739.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (68 samples, 0.83%)</title><rect x="1172.8" y="867.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (59 samples, 0.72%)</title><rect x="1174.1" y="851.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.1" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.12%)</title><rect x="1175.0" y="835.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1178.0" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="1175.0" y="819.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1178.0" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.09%)</title><rect x="1175.3" y="819.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1178.3" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="1175.9" y="803.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.9" y="814.0"></text>
</g>
<g>
<title>__recv (39 samples, 0.48%)</title><rect x="1176.4" y="835.0" width="5.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1179.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.46%)</title><rect x="1176.6" y="819.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.45%)</title><rect x="1176.7" y="803.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1179.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (32 samples, 0.39%)</title><rect x="1177.4" y="787.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.4" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (31 samples, 0.38%)</title><rect x="1177.4" y="771.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.4" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (26 samples, 0.32%)</title><rect x="1177.7" y="755.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.7" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (22 samples, 0.27%)</title><rect x="1177.9" y="739.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1180.9" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.24%)</title><rect x="1178.2" y="723.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.2" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.04%)</title><rect x="1178.5" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.5" y="718.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="1178.5" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.5" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.04%)</title><rect x="1178.5" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1181.5" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="1178.6" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1181.6" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 0.15%)</title><rect x="1178.9" y="707.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1181.9" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.12%)</title><rect x="1179.0" y="691.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.0" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.06%)</title><rect x="1179.8" y="675.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.8" y="686.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="1179.8" y="659.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.8" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.02%)</title><rect x="1180.0" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1183.0" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.02%)</title><rect x="1180.8" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1183.8" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="1180.8" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1183.8" y="702.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="1180.8" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.8" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.04%)</title><rect x="1181.1" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.1" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.04%)</title><rect x="1181.1" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1184.1" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.04%)</title><rect x="1181.1" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1184.1" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.02%)</title><rect x="1181.2" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="1181.5" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="1182.1" y="835.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1185.1" y="846.0"></text>
</g>
<g>
<title>start_thread (49 samples, 0.60%)</title><rect x="1182.8" y="915.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1185.8" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (49 samples, 0.60%)</title><rect x="1182.8" y="899.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1185.8" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (49 samples, 0.60%)</title><rect x="1182.8" y="883.0" width="7.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.8" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.02%)</title><rect x="1182.8" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.8" y="878.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.02%)</title><rect x="1182.8" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.8" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.02%)</title><rect x="1182.8" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.8" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.02%)</title><rect x="1182.8" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.8" y="830.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.10%)</title><rect x="1183.1" y="867.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.1" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.09%)</title><rect x="1183.1" y="851.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.1" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.07%)</title><rect x="1183.1" y="835.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.1" y="846.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.06%)</title><rect x="1183.2" y="819.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1186.2" y="830.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (37 samples, 0.45%)</title><rect x="1184.2" y="867.0" width="5.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.2" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (37 samples, 0.45%)</title><rect x="1184.2" y="851.0" width="5.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.2" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (37 samples, 0.45%)</title><rect x="1184.2" y="835.0" width="5.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (37 samples, 0.45%)</title><rect x="1184.2" y="819.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.2" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (37 samples, 0.45%)</title><rect x="1184.2" y="803.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.2" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (21 samples, 0.26%)</title><rect x="1184.2" y="787.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.2" y="798.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.02%)</title><rect x="1184.2" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.2" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (15 samples, 0.18%)</title><rect x="1185.1" y="771.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.1" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.05%)</title><rect x="1185.5" y="755.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.5" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.02%)</title><rect x="1186.2" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.02%)</title><rect x="1186.2" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.2" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (11 samples, 0.13%)</title><rect x="1187.3" y="787.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (5 samples, 0.06%)</title><rect x="1187.3" y="771.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (5 samples, 0.06%)</title><rect x="1187.3" y="755.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.3" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.02%)</title><rect x="1187.7" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (5 samples, 0.06%)</title><rect x="1188.0" y="771.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.0" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.05%)</title><rect x="1188.1" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 0.05%)</title><rect x="1188.1" y="739.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.02%)</title><rect x="1188.4" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.02%)</title><rect x="1188.4" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.4" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1188.8" y="787.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.8" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1188.8" y="771.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1188.8" y="755.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1188.8" y="739.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1188.8" y="723.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.06%)</title><rect x="1188.8" y="707.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.8" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.8" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.8" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.8" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.8" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.8" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.8" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.8" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.8" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.8" y="595.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.8" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.8" y="579.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.8" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.8" y="547.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.8" y="531.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.8" y="542.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1189.1" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1189.1" y="675.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1189.1" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1189.1" y="643.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1189.1" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1189.1" y="611.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1189.1" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1189.3" y="579.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.3" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1189.3" y="563.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1189.3" y="547.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1189.3" y="531.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1189.3" y="515.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1189.3" y="499.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1189.3" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1189.3" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1189.3" y="451.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1189.3" y="435.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.3" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1189.3" y="419.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1189.3" y="403.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.3" y="414.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.02%)</title><rect x="1189.6" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.6" y="878.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.02%)</title><rect x="1189.6" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.02%)</title><rect x="1189.6" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.02%)</title><rect x="1189.6" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
</g>
</svg>
