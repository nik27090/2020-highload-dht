<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (13,046 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (11,448 samples, 87.75%)</title><rect x="10.0" y="339.0" width="1035.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,448 samples, 87.75%)</title><rect x="10.0" y="323.0" width="1035.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,448 samples, 87.75%)</title><rect x="10.0" y="307.0" width="1035.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,744 samples, 28.70%)</title><rect x="10.0" y="291.0" width="338.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3,744 samples, 28.70%)</title><rect x="10.0" y="275.0" width="338.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="286.0">java/util/concurrent/ArrayBlockingQueue.take</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,059 samples, 8.12%)</title><rect x="10.0" y="259.0" width="95.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="270.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,059 samples, 8.12%)</title><rect x="10.0" y="243.0" width="95.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="254.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,059 samples, 8.12%)</title><rect x="10.0" y="227.0" width="95.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,059 samples, 8.12%)</title><rect x="10.0" y="211.0" width="95.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,059 samples, 8.12%)</title><rect x="10.0" y="195.0" width="95.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/interna..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,059 samples, 8.12%)</title><rect x="10.0" y="179.0" width="95.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="190.0">java.util.c..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,685 samples, 20.58%)</title><rect x="105.8" y="259.0" width="242.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.8" y="270.0">java/util/concurrent/locks/Reent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,685 samples, 20.58%)</title><rect x="105.8" y="243.0" width="242.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.8" y="254.0">java/util/concurrent/locks/Abstr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,685 samples, 20.58%)</title><rect x="105.8" y="227.0" width="242.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.8" y="238.0">java/util/concurrent/locks/Abstr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,685 samples, 20.58%)</title><rect x="105.8" y="211.0" width="242.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.8" y="222.0">java/util/concurrent/locks/Abstr..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,685 samples, 20.58%)</title><rect x="105.8" y="195.0" width="242.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.8" y="206.0">java/util/concurrent/locks/LockS..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,685 samples, 20.58%)</title><rect x="105.8" y="179.0" width="242.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.8" y="190.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,685 samples, 20.58%)</title><rect x="105.8" y="163.0" width="242.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="108.8" y="174.0">java.util.concurrent.locks.Reent..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$78/1857064000.run (7,704 samples, 59.05%)</title><rect x="348.6" y="291.0" width="696.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.6" y="302.0">ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$78/1857064000.run</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (7,704 samples, 59.05%)</title><rect x="348.6" y="275.0" width="696.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.6" y="286.0">ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (7,704 samples, 59.05%)</title><rect x="348.6" y="259.0" width="696.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.6" y="270.0">ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (7,658 samples, 58.70%)</title><rect x="348.6" y="243.0" width="692.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.6" y="254.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (15 samples, 0.11%)</title><rect x="348.6" y="227.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 0.11%)</title><rect x="348.6" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.06%)</title><rect x="348.6" y="195.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.06%)</title><rect x="348.6" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.06%)</title><rect x="348.6" y="163.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$97/1484584109.apply (8 samples, 0.06%)</title><rect x="348.6" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (8 samples, 0.06%)</title><rect x="348.6" y="131.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.06%)</title><rect x="348.6" y="115.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.6" y="126.0"></text>
</g>
<g>
<title>int[] (7 samples, 0.05%)</title><rect x="348.6" y="99.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="351.6" y="110.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (7 samples, 0.05%)</title><rect x="349.4" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (7 samples, 0.05%)</title><rect x="349.4" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (7 samples, 0.05%)</title><rect x="349.4" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (7 samples, 0.05%)</title><rect x="349.4" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object (7 samples, 0.05%)</title><rect x="349.4" y="131.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="352.4" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.05%)</title><rect x="350.0" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (7 samples, 0.05%)</title><rect x="350.0" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$102/1412894923.apply (7 samples, 0.05%)</title><rect x="350.0" y="195.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (7 samples, 0.05%)</title><rect x="350.0" y="179.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.0" y="190.0"></text>
</g>
<g>
<title>int[] (7 samples, 0.05%)</title><rect x="350.0" y="163.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="353.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (7,636 samples, 58.53%)</title><rect x="350.6" y="227.0" width="690.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.6" y="238.0">ru/mail/polis/dao/nik27090/DAOImpl.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (11 samples, 0.08%)</title><rect x="350.6" y="211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.6" y="222.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.03%)</title><rect x="350.6" y="195.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="353.6" y="206.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (7 samples, 0.05%)</title><rect x="351.0" y="195.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (7 samples, 0.05%)</title><rect x="351.0" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (7 samples, 0.05%)</title><rect x="351.0" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (7 samples, 0.05%)</title><rect x="351.0" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object (7 samples, 0.05%)</title><rect x="351.0" y="131.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="354.0" y="142.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (11 samples, 0.08%)</title><rect x="351.6" y="211.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (11 samples, 0.08%)</title><rect x="351.6" y="195.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (11 samples, 0.08%)</title><rect x="351.6" y="179.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (11 samples, 0.08%)</title><rect x="351.6" y="163.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (11 samples, 0.08%)</title><rect x="351.6" y="147.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="354.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (3 samples, 0.02%)</title><rect x="352.6" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (3 samples, 0.02%)</title><rect x="352.6" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (3 samples, 0.02%)</title><rect x="352.6" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (3 samples, 0.02%)</title><rect x="352.6" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (3 samples, 0.02%)</title><rect x="352.6" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="352.6" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (3 samples, 0.02%)</title><rect x="352.6" y="115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (3 samples, 0.02%)</title><rect x="352.6" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.6" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (3 samples, 0.02%)</title><rect x="352.6" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (3 samples, 0.02%)</title><rect x="352.6" y="67.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (3 samples, 0.02%)</title><rect x="352.6" y="51.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.6" y="62.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.02%)</title><rect x="352.6" y="35.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="355.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (7,611 samples, 58.34%)</title><rect x="352.9" y="211.0" width="688.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.9" y="222.0">ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.03%)</title><rect x="352.9" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (13 samples, 0.10%)</title><rect x="353.3" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (12 samples, 0.09%)</title><rect x="353.3" y="179.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.02%)</title><rect x="353.3" y="163.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.3" y="174.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.05%)</title><rect x="353.7" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="356.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.05%)</title><rect x="353.7" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.05%)</title><rect x="353.7" y="131.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (7 samples, 0.05%)</title><rect x="353.7" y="115.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.7" y="126.0"></text>
</g>
<g>
<title>int[] (7 samples, 0.05%)</title><rect x="353.7" y="99.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="356.7" y="110.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.02%)</title><rect x="354.4" y="195.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="357.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (9 samples, 0.07%)</title><rect x="354.7" y="195.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (9 samples, 0.07%)</title><rect x="354.7" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (9 samples, 0.07%)</title><rect x="354.7" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (9 samples, 0.07%)</title><rect x="354.7" y="147.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Object (8 samples, 0.06%)</title><rect x="354.7" y="131.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="357.7" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (6 samples, 0.05%)</title><rect x="355.6" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.6" y="206.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.05%)</title><rect x="355.6" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.6" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.05%)</title><rect x="355.6" y="163.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.6" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.05%)</title><rect x="355.6" y="147.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (3 samples, 0.02%)</title><rect x="355.6" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.6" y="142.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.02%)</title><rect x="355.6" y="115.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="358.6" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.entrySet (3 samples, 0.02%)</title><rect x="355.9" y="131.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.9" y="142.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.02%)</title><rect x="355.9" y="115.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="358.9" y="126.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (6 samples, 0.05%)</title><rect x="356.2" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.2" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.descendingMap (6 samples, 0.05%)</title><rect x="356.2" y="179.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.2" y="190.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.03%)</title><rect x="356.2" y="163.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="359.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7,259 samples, 55.64%)</title><rect x="356.8" y="195.0" width="656.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.8" y="206.0">java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7,259 samples, 55.64%)</title><rect x="356.8" y="179.0" width="656.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.8" y="190.0">java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireShared (7,259 samples, 55.64%)</title><rect x="356.8" y="163.0" width="656.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.8" y="174.0">java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireShared</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7,259 samples, 55.64%)</title><rect x="356.8" y="147.0" width="656.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.8" y="158.0">java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7,259 samples, 55.64%)</title><rect x="356.8" y="131.0" width="656.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.8" y="142.0">java/util/concurrent/locks/LockSupport.park</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7,259 samples, 55.64%)</title><rect x="356.8" y="115.0" width="656.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.8" y="126.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (7,259 samples, 55.64%)</title><rect x="356.8" y="99.0" width="656.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="359.8" y="110.0">java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (299 samples, 2.29%)</title><rect x="1013.4" y="195.0" width="27.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.4" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (299 samples, 2.29%)</title><rect x="1013.4" y="179.0" width="27.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.4" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (299 samples, 2.29%)</title><rect x="1013.4" y="163.0" width="27.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.4" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (299 samples, 2.29%)</title><rect x="1013.4" y="147.0" width="27.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.4" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (299 samples, 2.29%)</title><rect x="1013.4" y="131.0" width="27.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.4" y="142.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (299 samples, 2.29%)</title><rect x="1013.4" y="115.0" width="27.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.4" y="126.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (299 samples, 2.29%)</title><rect x="1013.4" y="99.0" width="27.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1016.4" y="110.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.02%)</title><rect x="1040.4" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (7 samples, 0.05%)</title><rect x="1040.7" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (3 samples, 0.02%)</title><rect x="1041.0" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (3 samples, 0.02%)</title><rect x="1041.0" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (3 samples, 0.02%)</title><rect x="1041.0" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.0" y="158.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.02%)</title><rect x="1041.0" y="131.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1044.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (8 samples, 0.06%)</title><rect x="1041.3" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (8 samples, 0.06%)</title><rect x="1041.3" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (8 samples, 0.06%)</title><rect x="1041.3" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.3" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.03%)</title><rect x="1041.3" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.3" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (4 samples, 0.03%)</title><rect x="1041.3" y="179.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1044.3" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.03%)</title><rect x="1041.7" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.7" y="206.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (4 samples, 0.03%)</title><rect x="1041.7" y="179.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1044.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (38 samples, 0.29%)</title><rect x="1042.0" y="243.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (38 samples, 0.29%)</title><rect x="1042.0" y="227.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.0" y="238.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (38 samples, 0.29%)</title><rect x="1042.0" y="211.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1045.0" y="222.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,598 samples, 12.25%)</title><rect x="1045.5" y="339.0" width="144.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.5" y="350.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,598 samples, 12.25%)</title><rect x="1045.5" y="323.0" width="144.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.5" y="334.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one.nio.http.HttpSession (23 samples, 0.18%)</title><rect x="1045.5" y="307.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1048.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,575 samples, 12.07%)</title><rect x="1047.5" y="307.0" width="142.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.5" y="318.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,575 samples, 12.07%)</title><rect x="1047.5" y="291.0" width="142.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.5" y="302.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,575 samples, 12.07%)</title><rect x="1047.5" y="275.0" width="142.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.5" y="286.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,575 samples, 12.07%)</title><rect x="1047.5" y="259.0" width="142.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.5" y="270.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (1,575 samples, 12.07%)</title><rect x="1047.5" y="243.0" width="142.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.5" y="254.0">RequestHandler1_ge..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (1,575 samples, 12.07%)</title><rect x="1047.5" y="227.0" width="142.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.5" y="238.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,575 samples, 12.07%)</title><rect x="1047.5" y="211.0" width="142.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.5" y="222.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,575 samples, 12.07%)</title><rect x="1047.5" y="195.0" width="142.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.5" y="206.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,575 samples, 12.07%)</title><rect x="1047.5" y="179.0" width="142.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.5" y="190.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,575 samples, 12.07%)</title><rect x="1047.5" y="163.0" width="142.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.5" y="174.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,575 samples, 12.07%)</title><rect x="1047.5" y="147.0" width="142.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.5" y="158.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,575 samples, 12.07%)</title><rect x="1047.5" y="131.0" width="142.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.5" y="142.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,575 samples, 12.07%)</title><rect x="1047.5" y="115.0" width="142.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.5" y="126.0">java/util/concurre..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,575 samples, 12.07%)</title><rect x="1047.5" y="99.0" width="142.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.5" y="110.0">jdk/internal/misc/..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,575 samples, 12.07%)</title><rect x="1047.5" y="83.0" width="142.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1050.5" y="94.0">java.util.concurre..</text>
</g>
</g>
</svg>
