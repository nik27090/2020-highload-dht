<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="485"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="485"> </text>
<g id="frames">
<g>
<title>all (23,316 samples, 100.00%)</title><rect x="10.0" y="451.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="462.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=54438] (504 samples, 2.16%)</title><rect x="10.0" y="435.0" width="25.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (504 samples, 2.16%)</title><rect x="10.0" y="419.0" width="25.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (57 samples, 0.24%)</title><rect x="10.0" y="403.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (57 samples, 0.24%)</title><rect x="10.0" y="387.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (447 samples, 1.92%)</title><rect x="12.9" y="403.0" width="22.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.9" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (447 samples, 1.92%)</title><rect x="12.9" y="387.0" width="22.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.9" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (447 samples, 1.92%)</title><rect x="12.9" y="371.0" width="22.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.9" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (137 samples, 0.59%)</title><rect x="12.9" y="355.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (137 samples, 0.59%)</title><rect x="12.9" y="339.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.9" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (80 samples, 0.34%)</title><rect x="12.9" y="323.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (48 samples, 0.21%)</title><rect x="12.9" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (48 samples, 0.21%)</title><rect x="12.9" y="291.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.21%)</title><rect x="12.9" y="275.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.21%)</title><rect x="12.9" y="259.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.07%)</title><rect x="12.9" y="243.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="15.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.14%)</title><rect x="13.7" y="243.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.7" y="254.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="13.7" y="227.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="16.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (32 samples, 0.14%)</title><rect x="15.3" y="307.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.14%)</title><rect x="15.3" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.14%)</title><rect x="15.3" y="275.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (32 samples, 0.14%)</title><rect x="15.3" y="259.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (32 samples, 0.14%)</title><rect x="15.3" y="243.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="18.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (57 samples, 0.24%)</title><rect x="16.9" y="323.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 0.24%)</title><rect x="16.9" y="307.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 0.24%)</title><rect x="16.9" y="291.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.12%)</title><rect x="16.9" y="275.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.13%)</title><rect x="18.3" y="275.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.3" y="286.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="18.3" y="259.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="21.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (209 samples, 0.90%)</title><rect x="19.8" y="355.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.8" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (30 samples, 0.13%)</title><rect x="19.8" y="339.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (71 samples, 0.30%)</title><rect x="21.3" y="339.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (71 samples, 0.30%)</title><rect x="21.3" y="323.0" width="3.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="24.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 0.46%)</title><rect x="24.9" y="339.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 0.46%)</title><rect x="24.9" y="323.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.9" y="334.0"></text>
</g>
<g>
<title>char[] (52 samples, 0.22%)</title><rect x="24.9" y="307.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="27.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.08%)</title><rect x="27.6" y="307.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="30.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="28.5" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="28.5" y="291.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.16%)</title><rect x="28.5" y="275.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.5" y="286.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.16%)</title><rect x="28.5" y="259.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="31.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 0.43%)</title><rect x="30.4" y="355.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 0.43%)</title><rect x="30.4" y="339.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.4" y="350.0"></text>
</g>
<g>
<title>char[] (50 samples, 0.21%)</title><rect x="30.4" y="323.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="33.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="32.9" y="323.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="35.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.15%)</title><rect x="33.8" y="323.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.15%)</title><rect x="33.8" y="307.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.15%)</title><rect x="33.8" y="291.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.8" y="302.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.15%)</title><rect x="33.8" y="275.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="36.8" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=54448] (566 samples, 2.43%)</title><rect x="35.5" y="435.0" width="28.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="38.5" y="446.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (566 samples, 2.43%)</title><rect x="35.5" y="419.0" width="28.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.5" y="430.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (566 samples, 2.43%)</title><rect x="35.5" y="403.0" width="28.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.5" y="414.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (566 samples, 2.43%)</title><rect x="35.5" y="387.0" width="28.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.5" y="398.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (566 samples, 2.43%)</title><rect x="35.5" y="371.0" width="28.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.5" y="382.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (115 samples, 0.49%)</title><rect x="35.5" y="355.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (115 samples, 0.49%)</title><rect x="35.5" y="339.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.5" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (56 samples, 0.24%)</title><rect x="35.5" y="323.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (42 samples, 0.18%)</title><rect x="35.5" y="307.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (42 samples, 0.18%)</title><rect x="35.5" y="291.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.18%)</title><rect x="35.5" y="275.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.18%)</title><rect x="35.5" y="259.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.13%)</title><rect x="35.5" y="243.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="38.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.05%)</title><rect x="37.0" y="243.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.0" y="254.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="37.0" y="227.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="40.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (14 samples, 0.06%)</title><rect x="37.6" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="37.6" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="37.6" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (14 samples, 0.06%)</title><rect x="37.6" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (14 samples, 0.06%)</title><rect x="37.6" y="243.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="40.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (59 samples, 0.25%)</title><rect x="38.3" y="323.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (59 samples, 0.25%)</title><rect x="38.3" y="307.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (59 samples, 0.25%)</title><rect x="38.3" y="291.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="38.3" y="275.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="41.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.15%)</title><rect x="39.5" y="275.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.5" y="286.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.15%)</title><rect x="39.5" y="259.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="42.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (234 samples, 1.00%)</title><rect x="41.3" y="355.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.3" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (33 samples, 0.14%)</title><rect x="41.3" y="339.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="44.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (98 samples, 0.42%)</title><rect x="43.0" y="339.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (98 samples, 0.42%)</title><rect x="43.0" y="323.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="46.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 0.44%)</title><rect x="48.0" y="339.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 0.44%)</title><rect x="48.0" y="323.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.0" y="334.0"></text>
</g>
<g>
<title>char[] (68 samples, 0.29%)</title><rect x="48.0" y="307.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="51.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="51.4" y="307.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="54.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.10%)</title><rect x="52.0" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.10%)</title><rect x="52.0" y="291.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23 samples, 0.10%)</title><rect x="52.0" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.0" y="286.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="52.0" y="259.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="55.0" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (217 samples, 0.93%)</title><rect x="53.2" y="355.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (217 samples, 0.93%)</title><rect x="53.2" y="339.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.2" y="350.0"></text>
</g>
<g>
<title>char[] (140 samples, 0.60%)</title><rect x="53.2" y="323.0" width="7.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="56.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.12%)</title><rect x="60.3" y="323.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="63.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (48 samples, 0.21%)</title><rect x="61.7" y="323.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (48 samples, 0.21%)</title><rect x="61.7" y="307.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (48 samples, 0.21%)</title><rect x="61.7" y="291.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.7" y="302.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.21%)</title><rect x="61.7" y="275.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="64.7" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=54458] (486 samples, 2.08%)</title><rect x="64.2" y="435.0" width="24.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="67.2" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (486 samples, 2.08%)</title><rect x="64.2" y="419.0" width="24.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.2" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (40 samples, 0.17%)</title><rect x="64.2" y="403.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.2" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (40 samples, 0.17%)</title><rect x="64.2" y="387.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="67.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (446 samples, 1.91%)</title><rect x="66.2" y="403.0" width="22.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.2" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (446 samples, 1.91%)</title><rect x="66.2" y="387.0" width="22.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.2" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (446 samples, 1.91%)</title><rect x="66.2" y="371.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.2" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (79 samples, 0.34%)</title><rect x="66.2" y="355.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (79 samples, 0.34%)</title><rect x="66.2" y="339.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.2" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (53 samples, 0.23%)</title><rect x="66.2" y="323.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (37 samples, 0.16%)</title><rect x="66.2" y="307.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (37 samples, 0.16%)</title><rect x="66.2" y="291.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.2" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.16%)</title><rect x="66.2" y="275.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.16%)</title><rect x="66.2" y="259.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.11%)</title><rect x="66.2" y="243.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="69.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.05%)</title><rect x="67.5" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.5" y="254.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="67.5" y="227.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="70.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (16 samples, 0.07%)</title><rect x="68.0" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="68.0" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="68.0" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (16 samples, 0.07%)</title><rect x="68.0" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (16 samples, 0.07%)</title><rect x="68.0" y="243.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="71.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (26 samples, 0.11%)</title><rect x="68.9" y="323.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.11%)</title><rect x="68.9" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.11%)</title><rect x="68.9" y="291.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="68.9" y="275.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="71.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.06%)</title><rect x="69.5" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.5" y="286.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="69.5" y="259.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="72.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (171 samples, 0.73%)</title><rect x="70.2" y="355.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.2" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (36 samples, 0.15%)</title><rect x="70.2" y="339.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="73.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (58 samples, 0.25%)</title><rect x="72.0" y="339.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (53 samples, 0.23%)</title><rect x="72.0" y="323.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="75.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.02%)</title><rect x="74.7" y="323.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="77.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 0.33%)</title><rect x="74.9" y="339.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 0.33%)</title><rect x="74.9" y="323.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.9" y="334.0"></text>
</g>
<g>
<title>char[] (29 samples, 0.12%)</title><rect x="74.9" y="307.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.11%)</title><rect x="76.4" y="307.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="79.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.10%)</title><rect x="77.7" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.10%)</title><rect x="77.7" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23 samples, 0.10%)</title><rect x="77.7" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.7" y="286.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="77.7" y="259.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="80.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (196 samples, 0.84%)</title><rect x="78.8" y="355.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (196 samples, 0.84%)</title><rect x="78.8" y="339.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.8" y="350.0"></text>
</g>
<g>
<title>char[] (85 samples, 0.36%)</title><rect x="78.8" y="323.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="81.8" y="334.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.04%)</title><rect x="83.1" y="323.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="86.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.14%)</title><rect x="83.6" y="323.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="86.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (68 samples, 0.29%)</title><rect x="85.3" y="323.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (68 samples, 0.29%)</title><rect x="85.3" y="307.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (68 samples, 0.29%)</title><rect x="85.3" y="291.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.3" y="302.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.29%)</title><rect x="85.3" y="275.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="88.3" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=54439] (464 samples, 1.99%)</title><rect x="88.7" y="435.0" width="23.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="91.7" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (464 samples, 1.99%)</title><rect x="88.7" y="419.0" width="23.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.7" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (464 samples, 1.99%)</title><rect x="88.7" y="403.0" width="23.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.7" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (464 samples, 1.99%)</title><rect x="88.7" y="387.0" width="23.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.7" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (464 samples, 1.99%)</title><rect x="88.7" y="371.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.7" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (125 samples, 0.54%)</title><rect x="88.7" y="355.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (125 samples, 0.54%)</title><rect x="88.7" y="339.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.7" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (75 samples, 0.32%)</title><rect x="88.7" y="323.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (40 samples, 0.17%)</title><rect x="88.7" y="307.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (40 samples, 0.17%)</title><rect x="88.7" y="291.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.17%)</title><rect x="88.7" y="275.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.17%)</title><rect x="88.7" y="259.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="88.7" y="243.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="91.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.11%)</title><rect x="89.5" y="243.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.5" y="254.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="89.5" y="227.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="92.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (35 samples, 0.15%)</title><rect x="90.8" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.14%)</title><rect x="90.8" y="291.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.14%)</title><rect x="90.8" y="275.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (33 samples, 0.14%)</title><rect x="90.8" y="259.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.8" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (33 samples, 0.14%)</title><rect x="90.8" y="243.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="93.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (50 samples, 0.21%)</title><rect x="92.5" y="323.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (50 samples, 0.21%)</title><rect x="92.5" y="307.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.21%)</title><rect x="92.5" y="291.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.12%)</title><rect x="92.5" y="275.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="95.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.10%)</title><rect x="93.9" y="275.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.9" y="286.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="93.9" y="259.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="96.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (249 samples, 1.07%)</title><rect x="95.1" y="355.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.1" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (36 samples, 0.15%)</title><rect x="95.1" y="339.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="98.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (102 samples, 0.44%)</title><rect x="96.9" y="339.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (102 samples, 0.44%)</title><rect x="96.9" y="323.0" width="5.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="99.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (111 samples, 0.48%)</title><rect x="102.1" y="339.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (111 samples, 0.48%)</title><rect x="102.1" y="323.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.1" y="334.0"></text>
</g>
<g>
<title>char[] (59 samples, 0.25%)</title><rect x="102.1" y="307.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="105.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.10%)</title><rect x="105.0" y="307.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="108.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.12%)</title><rect x="106.3" y="307.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.12%)</title><rect x="106.3" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.12%)</title><rect x="106.3" y="275.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.3" y="286.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="106.3" y="259.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="109.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (90 samples, 0.39%)</title><rect x="107.7" y="355.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (90 samples, 0.39%)</title><rect x="107.7" y="339.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.7" y="350.0"></text>
</g>
<g>
<title>char[] (31 samples, 0.13%)</title><rect x="107.7" y="323.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="110.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.12%)</title><rect x="109.2" y="323.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="112.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.13%)</title><rect x="110.7" y="323.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.13%)</title><rect x="110.7" y="307.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.13%)</title><rect x="110.7" y="291.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.7" y="302.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="110.7" y="275.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="113.7" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=54440] (511 samples, 2.19%)</title><rect x="112.3" y="435.0" width="25.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="115.3" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (511 samples, 2.19%)</title><rect x="112.3" y="419.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.3" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (48 samples, 0.21%)</title><rect x="112.3" y="403.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.3" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (48 samples, 0.21%)</title><rect x="112.3" y="387.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="115.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (463 samples, 1.99%)</title><rect x="114.7" y="403.0" width="23.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.7" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (463 samples, 1.99%)</title><rect x="114.7" y="387.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.7" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (463 samples, 1.99%)</title><rect x="114.7" y="371.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.7" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (124 samples, 0.53%)</title><rect x="114.7" y="355.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (124 samples, 0.53%)</title><rect x="114.7" y="339.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.7" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (73 samples, 0.31%)</title><rect x="114.7" y="323.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (37 samples, 0.16%)</title><rect x="114.7" y="307.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (37 samples, 0.16%)</title><rect x="114.7" y="291.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.16%)</title><rect x="114.7" y="275.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.16%)</title><rect x="114.7" y="259.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.06%)</title><rect x="114.7" y="243.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="117.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.10%)</title><rect x="115.4" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.4" y="254.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="115.4" y="227.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="118.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (36 samples, 0.15%)</title><rect x="116.6" y="307.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.15%)</title><rect x="116.6" y="291.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.15%)</title><rect x="116.6" y="275.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (36 samples, 0.15%)</title><rect x="116.6" y="259.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (36 samples, 0.15%)</title><rect x="116.6" y="243.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="119.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (51 samples, 0.22%)</title><rect x="118.4" y="323.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (51 samples, 0.22%)</title><rect x="118.4" y="307.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.22%)</title><rect x="118.4" y="291.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.12%)</title><rect x="118.4" y="275.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="121.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.09%)</title><rect x="119.9" y="275.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.9" y="286.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="119.9" y="259.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="122.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (235 samples, 1.01%)</title><rect x="121.0" y="355.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.0" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.16%)</title><rect x="121.0" y="339.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="124.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (85 samples, 0.36%)</title><rect x="122.9" y="339.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (85 samples, 0.36%)</title><rect x="122.9" y="323.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="125.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (112 samples, 0.48%)</title><rect x="127.2" y="339.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (112 samples, 0.48%)</title><rect x="127.2" y="323.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.2" y="334.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.27%)</title><rect x="127.2" y="307.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="130.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.07%)</title><rect x="130.3" y="307.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="133.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.15%)</title><rect x="131.2" y="307.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.15%)</title><rect x="131.2" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.15%)</title><rect x="131.2" y="275.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.2" y="286.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.15%)</title><rect x="131.2" y="259.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="134.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 0.45%)</title><rect x="132.9" y="355.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 0.45%)</title><rect x="132.9" y="339.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.9" y="350.0"></text>
</g>
<g>
<title>char[] (38 samples, 0.16%)</title><rect x="132.9" y="323.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="135.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.10%)</title><rect x="134.8" y="323.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="137.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.18%)</title><rect x="136.0" y="323.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.18%)</title><rect x="136.0" y="307.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (42 samples, 0.18%)</title><rect x="136.0" y="291.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.0" y="302.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.18%)</title><rect x="136.0" y="275.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="139.0" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=54450] (499 samples, 2.14%)</title><rect x="138.1" y="435.0" width="25.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="141.1" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (499 samples, 2.14%)</title><rect x="138.1" y="419.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.1" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 0.20%)</title><rect x="138.1" y="403.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.1" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (46 samples, 0.20%)</title><rect x="138.1" y="387.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="141.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (453 samples, 1.94%)</title><rect x="140.5" y="403.0" width="22.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (453 samples, 1.94%)</title><rect x="140.5" y="387.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.5" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (453 samples, 1.94%)</title><rect x="140.5" y="371.0" width="22.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (76 samples, 0.33%)</title><rect x="140.5" y="355.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (76 samples, 0.33%)</title><rect x="140.5" y="339.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.5" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (44 samples, 0.19%)</title><rect x="140.5" y="323.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (29 samples, 0.12%)</title><rect x="140.5" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (29 samples, 0.12%)</title><rect x="140.5" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.12%)</title><rect x="140.5" y="275.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.12%)</title><rect x="140.5" y="259.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="140.5" y="243.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="143.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.05%)</title><rect x="141.3" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.3" y="254.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="141.3" y="227.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="144.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (15 samples, 0.06%)</title><rect x="141.9" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="141.9" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="141.9" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (14 samples, 0.06%)</title><rect x="141.9" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (14 samples, 0.06%)</title><rect x="141.9" y="243.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="144.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (32 samples, 0.14%)</title><rect x="142.7" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.14%)</title><rect x="142.7" y="307.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.14%)</title><rect x="142.7" y="291.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.07%)</title><rect x="142.7" y="275.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="145.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.07%)</title><rect x="143.5" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.5" y="286.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="143.5" y="259.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="146.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (178 samples, 0.76%)</title><rect x="144.3" y="355.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.3" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (24 samples, 0.10%)</title><rect x="144.3" y="339.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="147.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (61 samples, 0.26%)</title><rect x="145.5" y="339.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (61 samples, 0.26%)</title><rect x="145.5" y="323.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="148.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (93 samples, 0.40%)</title><rect x="148.6" y="339.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (93 samples, 0.40%)</title><rect x="148.6" y="323.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.6" y="334.0"></text>
</g>
<g>
<title>char[] (60 samples, 0.26%)</title><rect x="148.6" y="307.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="151.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="151.7" y="307.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="154.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.11%)</title><rect x="152.1" y="307.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.11%)</title><rect x="152.1" y="291.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.11%)</title><rect x="152.1" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.1" y="286.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="152.1" y="259.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="155.1" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (199 samples, 0.85%)</title><rect x="153.3" y="355.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (199 samples, 0.85%)</title><rect x="153.3" y="339.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.3" y="350.0"></text>
</g>
<g>
<title>char[] (105 samples, 0.45%)</title><rect x="153.3" y="323.0" width="5.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="156.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.13%)</title><rect x="158.6" y="323.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="161.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (64 samples, 0.27%)</title><rect x="160.2" y="323.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (64 samples, 0.27%)</title><rect x="160.2" y="307.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (64 samples, 0.27%)</title><rect x="160.2" y="291.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.2" y="302.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.27%)</title><rect x="160.2" y="275.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="163.2" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=54460] (572 samples, 2.45%)</title><rect x="163.4" y="435.0" width="28.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="166.4" y="446.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (572 samples, 2.45%)</title><rect x="163.4" y="419.0" width="28.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.4" y="430.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.09%)</title><rect x="163.4" y="403.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.4" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (21 samples, 0.09%)</title><rect x="163.4" y="387.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="166.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (551 samples, 2.36%)</title><rect x="164.5" y="403.0" width="27.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (551 samples, 2.36%)</title><rect x="164.5" y="387.0" width="27.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.5" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (551 samples, 2.36%)</title><rect x="164.5" y="371.0" width="27.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (103 samples, 0.44%)</title><rect x="164.5" y="355.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (103 samples, 0.44%)</title><rect x="164.5" y="339.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.5" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (62 samples, 0.27%)</title><rect x="164.5" y="323.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (25 samples, 0.11%)</title><rect x="164.5" y="307.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 0.11%)</title><rect x="164.5" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.11%)</title><rect x="164.5" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.11%)</title><rect x="164.5" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.10%)</title><rect x="164.5" y="243.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="167.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (37 samples, 0.16%)</title><rect x="165.7" y="307.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.16%)</title><rect x="165.7" y="291.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.16%)</title><rect x="165.7" y="275.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (37 samples, 0.16%)</title><rect x="165.7" y="259.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (37 samples, 0.16%)</title><rect x="165.7" y="243.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="168.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (41 samples, 0.18%)</title><rect x="167.6" y="323.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.18%)</title><rect x="167.6" y="307.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.18%)</title><rect x="167.6" y="291.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.12%)</title><rect x="167.6" y="275.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="170.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.06%)</title><rect x="169.0" y="275.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.0" y="286.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="169.0" y="259.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="172.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (179 samples, 0.77%)</title><rect x="169.7" y="355.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.7" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.08%)</title><rect x="169.7" y="339.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="172.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (58 samples, 0.25%)</title><rect x="170.6" y="339.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 0.20%)</title><rect x="170.6" y="323.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="173.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.05%)</title><rect x="173.0" y="323.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="176.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 0.44%)</title><rect x="173.6" y="339.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 0.44%)</title><rect x="173.6" y="323.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.6" y="334.0"></text>
</g>
<g>
<title>char[] (42 samples, 0.18%)</title><rect x="173.6" y="307.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="176.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="175.7" y="307.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="178.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (49 samples, 0.21%)</title><rect x="176.3" y="307.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (49 samples, 0.21%)</title><rect x="176.3" y="291.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (49 samples, 0.21%)</title><rect x="176.3" y="275.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.3" y="286.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.21%)</title><rect x="176.3" y="259.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="179.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (269 samples, 1.15%)</title><rect x="178.7" y="355.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (269 samples, 1.15%)</title><rect x="178.7" y="339.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.7" y="350.0"></text>
</g>
<g>
<title>char[] (135 samples, 0.58%)</title><rect x="178.7" y="323.0" width="6.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="181.7" y="334.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.07%)</title><rect x="185.6" y="323.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="188.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.22%)</title><rect x="186.4" y="323.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="189.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (65 samples, 0.28%)</title><rect x="189.1" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (65 samples, 0.28%)</title><rect x="189.1" y="307.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (65 samples, 0.28%)</title><rect x="189.1" y="291.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.1" y="302.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.28%)</title><rect x="189.1" y="275.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="192.1" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=54441] (501 samples, 2.15%)</title><rect x="192.3" y="435.0" width="25.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="195.3" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (501 samples, 2.15%)</title><rect x="192.3" y="419.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.3" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (54 samples, 0.23%)</title><rect x="192.3" y="403.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.3" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (54 samples, 0.23%)</title><rect x="192.3" y="387.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="195.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (447 samples, 1.92%)</title><rect x="195.1" y="403.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.1" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (447 samples, 1.92%)</title><rect x="195.1" y="387.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (447 samples, 1.92%)</title><rect x="195.1" y="371.0" width="22.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.1" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (118 samples, 0.51%)</title><rect x="195.1" y="355.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (118 samples, 0.51%)</title><rect x="195.1" y="339.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.1" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (71 samples, 0.30%)</title><rect x="195.1" y="323.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (44 samples, 0.19%)</title><rect x="195.1" y="307.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (44 samples, 0.19%)</title><rect x="195.1" y="291.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.19%)</title><rect x="195.1" y="275.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.19%)</title><rect x="195.1" y="259.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.09%)</title><rect x="195.1" y="243.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="198.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.10%)</title><rect x="196.1" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.1" y="254.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="196.1" y="227.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="199.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (27 samples, 0.12%)</title><rect x="197.3" y="307.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.12%)</title><rect x="197.3" y="291.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.12%)</title><rect x="197.3" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (27 samples, 0.12%)</title><rect x="197.3" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (27 samples, 0.12%)</title><rect x="197.3" y="243.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="200.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (47 samples, 0.20%)</title><rect x="198.7" y="323.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.20%)</title><rect x="198.7" y="307.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.20%)</title><rect x="198.7" y="291.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.08%)</title><rect x="198.7" y="275.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="201.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.12%)</title><rect x="199.6" y="275.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.6" y="286.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="199.6" y="259.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="202.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (221 samples, 0.95%)</title><rect x="201.0" y="355.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (39 samples, 0.17%)</title><rect x="201.0" y="339.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="204.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (62 samples, 0.27%)</title><rect x="203.0" y="339.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (62 samples, 0.27%)</title><rect x="203.0" y="323.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="206.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 0.51%)</title><rect x="206.2" y="339.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 0.51%)</title><rect x="206.2" y="323.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.2" y="334.0"></text>
</g>
<g>
<title>char[] (54 samples, 0.23%)</title><rect x="206.2" y="307.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="209.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.12%)</title><rect x="208.9" y="307.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="211.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="210.4" y="307.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="210.4" y="291.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.16%)</title><rect x="210.4" y="275.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.4" y="286.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.16%)</title><rect x="210.4" y="259.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="213.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 0.46%)</title><rect x="212.2" y="355.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 0.46%)</title><rect x="212.2" y="339.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.2" y="350.0"></text>
</g>
<g>
<title>char[] (47 samples, 0.20%)</title><rect x="212.2" y="323.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="215.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="214.6" y="323.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="217.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.16%)</title><rect x="215.8" y="323.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.16%)</title><rect x="215.8" y="307.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.16%)</title><rect x="215.8" y="291.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.8" y="302.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.16%)</title><rect x="215.8" y="275.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="218.8" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=54451] (542 samples, 2.32%)</title><rect x="217.7" y="435.0" width="27.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="220.7" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (542 samples, 2.32%)</title><rect x="217.7" y="419.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.7" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (40 samples, 0.17%)</title><rect x="217.7" y="403.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.7" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (40 samples, 0.17%)</title><rect x="217.7" y="387.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="220.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (502 samples, 2.15%)</title><rect x="219.7" y="403.0" width="25.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.7" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (502 samples, 2.15%)</title><rect x="219.7" y="387.0" width="25.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.7" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (502 samples, 2.15%)</title><rect x="219.7" y="371.0" width="25.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.7" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (120 samples, 0.51%)</title><rect x="219.7" y="355.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (120 samples, 0.51%)</title><rect x="219.7" y="339.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.7" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (90 samples, 0.39%)</title><rect x="219.7" y="323.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (61 samples, 0.26%)</title><rect x="219.7" y="307.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (61 samples, 0.26%)</title><rect x="219.7" y="291.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (61 samples, 0.26%)</title><rect x="219.7" y="275.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (61 samples, 0.26%)</title><rect x="219.7" y="259.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.12%)</title><rect x="219.7" y="243.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="222.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.15%)</title><rect x="221.1" y="243.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.1" y="254.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.15%)</title><rect x="221.1" y="227.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="224.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (29 samples, 0.12%)</title><rect x="222.8" y="307.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.12%)</title><rect x="222.8" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.12%)</title><rect x="222.8" y="275.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (29 samples, 0.12%)</title><rect x="222.8" y="259.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.8" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (29 samples, 0.12%)</title><rect x="222.8" y="243.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="225.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (30 samples, 0.13%)</title><rect x="224.3" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.13%)</title><rect x="224.3" y="307.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.13%)</title><rect x="224.3" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.08%)</title><rect x="224.3" y="275.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="227.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.05%)</title><rect x="225.2" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.2" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="225.2" y="259.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="228.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (183 samples, 0.78%)</title><rect x="225.8" y="355.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.8" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (32 samples, 0.14%)</title><rect x="225.8" y="339.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="228.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (46 samples, 0.20%)</title><rect x="227.4" y="339.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (46 samples, 0.20%)</title><rect x="227.4" y="323.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="230.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 0.45%)</title><rect x="229.7" y="339.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 0.45%)</title><rect x="229.7" y="323.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.7" y="334.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.27%)</title><rect x="229.7" y="307.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="232.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="232.9" y="307.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="235.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="233.2" y="307.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="233.2" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.16%)</title><rect x="233.2" y="275.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.2" y="286.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.16%)</title><rect x="233.2" y="259.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="236.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (199 samples, 0.85%)</title><rect x="235.1" y="355.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (199 samples, 0.85%)</title><rect x="235.1" y="339.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.1" y="350.0"></text>
</g>
<g>
<title>char[] (122 samples, 0.52%)</title><rect x="235.1" y="323.0" width="6.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="238.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.09%)</title><rect x="241.2" y="323.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="244.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (55 samples, 0.24%)</title><rect x="242.3" y="323.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (55 samples, 0.24%)</title><rect x="242.3" y="307.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (55 samples, 0.24%)</title><rect x="242.3" y="291.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.3" y="302.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.24%)</title><rect x="242.3" y="275.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="245.3" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=54461] (154 samples, 0.66%)</title><rect x="245.1" y="435.0" width="7.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="248.1" y="446.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (154 samples, 0.66%)</title><rect x="245.1" y="419.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (154 samples, 0.66%)</title><rect x="245.1" y="403.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (154 samples, 0.66%)</title><rect x="245.1" y="387.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (154 samples, 0.66%)</title><rect x="245.1" y="371.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 0.12%)</title><rect x="245.1" y="355.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (29 samples, 0.12%)</title><rect x="245.1" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.1" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (12 samples, 0.05%)</title><rect x="245.1" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.03%)</title><rect x="245.1" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.03%)</title><rect x="245.1" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.03%)</title><rect x="245.1" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.03%)</title><rect x="245.1" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (6 samples, 0.03%)</title><rect x="245.4" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="245.4" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="245.4" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (6 samples, 0.03%)</title><rect x="245.4" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.4" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (6 samples, 0.03%)</title><rect x="245.4" y="243.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="248.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (17 samples, 0.07%)</title><rect x="245.7" y="323.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.07%)</title><rect x="245.7" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.07%)</title><rect x="245.7" y="291.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.06%)</title><rect x="245.7" y="275.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="248.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (90 samples, 0.39%)</title><rect x="246.6" y="355.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.6" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.04%)</title><rect x="246.6" y="339.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="249.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (22 samples, 0.09%)</title><rect x="247.1" y="339.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (22 samples, 0.09%)</title><rect x="247.1" y="323.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="250.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (58 samples, 0.25%)</title><rect x="248.2" y="339.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (58 samples, 0.25%)</title><rect x="248.2" y="323.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.2" y="334.0"></text>
</g>
<g>
<title>char[] (50 samples, 0.21%)</title><rect x="248.2" y="307.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="251.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.02%)</title><rect x="250.9" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.02%)</title><rect x="250.9" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.02%)</title><rect x="250.9" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.9" y="286.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="250.9" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="253.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.15%)</title><rect x="251.2" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.15%)</title><rect x="251.2" y="339.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.2" y="350.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.09%)</title><rect x="251.2" y="323.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="254.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.05%)</title><rect x="252.3" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.05%)</title><rect x="252.3" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.05%)</title><rect x="252.3" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.3" y="302.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="252.3" y="275.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="255.3" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=54442] (495 samples, 2.12%)</title><rect x="252.9" y="435.0" width="25.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="255.9" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (495 samples, 2.12%)</title><rect x="252.9" y="419.0" width="25.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.9" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (56 samples, 0.24%)</title><rect x="252.9" y="403.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.9" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (56 samples, 0.24%)</title><rect x="252.9" y="387.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="255.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (439 samples, 1.88%)</title><rect x="255.8" y="403.0" width="22.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.8" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (439 samples, 1.88%)</title><rect x="255.8" y="387.0" width="22.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.8" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (439 samples, 1.88%)</title><rect x="255.8" y="371.0" width="22.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.8" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (108 samples, 0.46%)</title><rect x="255.8" y="355.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (108 samples, 0.46%)</title><rect x="255.8" y="339.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.8" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (59 samples, 0.25%)</title><rect x="255.8" y="323.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.11%)</title><rect x="255.8" y="307.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.11%)</title><rect x="255.8" y="291.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.11%)</title><rect x="255.8" y="275.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.11%)</title><rect x="255.8" y="259.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.06%)</title><rect x="255.8" y="243.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="258.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.05%)</title><rect x="256.5" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.5" y="254.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="256.5" y="227.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="259.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (33 samples, 0.14%)</title><rect x="257.1" y="307.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="260.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.14%)</title><rect x="257.1" y="291.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.14%)</title><rect x="257.1" y="275.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (32 samples, 0.14%)</title><rect x="257.1" y="259.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.1" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (32 samples, 0.14%)</title><rect x="257.1" y="243.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="260.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (49 samples, 0.21%)</title><rect x="258.7" y="323.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 0.21%)</title><rect x="258.7" y="307.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.21%)</title><rect x="258.7" y="291.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.09%)</title><rect x="258.7" y="275.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="261.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.12%)</title><rect x="259.8" y="275.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.8" y="286.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.12%)</title><rect x="259.8" y="259.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="262.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (238 samples, 1.02%)</title><rect x="261.2" y="355.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.2" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (40 samples, 0.17%)</title><rect x="261.2" y="339.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="264.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (83 samples, 0.36%)</title><rect x="263.2" y="339.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (83 samples, 0.36%)</title><rect x="263.2" y="323.0" width="4.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="266.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 0.49%)</title><rect x="267.4" y="339.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 0.49%)</title><rect x="267.4" y="323.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.4" y="334.0"></text>
</g>
<g>
<title>char[] (60 samples, 0.26%)</title><rect x="267.4" y="307.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="270.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.09%)</title><rect x="270.5" y="307.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="273.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.15%)</title><rect x="271.5" y="307.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.15%)</title><rect x="271.5" y="291.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.15%)</title><rect x="271.5" y="275.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.5" y="286.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.15%)</title><rect x="271.5" y="259.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="274.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (93 samples, 0.40%)</title><rect x="273.3" y="355.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (93 samples, 0.40%)</title><rect x="273.3" y="339.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.3" y="350.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.17%)</title><rect x="273.3" y="323.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="276.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="275.2" y="323.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="278.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.13%)</title><rect x="276.4" y="323.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.13%)</title><rect x="276.4" y="307.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.13%)</title><rect x="276.4" y="291.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.4" y="302.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.13%)</title><rect x="276.4" y="275.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="279.4" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=54452] (521 samples, 2.23%)</title><rect x="278.0" y="435.0" width="26.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="281.0" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (521 samples, 2.23%)</title><rect x="278.0" y="419.0" width="26.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.0" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (521 samples, 2.23%)</title><rect x="278.0" y="403.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.0" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (521 samples, 2.23%)</title><rect x="278.0" y="387.0" width="26.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.0" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (521 samples, 2.23%)</title><rect x="278.0" y="371.0" width="26.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.0" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (89 samples, 0.38%)</title><rect x="278.0" y="355.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (89 samples, 0.38%)</title><rect x="278.0" y="339.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.0" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (49 samples, 0.21%)</title><rect x="278.0" y="323.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (33 samples, 0.14%)</title><rect x="278.0" y="307.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (33 samples, 0.14%)</title><rect x="278.0" y="291.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.14%)</title><rect x="278.0" y="275.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.14%)</title><rect x="278.0" y="259.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.09%)</title><rect x="278.0" y="243.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="281.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.05%)</title><rect x="279.0" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.0" y="254.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="279.0" y="227.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="282.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (16 samples, 0.07%)</title><rect x="279.6" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="279.6" y="291.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="279.6" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (16 samples, 0.07%)</title><rect x="279.6" y="259.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (16 samples, 0.07%)</title><rect x="279.6" y="243.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="282.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (40 samples, 0.17%)</title><rect x="280.5" y="323.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.17%)</title><rect x="280.5" y="307.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.17%)</title><rect x="280.5" y="291.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="280.5" y="275.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="283.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.14%)</title><rect x="280.9" y="275.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.9" y="286.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="280.9" y="259.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="283.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (220 samples, 0.94%)</title><rect x="282.5" y="355.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.5" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (25 samples, 0.11%)</title><rect x="282.5" y="339.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="285.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (82 samples, 0.35%)</title><rect x="283.7" y="339.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (82 samples, 0.35%)</title><rect x="283.7" y="323.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="286.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (113 samples, 0.48%)</title><rect x="287.9" y="339.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (113 samples, 0.48%)</title><rect x="287.9" y="323.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.9" y="334.0"></text>
</g>
<g>
<title>char[] (41 samples, 0.18%)</title><rect x="287.9" y="307.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="290.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.17%)</title><rect x="290.0" y="307.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="293.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.14%)</title><rect x="292.0" y="307.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.14%)</title><rect x="292.0" y="291.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.14%)</title><rect x="292.0" y="275.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.0" y="286.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="292.0" y="259.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="295.0" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (212 samples, 0.91%)</title><rect x="293.6" y="355.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.6" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (212 samples, 0.91%)</title><rect x="293.6" y="339.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.6" y="350.0"></text>
</g>
<g>
<title>char[] (141 samples, 0.60%)</title><rect x="293.6" y="323.0" width="7.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="296.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.06%)</title><rect x="300.7" y="323.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="303.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.24%)</title><rect x="301.5" y="323.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.24%)</title><rect x="301.5" y="307.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (56 samples, 0.24%)</title><rect x="301.5" y="291.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.5" y="302.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.24%)</title><rect x="301.5" y="275.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="304.5" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=54470] (437 samples, 1.87%)</title><rect x="304.3" y="435.0" width="22.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="307.3" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (437 samples, 1.87%)</title><rect x="304.3" y="419.0" width="22.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.3" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (22 samples, 0.09%)</title><rect x="304.3" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.3" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (22 samples, 0.09%)</title><rect x="304.3" y="387.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="307.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (415 samples, 1.78%)</title><rect x="305.5" y="403.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (415 samples, 1.78%)</title><rect x="305.5" y="387.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.5" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (415 samples, 1.78%)</title><rect x="305.5" y="371.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (96 samples, 0.41%)</title><rect x="305.5" y="355.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (96 samples, 0.41%)</title><rect x="305.5" y="339.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.5" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (57 samples, 0.24%)</title><rect x="305.5" y="323.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (30 samples, 0.13%)</title><rect x="305.5" y="307.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (30 samples, 0.13%)</title><rect x="305.5" y="291.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.13%)</title><rect x="305.5" y="275.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.13%)</title><rect x="305.5" y="259.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="305.5" y="243.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="308.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.07%)</title><rect x="306.2" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="309.2" y="254.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="306.2" y="227.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="309.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (27 samples, 0.12%)</title><rect x="307.0" y="307.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.12%)</title><rect x="307.0" y="291.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.12%)</title><rect x="307.0" y="275.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (27 samples, 0.12%)</title><rect x="307.0" y="259.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (27 samples, 0.12%)</title><rect x="307.0" y="243.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="310.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (39 samples, 0.17%)</title><rect x="308.3" y="323.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.17%)</title><rect x="308.3" y="307.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.17%)</title><rect x="308.3" y="291.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="308.3" y="275.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="311.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.13%)</title><rect x="308.8" y="275.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.8" y="286.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="308.8" y="259.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="311.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (150 samples, 0.64%)</title><rect x="310.3" y="355.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.3" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (15 samples, 0.06%)</title><rect x="310.3" y="339.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="313.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (55 samples, 0.24%)</title><rect x="311.1" y="339.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (55 samples, 0.24%)</title><rect x="311.1" y="323.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="314.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (80 samples, 0.34%)</title><rect x="313.9" y="339.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (80 samples, 0.34%)</title><rect x="313.9" y="323.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.9" y="334.0"></text>
</g>
<g>
<title>char[] (46 samples, 0.20%)</title><rect x="313.9" y="307.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="316.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="316.2" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="319.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.11%)</title><rect x="316.6" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.11%)</title><rect x="316.6" y="291.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.11%)</title><rect x="316.6" y="275.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.6" y="286.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="316.6" y="259.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="319.6" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (169 samples, 0.72%)</title><rect x="317.9" y="355.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (169 samples, 0.72%)</title><rect x="317.9" y="339.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.9" y="350.0"></text>
</g>
<g>
<title>char[] (88 samples, 0.38%)</title><rect x="317.9" y="323.0" width="4.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="320.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.13%)</title><rect x="322.4" y="323.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="325.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (51 samples, 0.22%)</title><rect x="323.9" y="323.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (51 samples, 0.22%)</title><rect x="323.9" y="307.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="326.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (51 samples, 0.22%)</title><rect x="323.9" y="291.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.9" y="302.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.22%)</title><rect x="323.9" y="275.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="326.9" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=54443] (476 samples, 2.04%)</title><rect x="326.5" y="435.0" width="24.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="329.5" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (476 samples, 2.04%)</title><rect x="326.5" y="419.0" width="24.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.5" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (476 samples, 2.04%)</title><rect x="326.5" y="403.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (476 samples, 2.04%)</title><rect x="326.5" y="387.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.5" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (476 samples, 2.04%)</title><rect x="326.5" y="371.0" width="24.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (114 samples, 0.49%)</title><rect x="326.5" y="355.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (114 samples, 0.49%)</title><rect x="326.5" y="339.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.5" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (75 samples, 0.32%)</title><rect x="326.5" y="323.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (42 samples, 0.18%)</title><rect x="326.5" y="307.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (42 samples, 0.18%)</title><rect x="326.5" y="291.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.18%)</title><rect x="326.5" y="275.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.18%)</title><rect x="326.5" y="259.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.11%)</title><rect x="326.5" y="243.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="329.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.07%)</title><rect x="327.7" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.7" y="254.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="327.7" y="227.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="330.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (33 samples, 0.14%)</title><rect x="328.6" y="307.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.14%)</title><rect x="328.6" y="291.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.14%)</title><rect x="328.6" y="275.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (33 samples, 0.14%)</title><rect x="328.6" y="259.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (33 samples, 0.14%)</title><rect x="328.6" y="243.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="331.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (39 samples, 0.17%)</title><rect x="330.3" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.17%)</title><rect x="330.3" y="307.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.17%)</title><rect x="330.3" y="291.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="330.3" y="275.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="333.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.09%)</title><rect x="331.1" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.1" y="286.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="331.1" y="259.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="334.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (239 samples, 1.03%)</title><rect x="332.2" y="355.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.2" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (45 samples, 0.19%)</title><rect x="332.2" y="339.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="335.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (63 samples, 0.27%)</title><rect x="334.5" y="339.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (63 samples, 0.27%)</title><rect x="334.5" y="323.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="337.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (131 samples, 0.56%)</title><rect x="337.7" y="339.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (131 samples, 0.56%)</title><rect x="337.7" y="323.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.7" y="334.0"></text>
</g>
<g>
<title>char[] (78 samples, 0.33%)</title><rect x="337.7" y="307.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="340.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.09%)</title><rect x="341.6" y="307.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="344.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.14%)</title><rect x="342.7" y="307.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.14%)</title><rect x="342.7" y="291.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.14%)</title><rect x="342.7" y="275.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.7" y="286.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.14%)</title><rect x="342.7" y="259.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="345.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 0.53%)</title><rect x="344.3" y="355.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 0.53%)</title><rect x="344.3" y="339.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.3" y="350.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.24%)</title><rect x="344.3" y="323.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="347.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="347.1" y="323.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="350.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.19%)</title><rect x="348.3" y="323.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.19%)</title><rect x="348.3" y="307.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (45 samples, 0.19%)</title><rect x="348.3" y="291.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.3" y="302.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.19%)</title><rect x="348.3" y="275.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="351.3" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=54453] (577 samples, 2.47%)</title><rect x="350.5" y="435.0" width="29.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="353.5" y="446.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (577 samples, 2.47%)</title><rect x="350.5" y="419.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.5" y="430.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (51 samples, 0.22%)</title><rect x="350.5" y="403.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.5" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (51 samples, 0.22%)</title><rect x="350.5" y="387.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="353.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (526 samples, 2.26%)</title><rect x="353.1" y="403.0" width="26.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.1" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (526 samples, 2.26%)</title><rect x="353.1" y="387.0" width="26.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (526 samples, 2.26%)</title><rect x="353.1" y="371.0" width="26.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (97 samples, 0.42%)</title><rect x="353.1" y="355.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (97 samples, 0.42%)</title><rect x="353.1" y="339.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (49 samples, 0.21%)</title><rect x="353.1" y="323.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (25 samples, 0.11%)</title><rect x="353.1" y="307.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 0.11%)</title><rect x="353.1" y="291.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.11%)</title><rect x="353.1" y="275.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.11%)</title><rect x="353.1" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="353.1" y="243.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="356.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.08%)</title><rect x="353.4" y="243.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="356.4" y="254.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="353.4" y="227.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="356.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (24 samples, 0.10%)</title><rect x="354.4" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="354.4" y="291.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="354.4" y="275.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="357.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (24 samples, 0.10%)</title><rect x="354.4" y="259.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.4" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (24 samples, 0.10%)</title><rect x="354.4" y="243.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="357.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (48 samples, 0.21%)</title><rect x="355.6" y="323.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.21%)</title><rect x="355.6" y="307.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.21%)</title><rect x="355.6" y="291.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="358.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="355.6" y="275.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="358.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.11%)</title><rect x="356.8" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.8" y="286.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="356.8" y="259.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="359.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (219 samples, 0.94%)</title><rect x="358.0" y="355.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.0" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (32 samples, 0.14%)</title><rect x="358.0" y="339.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="361.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (57 samples, 0.24%)</title><rect x="359.7" y="339.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (57 samples, 0.24%)</title><rect x="359.7" y="323.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="362.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 0.56%)</title><rect x="362.5" y="339.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 0.56%)</title><rect x="362.5" y="323.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.5" y="334.0"></text>
</g>
<g>
<title>char[] (104 samples, 0.45%)</title><rect x="362.5" y="307.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="365.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="367.8" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="370.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.08%)</title><rect x="368.2" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.08%)</title><rect x="368.2" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 0.08%)</title><rect x="368.2" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.2" y="286.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.08%)</title><rect x="368.2" y="259.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="371.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (210 samples, 0.90%)</title><rect x="369.1" y="355.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (210 samples, 0.90%)</title><rect x="369.1" y="339.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.1" y="350.0"></text>
</g>
<g>
<title>char[] (136 samples, 0.58%)</title><rect x="369.1" y="323.0" width="6.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="372.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="376.0" y="323.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="379.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.24%)</title><rect x="376.9" y="323.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.24%)</title><rect x="376.9" y="307.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (57 samples, 0.24%)</title><rect x="376.9" y="291.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.9" y="302.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.24%)</title><rect x="376.9" y="275.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="379.9" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=54444] (498 samples, 2.14%)</title><rect x="379.7" y="435.0" width="25.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="382.7" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (498 samples, 2.14%)</title><rect x="379.7" y="419.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.7" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (498 samples, 2.14%)</title><rect x="379.7" y="403.0" width="25.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.7" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (498 samples, 2.14%)</title><rect x="379.7" y="387.0" width="25.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.7" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (498 samples, 2.14%)</title><rect x="379.7" y="371.0" width="25.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.7" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (121 samples, 0.52%)</title><rect x="379.7" y="355.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (121 samples, 0.52%)</title><rect x="379.7" y="339.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.7" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (76 samples, 0.33%)</title><rect x="379.7" y="323.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (50 samples, 0.21%)</title><rect x="379.7" y="307.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (50 samples, 0.21%)</title><rect x="379.7" y="291.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (50 samples, 0.21%)</title><rect x="379.7" y="275.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.21%)</title><rect x="379.7" y="259.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.11%)</title><rect x="379.7" y="243.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="382.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.11%)</title><rect x="381.0" y="243.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.0" y="254.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="381.0" y="227.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="384.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (26 samples, 0.11%)</title><rect x="382.3" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.11%)</title><rect x="382.3" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.11%)</title><rect x="382.3" y="275.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (26 samples, 0.11%)</title><rect x="382.3" y="259.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="385.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (26 samples, 0.11%)</title><rect x="382.3" y="243.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="385.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (45 samples, 0.19%)</title><rect x="383.6" y="323.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.19%)</title><rect x="383.6" y="307.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.19%)</title><rect x="383.6" y="291.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.08%)</title><rect x="383.6" y="275.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="386.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.11%)</title><rect x="384.6" y="275.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.6" y="286.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="384.6" y="259.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="387.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (247 samples, 1.06%)</title><rect x="385.9" y="355.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.9" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (44 samples, 0.19%)</title><rect x="385.9" y="339.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="388.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (72 samples, 0.31%)</title><rect x="388.1" y="339.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (72 samples, 0.31%)</title><rect x="388.1" y="323.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="391.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (131 samples, 0.56%)</title><rect x="391.7" y="339.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (131 samples, 0.56%)</title><rect x="391.7" y="323.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.7" y="334.0"></text>
</g>
<g>
<title>char[] (73 samples, 0.31%)</title><rect x="391.7" y="307.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="394.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.09%)</title><rect x="395.4" y="307.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="398.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="396.5" y="307.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="396.5" y="291.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.16%)</title><rect x="396.5" y="275.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.5" y="286.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.16%)</title><rect x="396.5" y="259.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="399.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 0.56%)</title><rect x="398.4" y="355.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 0.56%)</title><rect x="398.4" y="339.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.4" y="350.0"></text>
</g>
<g>
<title>char[] (76 samples, 0.33%)</title><rect x="398.4" y="323.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="401.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="402.2" y="323.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="405.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="403.1" y="323.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.16%)</title><rect x="403.1" y="307.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.16%)</title><rect x="403.1" y="291.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.1" y="302.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.16%)</title><rect x="403.1" y="275.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="406.1" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=54445] (501 samples, 2.15%)</title><rect x="405.0" y="435.0" width="25.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="408.0" y="446.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (501 samples, 2.15%)</title><rect x="405.0" y="419.0" width="25.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.0" y="430.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (501 samples, 2.15%)</title><rect x="405.0" y="403.0" width="25.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.0" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (501 samples, 2.15%)</title><rect x="405.0" y="387.0" width="25.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.0" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (501 samples, 2.15%)</title><rect x="405.0" y="371.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.0" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (133 samples, 0.57%)</title><rect x="405.0" y="355.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (133 samples, 0.57%)</title><rect x="405.0" y="339.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.0" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (86 samples, 0.37%)</title><rect x="405.0" y="323.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (54 samples, 0.23%)</title><rect x="405.0" y="307.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (54 samples, 0.23%)</title><rect x="405.0" y="291.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="408.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (54 samples, 0.23%)</title><rect x="405.0" y="275.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.23%)</title><rect x="405.0" y="259.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.11%)</title><rect x="405.0" y="243.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="408.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.12%)</title><rect x="406.3" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.3" y="254.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="406.3" y="227.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="409.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (32 samples, 0.14%)</title><rect x="407.7" y="307.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.13%)</title><rect x="407.7" y="291.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.13%)</title><rect x="407.7" y="275.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (31 samples, 0.13%)</title><rect x="407.7" y="259.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (31 samples, 0.13%)</title><rect x="407.7" y="243.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="410.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (47 samples, 0.20%)</title><rect x="409.3" y="323.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.20%)</title><rect x="409.3" y="307.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.20%)</title><rect x="409.3" y="291.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.08%)</title><rect x="409.3" y="275.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="412.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.12%)</title><rect x="410.3" y="275.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.3" y="286.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="410.3" y="259.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="413.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (262 samples, 1.12%)</title><rect x="411.7" y="355.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.7" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (43 samples, 0.18%)</title><rect x="411.7" y="339.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="414.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (99 samples, 0.42%)</title><rect x="413.9" y="339.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (99 samples, 0.42%)</title><rect x="413.9" y="323.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="416.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 0.51%)</title><rect x="418.9" y="339.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 0.51%)</title><rect x="418.9" y="323.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.9" y="334.0"></text>
</g>
<g>
<title>char[] (71 samples, 0.30%)</title><rect x="418.9" y="307.0" width="3.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="421.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.07%)</title><rect x="422.5" y="307.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="425.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.14%)</title><rect x="423.3" y="307.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.14%)</title><rect x="423.3" y="291.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.14%)</title><rect x="423.3" y="275.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.3" y="286.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.14%)</title><rect x="423.3" y="259.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="426.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 0.45%)</title><rect x="424.9" y="355.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 0.45%)</title><rect x="424.9" y="339.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.9" y="350.0"></text>
</g>
<g>
<title>char[] (51 samples, 0.22%)</title><rect x="424.9" y="323.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="427.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="427.5" y="323.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="430.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.14%)</title><rect x="428.7" y="323.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.14%)</title><rect x="428.7" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.14%)</title><rect x="428.7" y="291.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.7" y="302.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="428.7" y="275.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="431.7" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=54455] (382 samples, 1.64%)</title><rect x="430.3" y="435.0" width="19.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="433.3" y="446.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (382 samples, 1.64%)</title><rect x="430.3" y="419.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (382 samples, 1.64%)</title><rect x="430.3" y="403.0" width="19.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (382 samples, 1.64%)</title><rect x="430.3" y="387.0" width="19.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (382 samples, 1.64%)</title><rect x="430.3" y="371.0" width="19.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (70 samples, 0.30%)</title><rect x="430.3" y="355.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (70 samples, 0.30%)</title><rect x="430.3" y="339.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.3" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (44 samples, 0.19%)</title><rect x="430.3" y="323.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (31 samples, 0.13%)</title><rect x="430.3" y="307.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.13%)</title><rect x="430.3" y="291.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.13%)</title><rect x="430.3" y="275.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.13%)</title><rect x="430.3" y="259.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.06%)</title><rect x="430.3" y="243.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="433.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.07%)</title><rect x="431.1" y="243.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.1" y="254.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="431.1" y="227.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="434.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (13 samples, 0.06%)</title><rect x="431.9" y="307.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.06%)</title><rect x="431.9" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="431.9" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.get$Lambda (13 samples, 0.06%)</title><rect x="431.9" y="259.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$74 (13 samples, 0.06%)</title><rect x="431.9" y="243.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="434.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (26 samples, 0.11%)</title><rect x="432.5" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.11%)</title><rect x="432.5" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.11%)</title><rect x="432.5" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="432.5" y="275.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="435.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.04%)</title><rect x="433.4" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.4" y="286.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="433.4" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="436.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (168 samples, 0.72%)</title><rect x="433.9" y="355.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.9" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Request (33 samples, 0.14%)</title><rect x="433.9" y="339.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="436.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (43 samples, 0.18%)</title><rect x="435.5" y="339.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (43 samples, 0.18%)</title><rect x="435.5" y="323.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="438.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (92 samples, 0.39%)</title><rect x="437.7" y="339.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (92 samples, 0.39%)</title><rect x="437.7" y="323.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.7" y="334.0"></text>
</g>
<g>
<title>char[] (59 samples, 0.25%)</title><rect x="437.7" y="307.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="440.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="440.7" y="307.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="443.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.12%)</title><rect x="440.9" y="307.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.12%)</title><rect x="440.9" y="291.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.12%)</title><rect x="440.9" y="275.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.9" y="286.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="440.9" y="259.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="443.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (144 samples, 0.62%)</title><rect x="442.4" y="355.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (144 samples, 0.62%)</title><rect x="442.4" y="339.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.4" y="350.0"></text>
</g>
<g>
<title>char[] (71 samples, 0.30%)</title><rect x="442.4" y="323.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="445.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.06%)</title><rect x="445.9" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="448.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (60 samples, 0.26%)</title><rect x="446.6" y="323.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (60 samples, 0.26%)</title><rect x="446.6" y="307.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (60 samples, 0.26%)</title><rect x="446.6" y="291.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.6" y="302.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.26%)</title><rect x="446.6" y="275.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="449.6" y="286.0"></text>
</g>
<g>
<title>[worker_0 tid=54513] (753 samples, 3.23%)</title><rect x="449.8" y="435.0" width="38.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="452.8" y="446.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (753 samples, 3.23%)</title><rect x="449.8" y="419.0" width="38.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.8" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (753 samples, 3.23%)</title><rect x="449.8" y="403.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.8" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (753 samples, 3.23%)</title><rect x="449.8" y="387.0" width="38.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.8" y="398.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (750 samples, 3.22%)</title><rect x="449.9" y="371.0" width="38.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.9" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (750 samples, 3.22%)</title><rect x="449.9" y="355.0" width="38.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.9" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (750 samples, 3.22%)</title><rect x="449.9" y="339.0" width="38.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.9" y="350.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.03%)</title><rect x="450.1" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.03%)</title><rect x="450.1" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.03%)</title><rect x="450.1" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.03%)</title><rect x="450.1" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.1" y="286.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="450.1" y="259.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="453.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="450.6" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="450.6" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.03%)</title><rect x="450.6" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="453.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (9 samples, 0.04%)</title><rect x="451.0" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.03%)</title><rect x="451.1" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (100 samples, 0.43%)</title><rect x="451.4" y="323.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (12 samples, 0.05%)</title><rect x="451.4" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 0.05%)</title><rect x="451.4" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.05%)</title><rect x="451.4" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.05%)</title><rect x="451.4" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.05%)</title><rect x="451.4" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (9 samples, 0.04%)</title><rect x="451.6" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (9 samples, 0.04%)</title><rect x="451.6" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.04%)</title><rect x="451.6" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.04%)</title><rect x="451.6" y="179.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="454.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (6 samples, 0.03%)</title><rect x="452.2" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="452.2" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="452.2" y="275.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="455.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (78 samples, 0.33%)</title><rect x="452.5" y="307.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (74 samples, 0.32%)</title><rect x="452.7" y="291.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (31 samples, 0.13%)</title><rect x="452.8" y="275.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (31 samples, 0.13%)</title><rect x="452.8" y="259.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.8" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.03%)</title><rect x="452.8" y="243.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="455.8" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (19 samples, 0.08%)</title><rect x="453.4" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (19 samples, 0.08%)</title><rect x="453.4" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (19 samples, 0.08%)</title><rect x="453.4" y="211.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (15 samples, 0.06%)</title><rect x="453.6" y="195.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="453.7" y="179.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="453.7" y="163.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="454.1" y="179.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.1" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="454.1" y="163.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="457.1" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (5 samples, 0.02%)</title><rect x="454.5" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.02%)</title><rect x="454.5" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (5 samples, 0.02%)</title><rect x="454.5" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.5" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (5 samples, 0.02%)</title><rect x="454.5" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (5 samples, 0.02%)</title><rect x="454.5" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (5 samples, 0.02%)</title><rect x="454.5" y="195.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="457.5" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (5 samples, 0.02%)</title><rect x="454.9" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (5 samples, 0.02%)</title><rect x="454.9" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.9" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (5 samples, 0.02%)</title><rect x="454.9" y="243.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="457.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.02%)</title><rect x="455.2" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (20 samples, 0.09%)</title><rect x="455.5" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.04%)</title><rect x="455.5" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.02%)</title><rect x="455.7" y="243.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.02%)</title><rect x="455.7" y="227.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="458.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (5 samples, 0.02%)</title><rect x="456.0" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (30 samples, 0.13%)</title><rect x="456.5" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (30 samples, 0.13%)</title><rect x="456.5" y="307.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.07%)</title><rect x="456.5" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.07%)</title><rect x="456.5" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.07%)</title><rect x="456.5" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.07%)</title><rect x="456.5" y="243.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.5" y="254.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="456.5" y="227.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="459.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (13 samples, 0.06%)</title><rect x="457.3" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.3" y="302.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="457.3" y="275.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="460.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (572 samples, 2.45%)</title><rect x="458.0" y="323.0" width="28.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.0" y="334.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (569 samples, 2.44%)</title><rect x="458.1" y="307.0" width="28.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.1" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (569 samples, 2.44%)</title><rect x="458.1" y="291.0" width="28.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.1" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (515 samples, 2.21%)</title><rect x="458.1" y="275.0" width="26.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.1" y="286.0">o..</text>
</g>
<g>
<title>byte[] (281 samples, 1.21%)</title><rect x="458.1" y="259.0" width="14.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="461.1" y="270.0"></text>
</g>
<g>
<title>byte[] (234 samples, 1.00%)</title><rect x="472.4" y="259.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="475.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (42 samples, 0.18%)</title><rect x="484.2" y="275.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (35 samples, 0.15%)</title><rect x="484.4" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.15%)</title><rect x="484.4" y="243.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.15%)</title><rect x="484.4" y="227.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.4" y="238.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.12%)</title><rect x="484.4" y="211.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="487.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.02%)</title><rect x="485.9" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.02%)</title><rect x="485.9" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.02%)</title><rect x="485.9" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.9" y="190.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="485.9" y="163.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="488.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (8 samples, 0.03%)</title><rect x="486.3" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="486.3" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.3" y="270.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="486.3" y="243.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="489.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (19 samples, 0.08%)</title><rect x="486.9" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 0.08%)</title><rect x="486.9" y="307.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 0.08%)</title><rect x="486.9" y="291.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.05%)</title><rect x="486.9" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.05%)</title><rect x="486.9" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.9" y="270.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="486.9" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="489.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.03%)</title><rect x="487.5" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.5" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.03%)</title><rect x="487.5" y="259.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="490.5" y="270.0"></text>
</g>
<g>
<title>[worker_0 tid=54515] (542 samples, 2.32%)</title><rect x="487.9" y="435.0" width="27.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="490.9" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (542 samples, 2.32%)</title><rect x="487.9" y="419.0" width="27.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.9" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (542 samples, 2.32%)</title><rect x="487.9" y="403.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.9" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (542 samples, 2.32%)</title><rect x="487.9" y="387.0" width="27.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.9" y="398.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (538 samples, 2.31%)</title><rect x="488.1" y="371.0" width="27.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.1" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (538 samples, 2.31%)</title><rect x="488.1" y="355.0" width="27.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.1" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (538 samples, 2.31%)</title><rect x="488.1" y="339.0" width="27.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.1" y="350.0">r..</text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="488.1" y="323.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="491.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.06%)</title><rect x="488.5" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.06%)</title><rect x="488.5" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.06%)</title><rect x="488.5" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.06%)</title><rect x="488.5" y="275.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.5" y="286.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="488.5" y="259.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="491.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.07%)</title><rect x="489.3" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.07%)</title><rect x="489.3" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.07%)</title><rect x="489.3" y="291.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="492.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (32 samples, 0.14%)</title><rect x="490.1" y="323.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.1" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.04%)</title><rect x="490.1" y="307.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="493.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.09%)</title><rect x="490.6" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.6" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="490.6" y="291.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="493.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.03%)</title><rect x="491.2" y="291.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="494.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (356 samples, 1.53%)</title><rect x="491.7" y="323.0" width="18.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (36 samples, 0.15%)</title><rect x="491.7" y="307.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (36 samples, 0.15%)</title><rect x="491.7" y="291.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (36 samples, 0.15%)</title><rect x="491.7" y="275.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (36 samples, 0.15%)</title><rect x="491.7" y="259.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (36 samples, 0.15%)</title><rect x="491.7" y="243.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.03%)</title><rect x="491.7" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.03%)</title><rect x="491.7" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.7" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.03%)</title><rect x="491.7" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.03%)</title><rect x="491.7" y="179.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.03%)</title><rect x="491.7" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.03%)</title><rect x="491.7" y="147.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (8 samples, 0.03%)</title><rect x="491.7" y="131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.03%)</title><rect x="491.7" y="115.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.03%)</title><rect x="491.7" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.03%)</title><rect x="491.7" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (8 samples, 0.03%)</title><rect x="491.7" y="67.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (8 samples, 0.03%)</title><rect x="491.7" y="51.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.7" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (8 samples, 0.03%)</title><rect x="491.7" y="35.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="494.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (28 samples, 0.12%)</title><rect x="492.2" y="227.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (28 samples, 0.12%)</title><rect x="492.2" y="211.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (28 samples, 0.12%)</title><rect x="492.2" y="195.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.12%)</title><rect x="492.2" y="179.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="495.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (14 samples, 0.06%)</title><rect x="493.6" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (14 samples, 0.06%)</title><rect x="493.6" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (14 samples, 0.06%)</title><rect x="493.6" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (14 samples, 0.06%)</title><rect x="493.6" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (14 samples, 0.06%)</title><rect x="493.6" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.06%)</title><rect x="493.6" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.6" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.06%)</title><rect x="493.6" y="211.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="496.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (22 samples, 0.09%)</title><rect x="494.3" y="307.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (22 samples, 0.09%)</title><rect x="494.3" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.3" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.09%)</title><rect x="494.3" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.3" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.09%)</title><rect x="494.3" y="259.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="497.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (13 samples, 0.06%)</title><rect x="495.4" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="498.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.06%)</title><rect x="495.4" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.06%)</title><rect x="495.4" y="275.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="498.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (271 samples, 1.16%)</title><rect x="496.0" y="307.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (17 samples, 0.07%)</title><rect x="496.0" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.07%)</title><rect x="496.0" y="275.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="499.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (254 samples, 1.09%)</title><rect x="496.9" y="291.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (8 samples, 0.03%)</title><rect x="496.9" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.9" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (8 samples, 0.03%)</title><rect x="496.9" y="259.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="499.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (112 samples, 0.48%)</title><rect x="497.3" y="275.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (8 samples, 0.03%)</title><rect x="497.3" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="500.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (104 samples, 0.45%)</title><rect x="497.7" y="259.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.7" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.02%)</title><rect x="497.7" y="243.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="500.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.03%)</title><rect x="498.0" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.0" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.03%)</title><rect x="498.0" y="227.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="501.0" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (15 samples, 0.06%)</title><rect x="498.3" y="243.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="501.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (78 samples, 0.33%)</title><rect x="499.0" y="243.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (78 samples, 0.33%)</title><rect x="499.0" y="227.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (78 samples, 0.33%)</title><rect x="499.0" y="211.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.05%)</title><rect x="499.0" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (12 samples, 0.05%)</title><rect x="499.0" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.05%)</title><rect x="499.0" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.05%)</title><rect x="499.0" y="147.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="499.0" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="499.0" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.0" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.03%)</title><rect x="499.0" y="99.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="502.0" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.02%)</title><rect x="499.4" y="131.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (5 samples, 0.02%)</title><rect x="499.4" y="115.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (5 samples, 0.02%)</title><rect x="499.4" y="99.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (5 samples, 0.02%)</title><rect x="499.4" y="83.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="502.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (66 samples, 0.28%)</title><rect x="499.6" y="195.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.6" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (18 samples, 0.08%)</title><rect x="499.6" y="179.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="502.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.11%)</title><rect x="500.6" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.11%)</title><rect x="500.6" y="163.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (5 samples, 0.02%)</title><rect x="500.6" y="147.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.6" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (5 samples, 0.02%)</title><rect x="500.6" y="131.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="503.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.get$Lambda (21 samples, 0.09%)</title><rect x="500.8" y="147.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.8" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (21 samples, 0.09%)</title><rect x="500.8" y="131.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="503.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (20 samples, 0.09%)</title><rect x="502.0" y="179.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.0" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.09%)</title><rect x="502.0" y="163.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="505.0" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="503.0" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="506.0" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (11 samples, 0.05%)</title><rect x="503.3" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.05%)</title><rect x="503.3" y="259.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="506.3" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (10 samples, 0.04%)</title><rect x="503.8" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="506.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (10 samples, 0.04%)</title><rect x="503.8" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.8" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (10 samples, 0.04%)</title><rect x="503.8" y="243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.8" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (10 samples, 0.04%)</title><rect x="503.8" y="227.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (10 samples, 0.04%)</title><rect x="503.8" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (10 samples, 0.04%)</title><rect x="503.8" y="195.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="506.8" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (8 samples, 0.03%)</title><rect x="504.5" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (8 samples, 0.03%)</title><rect x="504.5" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.5" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (8 samples, 0.03%)</title><rect x="504.5" y="243.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="507.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.05%)</title><rect x="504.9" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.04%)</title><rect x="504.9" y="259.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="507.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (85 samples, 0.36%)</title><rect x="505.5" y="275.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (23 samples, 0.10%)</title><rect x="505.5" y="259.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (9 samples, 0.04%)</title><rect x="505.5" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (9 samples, 0.04%)</title><rect x="505.5" y="227.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="508.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.06%)</title><rect x="505.9" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.06%)</title><rect x="505.9" y="227.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="508.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (5 samples, 0.02%)</title><rect x="506.6" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (5 samples, 0.02%)</title><rect x="506.6" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="509.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="506.9" y="259.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="506.9" y="243.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="506.9" y="227.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.02%)</title><rect x="506.9" y="211.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="509.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (29 samples, 0.12%)</title><rect x="507.1" y="259.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.1" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (11 samples, 0.05%)</title><rect x="507.1" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.1" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (11 samples, 0.05%)</title><rect x="507.1" y="227.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="510.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (18 samples, 0.08%)</title><rect x="507.7" y="243.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (14 samples, 0.06%)</title><rect x="507.9" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="510.9" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (14 samples, 0.06%)</title><rect x="507.9" y="211.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="510.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (23 samples, 0.10%)</title><rect x="508.6" y="259.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.6" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (23 samples, 0.10%)</title><rect x="508.6" y="243.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="511.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (62 samples, 0.27%)</title><rect x="509.8" y="323.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (62 samples, 0.27%)</title><rect x="509.8" y="307.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (29 samples, 0.12%)</title><rect x="509.8" y="291.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (29 samples, 0.12%)</title><rect x="509.8" y="275.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (29 samples, 0.12%)</title><rect x="509.8" y="259.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.12%)</title><rect x="509.8" y="243.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.8" y="254.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.12%)</title><rect x="509.8" y="227.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="512.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (33 samples, 0.14%)</title><rect x="511.2" y="291.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.2" y="302.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.14%)</title><rect x="511.2" y="275.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="514.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (48 samples, 0.21%)</title><rect x="512.9" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 0.21%)</title><rect x="512.9" y="307.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (48 samples, 0.21%)</title><rect x="512.9" y="291.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (33 samples, 0.14%)</title><rect x="512.9" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (33 samples, 0.14%)</title><rect x="512.9" y="259.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.9" y="270.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="512.9" y="243.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="515.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 0.06%)</title><rect x="514.6" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.6" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.06%)</title><rect x="514.6" y="259.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="517.6" y="270.0"></text>
</g>
<g>
<title>[worker_0 tid=54516] (516 samples, 2.21%)</title><rect x="515.3" y="435.0" width="26.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="518.3" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (516 samples, 2.21%)</title><rect x="515.3" y="419.0" width="26.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (516 samples, 2.21%)</title><rect x="515.3" y="403.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.3" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (516 samples, 2.21%)</title><rect x="515.3" y="387.0" width="26.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.3" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.06%)</title><rect x="515.3" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.06%)</title><rect x="515.3" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.06%)</title><rect x="515.3" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.06%)</title><rect x="515.3" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.06%)</title><rect x="515.3" y="307.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="518.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (502 samples, 2.15%)</title><rect x="516.0" y="371.0" width="25.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.0" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (502 samples, 2.15%)</title><rect x="516.0" y="355.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.0" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (502 samples, 2.15%)</title><rect x="516.0" y="339.0" width="25.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.0" y="350.0">r..</text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="516.0" y="323.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="519.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.04%)</title><rect x="516.7" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.04%)</title><rect x="516.7" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.04%)</title><rect x="516.7" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.04%)</title><rect x="516.7" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.7" y="286.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="516.7" y="259.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="519.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.06%)</title><rect x="517.2" y="323.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.06%)</title><rect x="517.2" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.06%)</title><rect x="517.2" y="291.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="520.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (35 samples, 0.15%)</title><rect x="518.0" y="323.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.0" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.03%)</title><rect x="518.0" y="307.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="521.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (27 samples, 0.12%)</title><rect x="518.4" y="307.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.4" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="518.4" y="291.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="521.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.04%)</title><rect x="519.0" y="291.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="522.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="519.5" y="291.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="522.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (331 samples, 1.42%)</title><rect x="519.7" y="323.0" width="16.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (35 samples, 0.15%)</title><rect x="519.7" y="307.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (35 samples, 0.15%)</title><rect x="519.7" y="291.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (35 samples, 0.15%)</title><rect x="519.7" y="275.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (35 samples, 0.15%)</title><rect x="519.7" y="259.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (35 samples, 0.15%)</title><rect x="519.7" y="243.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="519.7" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.03%)</title><rect x="519.7" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.7" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.03%)</title><rect x="519.7" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.03%)</title><rect x="519.7" y="179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.03%)</title><rect x="519.7" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.03%)</title><rect x="519.7" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (6 samples, 0.03%)</title><rect x="519.7" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.03%)</title><rect x="519.7" y="115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.03%)</title><rect x="519.7" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="519.7" y="83.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="519.7" y="67.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="519.7" y="51.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.7" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="519.7" y="35.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="522.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (29 samples, 0.12%)</title><rect x="520.0" y="227.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (29 samples, 0.12%)</title><rect x="520.0" y="211.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (29 samples, 0.12%)</title><rect x="520.0" y="195.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.12%)</title><rect x="520.0" y="179.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="523.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (13 samples, 0.06%)</title><rect x="521.5" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (13 samples, 0.06%)</title><rect x="521.5" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (13 samples, 0.06%)</title><rect x="521.5" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (13 samples, 0.06%)</title><rect x="521.5" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (13 samples, 0.06%)</title><rect x="521.5" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.06%)</title><rect x="521.5" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.06%)</title><rect x="521.5" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="524.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (16 samples, 0.07%)</title><rect x="522.2" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.07%)</title><rect x="522.2" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.07%)</title><rect x="522.2" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.2" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.07%)</title><rect x="522.2" y="259.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="525.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (11 samples, 0.05%)</title><rect x="523.0" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.05%)</title><rect x="523.0" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.05%)</title><rect x="523.0" y="275.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="526.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (256 samples, 1.10%)</title><rect x="523.5" y="307.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.05%)</title><rect x="523.5" y="291.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="526.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.05%)</title><rect x="523.5" y="275.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="526.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (245 samples, 1.05%)</title><rect x="524.1" y="291.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (16 samples, 0.07%)</title><rect x="524.1" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.1" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (16 samples, 0.07%)</title><rect x="524.1" y="259.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="527.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (89 samples, 0.38%)</title><rect x="524.9" y="275.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (87 samples, 0.37%)</title><rect x="525.0" y="259.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.0" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.02%)</title><rect x="525.0" y="243.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="528.0" y="254.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (13 samples, 0.06%)</title><rect x="525.3" y="243.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="528.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (66 samples, 0.28%)</title><rect x="526.1" y="243.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (66 samples, 0.28%)</title><rect x="526.1" y="227.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (66 samples, 0.28%)</title><rect x="526.1" y="211.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.09%)</title><rect x="526.1" y="195.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (20 samples, 0.09%)</title><rect x="526.1" y="179.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.09%)</title><rect x="526.1" y="163.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.09%)</title><rect x="526.1" y="147.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (9 samples, 0.04%)</title><rect x="526.1" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (9 samples, 0.04%)</title><rect x="526.1" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.1" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (9 samples, 0.04%)</title><rect x="526.1" y="99.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="529.1" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (11 samples, 0.05%)</title><rect x="526.5" y="131.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (11 samples, 0.05%)</title><rect x="526.5" y="115.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (11 samples, 0.05%)</title><rect x="526.5" y="99.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (11 samples, 0.05%)</title><rect x="526.5" y="83.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="529.5" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (46 samples, 0.20%)</title><rect x="527.1" y="195.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.1" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (14 samples, 0.06%)</title><rect x="527.1" y="179.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="530.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="527.8" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="527.8" y="163.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.03%)</title><rect x="528.1" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.03%)</title><rect x="528.1" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.1" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.03%)</title><rect x="528.1" y="147.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="531.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (20 samples, 0.09%)</title><rect x="528.4" y="179.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.4" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.09%)</title><rect x="528.4" y="163.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="531.4" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="529.4" y="275.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="532.4" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.04%)</title><rect x="529.7" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="529.7" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="532.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (15 samples, 0.06%)</title><rect x="530.2" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (15 samples, 0.06%)</title><rect x="530.2" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (15 samples, 0.06%)</title><rect x="530.2" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.2" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (15 samples, 0.06%)</title><rect x="530.2" y="227.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="533.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (15 samples, 0.06%)</title><rect x="530.2" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (15 samples, 0.06%)</title><rect x="530.2" y="195.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="533.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (9 samples, 0.04%)</title><rect x="531.1" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (9 samples, 0.04%)</title><rect x="531.1" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.1" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (9 samples, 0.04%)</title><rect x="531.1" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="534.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.06%)</title><rect x="531.6" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.03%)</title><rect x="531.6" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="534.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="531.9" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="531.9" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.03%)</title><rect x="531.9" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.9" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.03%)</title><rect x="531.9" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.03%)</title><rect x="531.9" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.03%)</title><rect x="531.9" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.03%)</title><rect x="531.9" y="163.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (6 samples, 0.03%)</title><rect x="531.9" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.03%)</title><rect x="531.9" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.03%)</title><rect x="531.9" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="531.9" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="531.9" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="531.9" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="531.9" y="51.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="534.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (84 samples, 0.36%)</title><rect x="532.2" y="275.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (26 samples, 0.11%)</title><rect x="532.2" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (10 samples, 0.04%)</title><rect x="532.2" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (10 samples, 0.04%)</title><rect x="532.2" y="227.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="535.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.07%)</title><rect x="532.7" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.07%)</title><rect x="532.7" y="227.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="535.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (7 samples, 0.03%)</title><rect x="533.6" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (7 samples, 0.03%)</title><rect x="533.6" y="243.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="536.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.04%)</title><rect x="533.9" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.04%)</title><rect x="533.9" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.04%)</title><rect x="533.9" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (10 samples, 0.04%)</title><rect x="533.9" y="211.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="536.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (24 samples, 0.10%)</title><rect x="534.4" y="259.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.4" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (8 samples, 0.03%)</title><rect x="534.4" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.4" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (8 samples, 0.03%)</title><rect x="534.4" y="227.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="537.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (16 samples, 0.07%)</title><rect x="534.8" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (12 samples, 0.05%)</title><rect x="535.0" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (12 samples, 0.05%)</title><rect x="535.0" y="211.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="538.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (17 samples, 0.07%)</title><rect x="535.6" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.6" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (17 samples, 0.07%)</title><rect x="535.6" y="243.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="538.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (53 samples, 0.23%)</title><rect x="536.5" y="323.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (53 samples, 0.23%)</title><rect x="536.5" y="307.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (32 samples, 0.14%)</title><rect x="536.5" y="291.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (32 samples, 0.14%)</title><rect x="536.5" y="275.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (32 samples, 0.14%)</title><rect x="536.5" y="259.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.14%)</title><rect x="536.5" y="243.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.5" y="254.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="536.5" y="227.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="539.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (21 samples, 0.09%)</title><rect x="538.1" y="291.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.1" y="302.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.09%)</title><rect x="538.1" y="275.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="541.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (45 samples, 0.19%)</title><rect x="539.2" y="323.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (45 samples, 0.19%)</title><rect x="539.2" y="307.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 0.19%)</title><rect x="539.2" y="291.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (30 samples, 0.13%)</title><rect x="539.2" y="275.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (30 samples, 0.13%)</title><rect x="539.2" y="259.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.2" y="270.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="539.2" y="243.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="542.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 0.06%)</title><rect x="540.7" y="275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.7" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.06%)</title><rect x="540.7" y="259.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="543.7" y="270.0"></text>
</g>
<g>
<title>[worker_1 tid=54511] (791 samples, 3.39%)</title><rect x="541.4" y="435.0" width="40.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="544.4" y="446.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (791 samples, 3.39%)</title><rect x="541.4" y="419.0" width="40.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.4" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (791 samples, 3.39%)</title><rect x="541.4" y="403.0" width="40.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.4" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (791 samples, 3.39%)</title><rect x="541.4" y="387.0" width="40.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.4" y="398.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (787 samples, 3.38%)</title><rect x="541.6" y="371.0" width="39.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="544.6" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (787 samples, 3.38%)</title><rect x="541.6" y="355.0" width="39.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.6" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (787 samples, 3.38%)</title><rect x="541.6" y="339.0" width="39.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.6" y="350.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.06%)</title><rect x="541.7" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.06%)</title><rect x="541.7" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.06%)</title><rect x="541.7" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.06%)</title><rect x="541.7" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.7" y="286.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="541.7" y="259.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="544.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.02%)</title><rect x="542.4" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.02%)</title><rect x="542.4" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.02%)</title><rect x="542.4" y="291.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="545.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (12 samples, 0.05%)</title><rect x="542.7" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.04%)</title><rect x="542.8" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.03%)</title><rect x="542.9" y="291.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="545.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (94 samples, 0.40%)</title><rect x="543.3" y="323.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (8 samples, 0.03%)</title><rect x="543.3" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.03%)</title><rect x="543.3" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.03%)</title><rect x="543.3" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.03%)</title><rect x="543.3" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.03%)</title><rect x="543.3" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (7 samples, 0.03%)</title><rect x="543.3" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (7 samples, 0.03%)</title><rect x="543.3" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="543.3" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="543.3" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="546.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (78 samples, 0.33%)</title><rect x="544.1" y="307.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (74 samples, 0.32%)</title><rect x="544.3" y="291.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (28 samples, 0.12%)</title><rect x="544.3" y="275.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.11%)</title><rect x="544.4" y="259.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.4" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (21 samples, 0.09%)</title><rect x="544.6" y="243.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (21 samples, 0.09%)</title><rect x="544.6" y="227.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (21 samples, 0.09%)</title><rect x="544.6" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (17 samples, 0.07%)</title><rect x="544.8" y="195.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (9 samples, 0.04%)</title><rect x="545.2" y="179.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="545.2" y="163.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="548.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (30 samples, 0.13%)</title><rect x="546.5" y="275.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.03%)</title><rect x="546.5" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="547.0" y="259.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="547.0" y="243.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="547.0" y="227.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.02%)</title><rect x="547.0" y="211.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="550.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (12 samples, 0.05%)</title><rect x="547.2" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (9 samples, 0.04%)</title><rect x="547.4" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (8 samples, 0.03%)</title><rect x="547.4" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (8 samples, 0.03%)</title><rect x="547.4" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="550.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (27 samples, 0.12%)</title><rect x="548.0" y="323.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (27 samples, 0.12%)</title><rect x="548.0" y="307.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.08%)</title><rect x="548.0" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.08%)</title><rect x="548.0" y="275.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.08%)</title><rect x="548.0" y="259.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.08%)</title><rect x="548.0" y="243.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.0" y="254.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="548.0" y="227.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="551.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (8 samples, 0.03%)</title><rect x="549.0" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.0" y="302.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="549.0" y="275.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="552.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (616 samples, 2.64%)</title><rect x="549.4" y="323.0" width="31.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.4" y="334.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (612 samples, 2.62%)</title><rect x="549.6" y="307.0" width="31.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.6" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (612 samples, 2.62%)</title><rect x="549.6" y="291.0" width="31.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.6" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (553 samples, 2.37%)</title><rect x="549.7" y="275.0" width="28.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.7" y="286.0">o..</text>
</g>
<g>
<title>byte[] (284 samples, 1.22%)</title><rect x="549.7" y="259.0" width="14.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="552.7" y="270.0"></text>
</g>
<g>
<title>byte[] (269 samples, 1.15%)</title><rect x="564.1" y="259.0" width="13.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="567.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (46 samples, 0.20%)</title><rect x="577.7" y="275.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (36 samples, 0.15%)</title><rect x="577.9" y="259.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.15%)</title><rect x="577.9" y="243.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.9" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.15%)</title><rect x="577.9" y="227.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.9" y="238.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.11%)</title><rect x="577.9" y="211.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="580.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.03%)</title><rect x="579.4" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.03%)</title><rect x="579.4" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.03%)</title><rect x="579.4" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.4" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="579.4" y="163.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="582.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.02%)</title><rect x="579.8" y="259.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.02%)</title><rect x="579.8" y="243.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="582.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.02%)</title><rect x="580.2" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.02%)</title><rect x="580.2" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.02%)</title><rect x="580.2" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (18 samples, 0.08%)</title><rect x="580.6" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.08%)</title><rect x="580.6" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.08%)</title><rect x="580.6" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.05%)</title><rect x="580.6" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.05%)</title><rect x="580.6" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.6" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="580.6" y="243.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="583.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.03%)</title><rect x="581.1" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.1" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.03%)</title><rect x="581.1" y="259.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="584.1" y="270.0"></text>
</g>
<g>
<title>[worker_1 tid=54517] (546 samples, 2.34%)</title><rect x="581.5" y="435.0" width="27.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="584.5" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (546 samples, 2.34%)</title><rect x="581.5" y="419.0" width="27.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.5" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (546 samples, 2.34%)</title><rect x="581.5" y="403.0" width="27.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.5" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (546 samples, 2.34%)</title><rect x="581.5" y="387.0" width="27.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.5" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.05%)</title><rect x="581.5" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.05%)</title><rect x="581.5" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.05%)</title><rect x="581.5" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.05%)</title><rect x="581.5" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.05%)</title><rect x="581.5" y="307.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="584.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (535 samples, 2.29%)</title><rect x="582.0" y="371.0" width="27.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.0" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (535 samples, 2.29%)</title><rect x="582.0" y="355.0" width="27.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.0" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (535 samples, 2.29%)</title><rect x="582.0" y="339.0" width="27.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.0" y="350.0">r..</text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="582.0" y="323.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="585.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.06%)</title><rect x="582.5" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.06%)</title><rect x="582.5" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.06%)</title><rect x="582.5" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.06%)</title><rect x="582.5" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.5" y="286.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="582.5" y="259.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="585.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.04%)</title><rect x="583.3" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.04%)</title><rect x="583.3" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="583.3" y="291.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="586.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (26 samples, 0.11%)</title><rect x="583.8" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.09%)</title><rect x="584.0" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.0" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="584.0" y="291.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="587.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="584.8" y="291.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="587.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (374 samples, 1.60%)</title><rect x="585.1" y="323.0" width="18.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (28 samples, 0.12%)</title><rect x="585.1" y="307.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (28 samples, 0.12%)</title><rect x="585.1" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (28 samples, 0.12%)</title><rect x="585.1" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (28 samples, 0.12%)</title><rect x="585.1" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (28 samples, 0.12%)</title><rect x="585.1" y="243.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="585.1" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.03%)</title><rect x="585.1" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.03%)</title><rect x="585.1" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.03%)</title><rect x="585.1" y="179.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.03%)</title><rect x="585.1" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.03%)</title><rect x="585.1" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (6 samples, 0.03%)</title><rect x="585.1" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.03%)</title><rect x="585.1" y="115.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.03%)</title><rect x="585.1" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.1" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="585.1" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="588.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="585.1" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="585.1" y="51.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="585.1" y="35.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="588.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (22 samples, 0.09%)</title><rect x="585.4" y="227.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (22 samples, 0.09%)</title><rect x="585.4" y="211.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (22 samples, 0.09%)</title><rect x="585.4" y="195.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.09%)</title><rect x="585.4" y="179.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="588.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (17 samples, 0.07%)</title><rect x="586.5" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (17 samples, 0.07%)</title><rect x="586.5" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (17 samples, 0.07%)</title><rect x="586.5" y="275.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (17 samples, 0.07%)</title><rect x="586.5" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (17 samples, 0.07%)</title><rect x="586.5" y="243.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.07%)</title><rect x="586.5" y="227.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.07%)</title><rect x="586.5" y="211.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="589.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (32 samples, 0.14%)</title><rect x="587.3" y="307.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (32 samples, 0.14%)</title><rect x="587.3" y="291.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.3" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.14%)</title><rect x="587.3" y="275.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="590.3" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.14%)</title><rect x="587.3" y="259.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="590.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (12 samples, 0.05%)</title><rect x="589.0" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.05%)</title><rect x="589.0" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.05%)</title><rect x="589.0" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="592.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (285 samples, 1.22%)</title><rect x="589.6" y="307.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.09%)</title><rect x="589.6" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.09%)</title><rect x="589.6" y="275.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="592.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (264 samples, 1.13%)</title><rect x="590.6" y="291.0" width="13.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.03%)</title><rect x="590.6" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.6" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.03%)</title><rect x="590.6" y="259.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="593.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (110 samples, 0.47%)</title><rect x="590.9" y="275.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (107 samples, 0.46%)</title><rect x="591.1" y="259.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.1" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (11 samples, 0.05%)</title><rect x="591.1" y="243.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="594.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.03%)</title><rect x="591.6" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.6" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.03%)</title><rect x="591.6" y="227.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="594.6" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (14 samples, 0.06%)</title><rect x="592.0" y="243.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="595.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (8 samples, 0.03%)</title><rect x="592.7" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.7" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="592.7" y="227.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="595.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (68 samples, 0.29%)</title><rect x="593.1" y="243.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (68 samples, 0.29%)</title><rect x="593.1" y="227.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (68 samples, 0.29%)</title><rect x="593.1" y="211.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.06%)</title><rect x="593.1" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (14 samples, 0.06%)</title><rect x="593.1" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.06%)</title><rect x="593.1" y="163.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.06%)</title><rect x="593.1" y="147.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="593.1" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="593.1" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.1" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.03%)</title><rect x="593.1" y="99.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="596.1" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.03%)</title><rect x="593.4" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (7 samples, 0.03%)</title><rect x="593.4" y="115.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (7 samples, 0.03%)</title><rect x="593.4" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (7 samples, 0.03%)</title><rect x="593.4" y="83.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="596.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (54 samples, 0.23%)</title><rect x="593.8" y="195.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.12%)</title><rect x="594.0" y="179.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.12%)</title><rect x="594.0" y="163.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (8 samples, 0.03%)</title><rect x="594.0" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.0" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (8 samples, 0.03%)</title><rect x="594.0" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="597.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.get$Lambda (19 samples, 0.08%)</title><rect x="594.4" y="147.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.4" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (19 samples, 0.08%)</title><rect x="594.4" y="131.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="597.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.03%)</title><rect x="595.3" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.03%)</title><rect x="595.3" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.03%)</title><rect x="595.3" y="147.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="598.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (16 samples, 0.07%)</title><rect x="595.7" y="179.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.07%)</title><rect x="595.7" y="163.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="598.7" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.02%)</title><rect x="596.5" y="275.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="599.5" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (8 samples, 0.03%)</title><rect x="596.8" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="596.8" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="599.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (8 samples, 0.03%)</title><rect x="597.2" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.03%)</title><rect x="597.2" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (8 samples, 0.03%)</title><rect x="597.2" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.2" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.03%)</title><rect x="597.2" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (8 samples, 0.03%)</title><rect x="597.2" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (8 samples, 0.03%)</title><rect x="597.2" y="195.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="600.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (10 samples, 0.04%)</title><rect x="597.7" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (10 samples, 0.04%)</title><rect x="597.7" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.7" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (10 samples, 0.04%)</title><rect x="597.7" y="243.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="600.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.08%)</title><rect x="598.2" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.04%)</title><rect x="598.2" y="259.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="601.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.04%)</title><rect x="598.7" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.04%)</title><rect x="598.7" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.04%)</title><rect x="598.7" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.04%)</title><rect x="598.7" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.04%)</title><rect x="598.7" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.04%)</title><rect x="598.7" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.04%)</title><rect x="598.7" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (9 samples, 0.04%)</title><rect x="598.7" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.04%)</title><rect x="598.7" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.04%)</title><rect x="598.7" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.04%)</title><rect x="598.7" y="99.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (9 samples, 0.04%)</title><rect x="598.7" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (9 samples, 0.04%)</title><rect x="598.7" y="67.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (9 samples, 0.04%)</title><rect x="598.7" y="51.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="601.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (96 samples, 0.41%)</title><rect x="599.1" y="275.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.09%)</title><rect x="599.1" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (8 samples, 0.03%)</title><rect x="599.1" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.1" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (8 samples, 0.03%)</title><rect x="599.1" y="227.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="602.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.06%)</title><rect x="599.5" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.06%)</title><rect x="599.5" y="227.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="602.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.07%)</title><rect x="600.4" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.07%)</title><rect x="600.4" y="243.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.07%)</title><rect x="600.4" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (17 samples, 0.07%)</title><rect x="600.4" y="211.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="603.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (41 samples, 0.18%)</title><rect x="601.3" y="259.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.3" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (13 samples, 0.06%)</title><rect x="601.3" y="243.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.3" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (13 samples, 0.06%)</title><rect x="601.3" y="227.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="604.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (28 samples, 0.12%)</title><rect x="601.9" y="243.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="601.9" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="601.9" y="211.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (10 samples, 0.04%)</title><rect x="601.9" y="195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (10 samples, 0.04%)</title><rect x="601.9" y="179.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="604.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (18 samples, 0.08%)</title><rect x="602.4" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (18 samples, 0.08%)</title><rect x="602.4" y="211.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="605.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (13 samples, 0.06%)</title><rect x="603.3" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.3" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (13 samples, 0.06%)</title><rect x="603.3" y="243.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="606.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (54 samples, 0.23%)</title><rect x="604.0" y="323.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (54 samples, 0.23%)</title><rect x="604.0" y="307.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (39 samples, 0.17%)</title><rect x="604.0" y="291.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (39 samples, 0.17%)</title><rect x="604.0" y="275.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (39 samples, 0.17%)</title><rect x="604.0" y="259.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.17%)</title><rect x="604.0" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.0" y="254.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.17%)</title><rect x="604.0" y="227.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="607.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (15 samples, 0.06%)</title><rect x="606.0" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.0" y="302.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="606.0" y="275.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="609.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (47 samples, 0.20%)</title><rect x="606.7" y="323.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 0.20%)</title><rect x="606.7" y="307.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 0.20%)</title><rect x="606.7" y="291.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (25 samples, 0.11%)</title><rect x="606.7" y="275.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.7" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (25 samples, 0.11%)</title><rect x="606.7" y="259.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.7" y="270.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="606.7" y="243.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="609.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 0.09%)</title><rect x="608.0" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.0" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (22 samples, 0.09%)</title><rect x="608.0" y="259.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="611.0" y="270.0"></text>
</g>
<g>
<title>[worker_1 tid=54519] (527 samples, 2.26%)</title><rect x="609.1" y="435.0" width="26.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="612.1" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (527 samples, 2.26%)</title><rect x="609.1" y="419.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (527 samples, 2.26%)</title><rect x="609.1" y="403.0" width="26.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (527 samples, 2.26%)</title><rect x="609.1" y="387.0" width="26.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.06%)</title><rect x="609.1" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 0.06%)</title><rect x="609.1" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.06%)</title><rect x="609.1" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.06%)</title><rect x="609.1" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.06%)</title><rect x="609.1" y="307.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="612.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (512 samples, 2.20%)</title><rect x="609.9" y="371.0" width="25.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.9" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (512 samples, 2.20%)</title><rect x="609.9" y="355.0" width="25.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.9" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (512 samples, 2.20%)</title><rect x="609.9" y="339.0" width="25.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.9" y="350.0">r..</text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="609.9" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="612.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.06%)</title><rect x="610.3" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.06%)</title><rect x="610.3" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.06%)</title><rect x="610.3" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="610.3" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.3" y="286.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="610.3" y="259.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="613.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.06%)</title><rect x="611.0" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.06%)</title><rect x="611.0" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="611.0" y="291.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="614.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (48 samples, 0.21%)</title><rect x="611.7" y="323.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.7" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.04%)</title><rect x="611.7" y="307.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="614.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (38 samples, 0.16%)</title><rect x="612.2" y="307.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.2" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="612.2" y="291.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="615.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.04%)</title><rect x="612.9" y="291.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="615.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.06%)</title><rect x="613.4" y="291.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="616.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (317 samples, 1.36%)</title><rect x="614.1" y="323.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (26 samples, 0.11%)</title><rect x="614.1" y="307.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (26 samples, 0.11%)</title><rect x="614.1" y="291.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (26 samples, 0.11%)</title><rect x="614.1" y="275.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (26 samples, 0.11%)</title><rect x="614.1" y="259.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (26 samples, 0.11%)</title><rect x="614.1" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (23 samples, 0.10%)</title><rect x="614.3" y="227.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (23 samples, 0.10%)</title><rect x="614.3" y="211.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (23 samples, 0.10%)</title><rect x="614.3" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.10%)</title><rect x="614.3" y="179.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="617.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (22 samples, 0.09%)</title><rect x="615.4" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (22 samples, 0.09%)</title><rect x="615.4" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (22 samples, 0.09%)</title><rect x="615.4" y="275.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (22 samples, 0.09%)</title><rect x="615.4" y="259.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (22 samples, 0.09%)</title><rect x="615.4" y="243.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (22 samples, 0.09%)</title><rect x="615.4" y="227.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.09%)</title><rect x="615.4" y="211.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="618.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (17 samples, 0.07%)</title><rect x="616.5" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.07%)</title><rect x="616.5" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.5" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.07%)</title><rect x="616.5" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.5" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.07%)</title><rect x="616.5" y="259.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="619.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (17 samples, 0.07%)</title><rect x="617.4" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.07%)</title><rect x="617.4" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.07%)</title><rect x="617.4" y="275.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="620.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (235 samples, 1.01%)</title><rect x="618.3" y="307.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.04%)</title><rect x="618.3" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="618.3" y="275.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="621.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (226 samples, 0.97%)</title><rect x="618.7" y="291.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.03%)</title><rect x="618.7" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.03%)</title><rect x="618.7" y="259.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="621.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (92 samples, 0.39%)</title><rect x="619.1" y="275.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.1" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.02%)</title><rect x="619.1" y="259.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="622.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (87 samples, 0.37%)</title><rect x="619.3" y="259.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (11 samples, 0.05%)</title><rect x="619.5" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.5" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (11 samples, 0.05%)</title><rect x="619.5" y="227.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="622.5" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (15 samples, 0.06%)</title><rect x="620.0" y="243.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="623.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.03%)</title><rect x="620.8" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="620.8" y="227.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="623.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (52 samples, 0.22%)</title><rect x="621.1" y="243.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (52 samples, 0.22%)</title><rect x="621.1" y="227.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (52 samples, 0.22%)</title><rect x="621.1" y="211.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.04%)</title><rect x="621.1" y="195.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (10 samples, 0.04%)</title><rect x="621.1" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (10 samples, 0.04%)</title><rect x="621.1" y="163.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.04%)</title><rect x="621.1" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.03%)</title><rect x="621.3" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (7 samples, 0.03%)</title><rect x="621.3" y="115.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (7 samples, 0.03%)</title><rect x="621.3" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (7 samples, 0.03%)</title><rect x="621.3" y="83.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="624.3" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (42 samples, 0.18%)</title><rect x="621.6" y="195.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.6" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (12 samples, 0.05%)</title><rect x="621.6" y="179.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="624.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.03%)</title><rect x="622.4" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.03%)</title><rect x="622.4" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.4" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.03%)</title><rect x="622.4" y="147.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="625.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (20 samples, 0.09%)</title><rect x="622.7" y="179.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.09%)</title><rect x="622.7" y="163.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="625.7" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="623.7" y="275.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="626.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.03%)</title><rect x="624.0" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="624.0" y="259.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="627.0" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (11 samples, 0.05%)</title><rect x="624.4" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.4" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (11 samples, 0.05%)</title><rect x="624.4" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.4" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.05%)</title><rect x="624.4" y="243.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.4" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (11 samples, 0.05%)</title><rect x="624.4" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (11 samples, 0.05%)</title><rect x="624.4" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (11 samples, 0.05%)</title><rect x="624.4" y="195.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="627.4" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (12 samples, 0.05%)</title><rect x="625.1" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (12 samples, 0.05%)</title><rect x="625.1" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.1" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (12 samples, 0.05%)</title><rect x="625.1" y="243.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="628.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.04%)</title><rect x="625.7" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.04%)</title><rect x="625.7" y="259.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="628.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (78 samples, 0.33%)</title><rect x="626.2" y="275.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (25 samples, 0.11%)</title><rect x="626.2" y="259.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (9 samples, 0.04%)</title><rect x="626.2" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (9 samples, 0.04%)</title><rect x="626.2" y="227.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="629.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.07%)</title><rect x="626.7" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.07%)</title><rect x="626.7" y="227.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="629.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (5 samples, 0.02%)</title><rect x="627.5" y="259.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (5 samples, 0.02%)</title><rect x="627.5" y="243.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="630.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.05%)</title><rect x="627.7" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.05%)</title><rect x="627.7" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.05%)</title><rect x="627.7" y="227.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (11 samples, 0.05%)</title><rect x="627.7" y="211.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="630.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (16 samples, 0.07%)</title><rect x="628.3" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.3" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (6 samples, 0.03%)</title><rect x="628.3" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.3" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (6 samples, 0.03%)</title><rect x="628.3" y="227.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="631.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (10 samples, 0.04%)</title><rect x="628.6" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="631.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (9 samples, 0.04%)</title><rect x="628.6" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.6" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (9 samples, 0.04%)</title><rect x="628.6" y="211.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="631.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (21 samples, 0.09%)</title><rect x="629.1" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (21 samples, 0.09%)</title><rect x="629.1" y="243.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="632.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (59 samples, 0.25%)</title><rect x="630.2" y="323.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (59 samples, 0.25%)</title><rect x="630.2" y="307.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (35 samples, 0.15%)</title><rect x="630.2" y="291.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (35 samples, 0.15%)</title><rect x="630.2" y="275.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (35 samples, 0.15%)</title><rect x="630.2" y="259.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.15%)</title><rect x="630.2" y="243.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.2" y="254.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.15%)</title><rect x="630.2" y="227.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="633.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (24 samples, 0.10%)</title><rect x="631.9" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.9" y="302.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="631.9" y="275.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="634.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (52 samples, 0.22%)</title><rect x="633.1" y="323.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (52 samples, 0.22%)</title><rect x="633.1" y="307.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (52 samples, 0.22%)</title><rect x="633.1" y="291.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (35 samples, 0.15%)</title><rect x="633.1" y="275.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (35 samples, 0.15%)</title><rect x="633.1" y="259.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.1" y="270.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.15%)</title><rect x="633.1" y="243.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="636.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.07%)</title><rect x="634.9" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.9" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (17 samples, 0.07%)</title><rect x="634.9" y="259.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="637.9" y="270.0"></text>
</g>
<g>
<title>[worker_2 tid=54510] (776 samples, 3.33%)</title><rect x="635.8" y="435.0" width="39.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="638.8" y="446.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (776 samples, 3.33%)</title><rect x="635.8" y="419.0" width="39.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.8" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (776 samples, 3.33%)</title><rect x="635.8" y="403.0" width="39.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.8" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (776 samples, 3.33%)</title><rect x="635.8" y="387.0" width="39.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.8" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.05%)</title><rect x="635.8" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.05%)</title><rect x="635.8" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.05%)</title><rect x="635.8" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.05%)</title><rect x="635.8" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.05%)</title><rect x="635.8" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="638.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (765 samples, 3.28%)</title><rect x="636.3" y="371.0" width="38.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.3" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (765 samples, 3.28%)</title><rect x="636.3" y="355.0" width="38.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.3" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (765 samples, 3.28%)</title><rect x="636.3" y="339.0" width="38.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.3" y="350.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.05%)</title><rect x="636.4" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.05%)</title><rect x="636.4" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.05%)</title><rect x="636.4" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.05%)</title><rect x="636.4" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.4" y="286.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="636.4" y="259.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="639.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.05%)</title><rect x="637.0" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.05%)</title><rect x="637.0" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.05%)</title><rect x="637.0" y="291.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="640.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (8 samples, 0.03%)</title><rect x="637.6" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.03%)</title><rect x="637.6" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (91 samples, 0.39%)</title><rect x="638.0" y="323.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (11 samples, 0.05%)</title><rect x="638.0" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.05%)</title><rect x="638.0" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.05%)</title><rect x="638.0" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.05%)</title><rect x="638.0" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.05%)</title><rect x="638.0" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (8 samples, 0.03%)</title><rect x="638.2" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (8 samples, 0.03%)</title><rect x="638.2" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="638.2" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="638.2" y="179.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="641.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.02%)</title><rect x="638.7" y="307.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="638.7" y="291.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.7" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.02%)</title><rect x="638.7" y="275.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.7" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="638.7" y="259.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="641.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (6 samples, 0.03%)</title><rect x="638.9" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="638.9" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="638.9" y="275.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="641.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (67 samples, 0.29%)</title><rect x="639.2" y="307.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.02%)</title><rect x="639.2" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.02%)</title><rect x="639.2" y="275.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="642.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (62 samples, 0.27%)</title><rect x="639.5" y="291.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 0.12%)</title><rect x="639.6" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (26 samples, 0.11%)</title><rect x="639.7" y="259.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.7" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.05%)</title><rect x="640.4" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.05%)</title><rect x="640.4" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.05%)</title><rect x="640.4" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (10 samples, 0.04%)</title><rect x="640.5" y="195.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (5 samples, 0.02%)</title><rect x="640.5" y="179.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="643.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (22 samples, 0.09%)</title><rect x="641.5" y="275.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.03%)</title><rect x="641.5" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (9 samples, 0.04%)</title><rect x="642.1" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (8 samples, 0.03%)</title><rect x="642.1" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (8 samples, 0.03%)</title><rect x="642.1" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (8 samples, 0.03%)</title><rect x="642.1" y="211.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="645.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (23 samples, 0.10%)</title><rect x="642.6" y="323.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (23 samples, 0.10%)</title><rect x="642.6" y="307.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.05%)</title><rect x="642.6" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.05%)</title><rect x="642.6" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.05%)</title><rect x="642.6" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.05%)</title><rect x="642.6" y="243.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.6" y="254.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="642.6" y="227.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="645.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (11 samples, 0.05%)</title><rect x="643.2" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.2" y="302.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="643.2" y="275.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="646.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (588 samples, 2.52%)</title><rect x="643.8" y="323.0" width="29.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.8" y="334.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (586 samples, 2.51%)</title><rect x="643.9" y="307.0" width="29.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.9" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (586 samples, 2.51%)</title><rect x="643.9" y="291.0" width="29.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.9" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (528 samples, 2.26%)</title><rect x="643.9" y="275.0" width="26.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.9" y="286.0">o..</text>
</g>
<g>
<title>byte[] (278 samples, 1.19%)</title><rect x="643.9" y="259.0" width="14.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="646.9" y="270.0"></text>
</g>
<g>
<title>byte[] (250 samples, 1.07%)</title><rect x="657.9" y="259.0" width="12.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="660.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (44 samples, 0.19%)</title><rect x="670.6" y="275.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (35 samples, 0.15%)</title><rect x="670.9" y="259.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.15%)</title><rect x="670.9" y="243.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.9" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.15%)</title><rect x="670.9" y="227.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.9" y="238.0"></text>
</g>
<g>
<title>char[] (28 samples, 0.12%)</title><rect x="670.9" y="211.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="673.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (11 samples, 0.05%)</title><rect x="672.8" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.05%)</title><rect x="672.8" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.8" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="672.8" y="243.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="675.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (30 samples, 0.13%)</title><rect x="673.5" y="323.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 0.13%)</title><rect x="673.5" y="307.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30 samples, 0.13%)</title><rect x="673.5" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.08%)</title><rect x="673.5" y="275.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.08%)</title><rect x="673.5" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.5" y="270.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="673.5" y="243.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="676.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.05%)</title><rect x="674.5" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.5" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.05%)</title><rect x="674.5" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="677.5" y="270.0"></text>
</g>
<g>
<title>[worker_2 tid=54518] (537 samples, 2.30%)</title><rect x="675.1" y="435.0" width="27.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="678.1" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (537 samples, 2.30%)</title><rect x="675.1" y="419.0" width="27.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (537 samples, 2.30%)</title><rect x="675.1" y="403.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (537 samples, 2.30%)</title><rect x="675.1" y="387.0" width="27.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.02%)</title><rect x="675.1" y="371.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.02%)</title><rect x="675.1" y="355.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.02%)</title><rect x="675.1" y="339.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.02%)</title><rect x="675.1" y="323.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.02%)</title><rect x="675.1" y="307.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="678.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (532 samples, 2.28%)</title><rect x="675.3" y="371.0" width="26.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.3" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (532 samples, 2.28%)</title><rect x="675.3" y="355.0" width="26.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.3" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (532 samples, 2.28%)</title><rect x="675.3" y="339.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.3" y="350.0">r..</text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="675.3" y="323.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="678.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.07%)</title><rect x="676.1" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.07%)</title><rect x="676.1" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.07%)</title><rect x="676.1" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.07%)</title><rect x="676.1" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.1" y="286.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="676.1" y="259.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="679.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.07%)</title><rect x="676.9" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.07%)</title><rect x="676.9" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.07%)</title><rect x="676.9" y="291.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="679.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (31 samples, 0.13%)</title><rect x="677.7" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.7" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.03%)</title><rect x="677.7" y="307.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="680.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.10%)</title><rect x="678.1" y="307.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.1" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="678.1" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="681.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.04%)</title><rect x="678.6" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="681.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="679.1" y="291.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="682.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (352 samples, 1.51%)</title><rect x="679.3" y="323.0" width="17.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.10%)</title><rect x="679.3" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.10%)</title><rect x="679.3" y="291.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.10%)</title><rect x="679.3" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.10%)</title><rect x="679.3" y="259.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.10%)</title><rect x="679.3" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.03%)</title><rect x="679.3" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.03%)</title><rect x="679.3" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.3" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.03%)</title><rect x="679.3" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.03%)</title><rect x="679.3" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.03%)</title><rect x="679.3" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.03%)</title><rect x="679.3" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (7 samples, 0.03%)</title><rect x="679.3" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.03%)</title><rect x="679.3" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.03%)</title><rect x="679.3" y="99.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.03%)</title><rect x="679.3" y="83.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (7 samples, 0.03%)</title><rect x="679.3" y="67.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (7 samples, 0.03%)</title><rect x="679.3" y="51.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (7 samples, 0.03%)</title><rect x="679.3" y="35.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="682.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (17 samples, 0.07%)</title><rect x="679.7" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (17 samples, 0.07%)</title><rect x="679.7" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.07%)</title><rect x="679.7" y="195.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.07%)</title><rect x="679.7" y="179.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="682.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (22 samples, 0.09%)</title><rect x="680.5" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (22 samples, 0.09%)</title><rect x="680.5" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (22 samples, 0.09%)</title><rect x="680.5" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (22 samples, 0.09%)</title><rect x="680.5" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (22 samples, 0.09%)</title><rect x="680.5" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (22 samples, 0.09%)</title><rect x="680.5" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.09%)</title><rect x="680.5" y="211.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="683.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (20 samples, 0.09%)</title><rect x="681.6" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.09%)</title><rect x="681.6" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.09%)</title><rect x="681.6" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.09%)</title><rect x="681.6" y="259.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="684.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (15 samples, 0.06%)</title><rect x="682.6" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.06%)</title><rect x="682.6" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.06%)</title><rect x="682.6" y="275.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="685.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (271 samples, 1.16%)</title><rect x="683.4" y="307.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.06%)</title><rect x="683.4" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.06%)</title><rect x="683.4" y="275.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="686.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (257 samples, 1.10%)</title><rect x="684.1" y="291.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (106 samples, 0.45%)</title><rect x="684.3" y="275.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (103 samples, 0.44%)</title><rect x="684.4" y="259.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.4" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.03%)</title><rect x="684.4" y="243.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="687.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (10 samples, 0.04%)</title><rect x="684.7" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.7" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (10 samples, 0.04%)</title><rect x="684.7" y="227.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="687.7" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (11 samples, 0.05%)</title><rect x="685.2" y="243.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="688.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (7 samples, 0.03%)</title><rect x="685.8" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="685.8" y="227.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="688.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (69 samples, 0.30%)</title><rect x="686.1" y="243.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (69 samples, 0.30%)</title><rect x="686.1" y="227.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (69 samples, 0.30%)</title><rect x="686.1" y="211.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.06%)</title><rect x="686.1" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (14 samples, 0.06%)</title><rect x="686.1" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.06%)</title><rect x="686.1" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.06%)</title><rect x="686.1" y="147.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.03%)</title><rect x="686.1" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.03%)</title><rect x="686.1" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.1" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.03%)</title><rect x="686.1" y="99.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="689.1" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.03%)</title><rect x="686.4" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (8 samples, 0.03%)</title><rect x="686.4" y="115.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (8 samples, 0.03%)</title><rect x="686.4" y="99.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (8 samples, 0.03%)</title><rect x="686.4" y="83.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="689.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (55 samples, 0.24%)</title><rect x="686.8" y="195.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.8" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.03%)</title><rect x="686.8" y="179.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="689.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="687.2" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="687.2" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.get$Lambda (10 samples, 0.04%)</title><rect x="687.3" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.3" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (10 samples, 0.04%)</title><rect x="687.3" y="131.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="690.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (8 samples, 0.03%)</title><rect x="687.8" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (8 samples, 0.03%)</title><rect x="687.8" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.8" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (8 samples, 0.03%)</title><rect x="687.8" y="147.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="690.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (28 samples, 0.12%)</title><rect x="688.2" y="179.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.12%)</title><rect x="688.2" y="163.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="691.2" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.04%)</title><rect x="689.6" y="275.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="692.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (10 samples, 0.04%)</title><rect x="690.1" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.04%)</title><rect x="690.1" y="259.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="693.1" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (11 samples, 0.05%)</title><rect x="690.6" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (11 samples, 0.05%)</title><rect x="690.6" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.05%)</title><rect x="690.6" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.6" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (11 samples, 0.05%)</title><rect x="690.6" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (11 samples, 0.05%)</title><rect x="690.6" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (11 samples, 0.05%)</title><rect x="690.6" y="195.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="693.6" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (15 samples, 0.06%)</title><rect x="691.2" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (15 samples, 0.06%)</title><rect x="691.2" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.2" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (15 samples, 0.06%)</title><rect x="691.2" y="243.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="694.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.07%)</title><rect x="692.0" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.02%)</title><rect x="692.0" y="259.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="695.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (11 samples, 0.05%)</title><rect x="692.2" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.05%)</title><rect x="692.2" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.05%)</title><rect x="692.2" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.05%)</title><rect x="692.2" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.05%)</title><rect x="692.2" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.05%)</title><rect x="692.2" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (11 samples, 0.05%)</title><rect x="692.2" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (11 samples, 0.05%)</title><rect x="692.2" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.05%)</title><rect x="692.2" y="131.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.05%)</title><rect x="692.2" y="115.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (11 samples, 0.05%)</title><rect x="692.2" y="99.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (11 samples, 0.05%)</title><rect x="692.2" y="83.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (11 samples, 0.05%)</title><rect x="692.2" y="67.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (11 samples, 0.05%)</title><rect x="692.2" y="51.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="695.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (86 samples, 0.37%)</title><rect x="692.8" y="275.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.06%)</title><rect x="692.8" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (8 samples, 0.03%)</title><rect x="692.8" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (8 samples, 0.03%)</title><rect x="692.8" y="227.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="695.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.03%)</title><rect x="693.2" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (6 samples, 0.03%)</title><rect x="693.2" y="227.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="696.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (13 samples, 0.06%)</title><rect x="693.5" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (13 samples, 0.06%)</title><rect x="693.5" y="243.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="696.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.03%)</title><rect x="694.1" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.03%)</title><rect x="694.1" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.03%)</title><rect x="694.1" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.03%)</title><rect x="694.1" y="211.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="697.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (39 samples, 0.17%)</title><rect x="694.5" y="259.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (8 samples, 0.03%)</title><rect x="694.5" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.5" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (8 samples, 0.03%)</title><rect x="694.5" y="227.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="697.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (31 samples, 0.13%)</title><rect x="694.9" y="243.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="694.9" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="694.9" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (16 samples, 0.07%)</title><rect x="694.9" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (16 samples, 0.07%)</title><rect x="694.9" y="179.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="697.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (15 samples, 0.06%)</title><rect x="695.7" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.7" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (15 samples, 0.06%)</title><rect x="695.7" y="211.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="698.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (13 samples, 0.06%)</title><rect x="696.5" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (13 samples, 0.06%)</title><rect x="696.5" y="243.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="699.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (57 samples, 0.24%)</title><rect x="697.1" y="323.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (57 samples, 0.24%)</title><rect x="697.1" y="307.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (31 samples, 0.13%)</title><rect x="697.1" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (31 samples, 0.13%)</title><rect x="697.1" y="275.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (31 samples, 0.13%)</title><rect x="697.1" y="259.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (31 samples, 0.13%)</title><rect x="697.1" y="243.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.1" y="254.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.13%)</title><rect x="697.1" y="227.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="700.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (26 samples, 0.11%)</title><rect x="698.7" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.7" y="302.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="698.7" y="275.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="701.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (44 samples, 0.19%)</title><rect x="700.0" y="323.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (44 samples, 0.19%)</title><rect x="700.0" y="307.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (44 samples, 0.19%)</title><rect x="700.0" y="291.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (32 samples, 0.14%)</title><rect x="700.0" y="275.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.0" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (32 samples, 0.14%)</title><rect x="700.0" y="259.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.0" y="270.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.13%)</title><rect x="700.0" y="243.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="703.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.05%)</title><rect x="701.6" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.6" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.05%)</title><rect x="701.6" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="704.6" y="270.0"></text>
</g>
<g>
<title>[worker_2 tid=54522] (529 samples, 2.27%)</title><rect x="702.2" y="435.0" width="26.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="705.2" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (529 samples, 2.27%)</title><rect x="702.2" y="419.0" width="26.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.2" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (529 samples, 2.27%)</title><rect x="702.2" y="403.0" width="26.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (529 samples, 2.27%)</title><rect x="702.2" y="387.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.2" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.03%)</title><rect x="702.2" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.03%)</title><rect x="702.2" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.03%)</title><rect x="702.2" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.03%)</title><rect x="702.2" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.03%)</title><rect x="702.2" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="705.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (521 samples, 2.23%)</title><rect x="702.6" y="371.0" width="26.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.6" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (521 samples, 2.23%)</title><rect x="702.6" y="355.0" width="26.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.6" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (521 samples, 2.23%)</title><rect x="702.6" y="339.0" width="26.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.6" y="350.0">r..</text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="702.6" y="323.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="705.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.04%)</title><rect x="703.0" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.04%)</title><rect x="703.0" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.04%)</title><rect x="703.0" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.04%)</title><rect x="703.0" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.0" y="286.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="703.0" y="259.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="706.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.06%)</title><rect x="703.5" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.06%)</title><rect x="703.5" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="703.5" y="291.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="706.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (32 samples, 0.14%)</title><rect x="704.2" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.2" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.03%)</title><rect x="704.2" y="307.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="707.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.11%)</title><rect x="704.5" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.5" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="704.5" y="291.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="707.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.03%)</title><rect x="705.1" y="291.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="708.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="705.4" y="291.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="708.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (359 samples, 1.54%)</title><rect x="705.8" y="323.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (34 samples, 0.15%)</title><rect x="705.8" y="307.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (34 samples, 0.15%)</title><rect x="705.8" y="291.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (34 samples, 0.15%)</title><rect x="705.8" y="275.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (34 samples, 0.15%)</title><rect x="705.8" y="259.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 0.15%)</title><rect x="705.8" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.06%)</title><rect x="705.8" y="227.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.06%)</title><rect x="705.8" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.8" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.06%)</title><rect x="705.8" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.06%)</title><rect x="705.8" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.06%)</title><rect x="705.8" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.06%)</title><rect x="705.8" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (13 samples, 0.06%)</title><rect x="705.8" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.06%)</title><rect x="705.8" y="115.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.06%)</title><rect x="705.8" y="99.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.06%)</title><rect x="705.8" y="83.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (13 samples, 0.06%)</title><rect x="705.8" y="67.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (13 samples, 0.06%)</title><rect x="705.8" y="51.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (13 samples, 0.06%)</title><rect x="705.8" y="35.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="708.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (21 samples, 0.09%)</title><rect x="706.4" y="227.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (21 samples, 0.09%)</title><rect x="706.4" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.09%)</title><rect x="706.4" y="195.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.09%)</title><rect x="706.4" y="179.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="709.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (14 samples, 0.06%)</title><rect x="707.5" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (14 samples, 0.06%)</title><rect x="707.5" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (14 samples, 0.06%)</title><rect x="707.5" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (14 samples, 0.06%)</title><rect x="707.5" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (14 samples, 0.06%)</title><rect x="707.5" y="243.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.06%)</title><rect x="707.5" y="227.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.06%)</title><rect x="707.5" y="211.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="710.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (13 samples, 0.06%)</title><rect x="708.2" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (13 samples, 0.06%)</title><rect x="708.2" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.06%)</title><rect x="708.2" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.2" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.06%)</title><rect x="708.2" y="259.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="711.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (23 samples, 0.10%)</title><rect x="708.9" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (23 samples, 0.10%)</title><rect x="708.9" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.10%)</title><rect x="708.9" y="275.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="711.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (275 samples, 1.18%)</title><rect x="710.0" y="307.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.03%)</title><rect x="710.0" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.03%)</title><rect x="710.0" y="275.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="713.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (269 samples, 1.15%)</title><rect x="710.3" y="291.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.03%)</title><rect x="710.3" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.03%)</title><rect x="710.3" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="713.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (105 samples, 0.45%)</title><rect x="710.7" y="275.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (101 samples, 0.43%)</title><rect x="710.9" y="259.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.9" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.02%)</title><rect x="710.9" y="243.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="713.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.03%)</title><rect x="711.1" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.1" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.03%)</title><rect x="711.1" y="227.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="714.1" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.03%)</title><rect x="711.5" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="714.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (7 samples, 0.03%)</title><rect x="711.8" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="711.8" y="227.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="714.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (75 samples, 0.32%)</title><rect x="712.2" y="243.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (75 samples, 0.32%)</title><rect x="712.2" y="227.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (75 samples, 0.32%)</title><rect x="712.2" y="211.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (17 samples, 0.07%)</title><rect x="712.2" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (17 samples, 0.07%)</title><rect x="712.2" y="179.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (17 samples, 0.07%)</title><rect x="712.2" y="163.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (17 samples, 0.07%)</title><rect x="712.2" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.02%)</title><rect x="712.2" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.02%)</title><rect x="712.2" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.2" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.02%)</title><rect x="712.2" y="99.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="715.2" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.05%)</title><rect x="712.5" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (12 samples, 0.05%)</title><rect x="712.5" y="115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (12 samples, 0.05%)</title><rect x="712.5" y="99.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (12 samples, 0.05%)</title><rect x="712.5" y="83.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="715.5" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (58 samples, 0.25%)</title><rect x="713.1" y="195.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.1" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (14 samples, 0.06%)</title><rect x="713.1" y="179.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="716.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="713.8" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="713.8" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (11 samples, 0.05%)</title><rect x="714.1" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (11 samples, 0.05%)</title><rect x="714.1" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.1" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (11 samples, 0.05%)</title><rect x="714.1" y="147.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="717.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (26 samples, 0.11%)</title><rect x="714.7" y="179.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.11%)</title><rect x="714.7" y="163.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="717.7" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.04%)</title><rect x="716.0" y="275.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="719.0" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (8 samples, 0.03%)</title><rect x="716.5" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="716.5" y="259.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="719.5" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (11 samples, 0.05%)</title><rect x="716.9" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (11 samples, 0.05%)</title><rect x="716.9" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.05%)</title><rect x="716.9" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.9" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (11 samples, 0.05%)</title><rect x="716.9" y="227.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (11 samples, 0.05%)</title><rect x="716.9" y="211.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (11 samples, 0.05%)</title><rect x="716.9" y="195.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="719.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (15 samples, 0.06%)</title><rect x="717.7" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (15 samples, 0.06%)</title><rect x="717.7" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.7" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (15 samples, 0.06%)</title><rect x="717.7" y="243.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="720.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.06%)</title><rect x="718.4" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.4" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.04%)</title><rect x="718.4" y="259.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="721.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (96 samples, 0.41%)</title><rect x="719.1" y="275.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (28 samples, 0.12%)</title><rect x="719.1" y="259.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (9 samples, 0.04%)</title><rect x="719.1" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.1" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (9 samples, 0.04%)</title><rect x="719.1" y="227.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="722.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (19 samples, 0.08%)</title><rect x="719.5" y="243.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (19 samples, 0.08%)</title><rect x="719.5" y="227.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="722.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (19 samples, 0.08%)</title><rect x="720.7" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (19 samples, 0.08%)</title><rect x="720.7" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (19 samples, 0.08%)</title><rect x="720.7" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (19 samples, 0.08%)</title><rect x="720.7" y="211.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="723.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (25 samples, 0.11%)</title><rect x="721.6" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.6" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (6 samples, 0.03%)</title><rect x="721.6" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.6" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (6 samples, 0.03%)</title><rect x="721.6" y="227.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="724.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (19 samples, 0.08%)</title><rect x="721.9" y="243.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (15 samples, 0.06%)</title><rect x="722.1" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (15 samples, 0.06%)</title><rect x="722.1" y="211.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="725.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (21 samples, 0.09%)</title><rect x="722.9" y="259.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (21 samples, 0.09%)</title><rect x="722.9" y="243.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="725.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (59 samples, 0.25%)</title><rect x="723.9" y="323.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (59 samples, 0.25%)</title><rect x="723.9" y="307.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (45 samples, 0.19%)</title><rect x="723.9" y="291.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (45 samples, 0.19%)</title><rect x="723.9" y="275.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (45 samples, 0.19%)</title><rect x="723.9" y="259.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.19%)</title><rect x="723.9" y="243.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.9" y="254.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.19%)</title><rect x="723.9" y="227.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="726.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (14 samples, 0.06%)</title><rect x="726.2" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.2" y="302.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="726.2" y="275.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="729.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (41 samples, 0.18%)</title><rect x="726.9" y="323.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (41 samples, 0.18%)</title><rect x="726.9" y="307.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (41 samples, 0.18%)</title><rect x="726.9" y="291.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (28 samples, 0.12%)</title><rect x="726.9" y="275.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (28 samples, 0.12%)</title><rect x="726.9" y="259.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.9" y="270.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="726.9" y="243.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="729.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.06%)</title><rect x="728.3" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.3" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (13 samples, 0.06%)</title><rect x="728.3" y="259.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="731.3" y="270.0"></text>
</g>
<g>
<title>[worker_3 tid=54514] (768 samples, 3.29%)</title><rect x="729.0" y="435.0" width="38.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="732.0" y="446.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (768 samples, 3.29%)</title><rect x="729.0" y="419.0" width="38.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.0" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (768 samples, 3.29%)</title><rect x="729.0" y="403.0" width="38.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.0" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (768 samples, 3.29%)</title><rect x="729.0" y="387.0" width="38.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.0" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.02%)</title><rect x="729.0" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.02%)</title><rect x="729.0" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.02%)</title><rect x="729.0" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.02%)</title><rect x="729.0" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.02%)</title><rect x="729.0" y="307.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="732.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (763 samples, 3.27%)</title><rect x="729.3" y="371.0" width="38.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.3" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (763 samples, 3.27%)</title><rect x="729.3" y="355.0" width="38.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.3" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (763 samples, 3.27%)</title><rect x="729.3" y="339.0" width="38.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.3" y="350.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.04%)</title><rect x="729.4" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.04%)</title><rect x="729.4" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.04%)</title><rect x="729.4" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.04%)</title><rect x="729.4" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.4" y="286.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="729.4" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="732.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="729.8" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="729.8" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.03%)</title><rect x="729.8" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="732.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (8 samples, 0.03%)</title><rect x="730.2" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.02%)</title><rect x="730.4" y="307.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (111 samples, 0.48%)</title><rect x="730.6" y="323.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (13 samples, 0.06%)</title><rect x="730.6" y="307.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.06%)</title><rect x="730.6" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (13 samples, 0.06%)</title><rect x="730.6" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (13 samples, 0.06%)</title><rect x="730.6" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.06%)</title><rect x="730.6" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (12 samples, 0.05%)</title><rect x="730.7" y="227.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (12 samples, 0.05%)</title><rect x="730.7" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.05%)</title><rect x="730.7" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.05%)</title><rect x="730.7" y="179.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="733.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (7 samples, 0.03%)</title><rect x="731.6" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="731.6" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="731.6" y="275.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="734.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (84 samples, 0.36%)</title><rect x="732.0" y="307.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.03%)</title><rect x="732.0" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.03%)</title><rect x="732.0" y="275.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="735.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (78 samples, 0.33%)</title><rect x="732.3" y="291.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (33 samples, 0.14%)</title><rect x="732.4" y="275.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (33 samples, 0.14%)</title><rect x="732.4" y="259.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.4" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.11%)</title><rect x="732.8" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.11%)</title><rect x="732.8" y="227.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.11%)</title><rect x="732.8" y="211.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (23 samples, 0.10%)</title><rect x="732.9" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.03%)</title><rect x="732.9" y="179.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="735.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="733.3" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="733.3" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="733.7" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="733.7" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="736.7" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (6 samples, 0.03%)</title><rect x="734.5" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.03%)</title><rect x="734.5" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.03%)</title><rect x="734.5" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.5" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.03%)</title><rect x="734.5" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (6 samples, 0.03%)</title><rect x="734.5" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (6 samples, 0.03%)</title><rect x="734.5" y="195.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="737.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.03%)</title><rect x="734.8" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (22 samples, 0.09%)</title><rect x="735.1" y="275.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.03%)</title><rect x="735.1" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.02%)</title><rect x="735.2" y="243.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.02%)</title><rect x="735.2" y="227.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="738.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.03%)</title><rect x="735.5" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.03%)</title><rect x="735.5" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.03%)</title><rect x="735.5" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (8 samples, 0.03%)</title><rect x="735.5" y="211.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="738.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (6 samples, 0.03%)</title><rect x="735.9" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (25 samples, 0.11%)</title><rect x="736.2" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (25 samples, 0.11%)</title><rect x="736.2" y="307.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.06%)</title><rect x="736.2" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.06%)</title><rect x="736.2" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.06%)</title><rect x="736.2" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="736.2" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.2" y="254.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="736.2" y="227.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="739.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (11 samples, 0.05%)</title><rect x="736.9" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.9" y="302.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="736.9" y="275.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="739.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (581 samples, 2.49%)</title><rect x="737.5" y="323.0" width="29.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.5" y="334.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="737.5" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1860250540.invoke (6 samples, 0.03%)</title><rect x="737.5" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="737.5" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (575 samples, 2.47%)</title><rect x="737.8" y="307.0" width="29.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.8" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (575 samples, 2.47%)</title><rect x="737.8" y="291.0" width="29.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.8" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (525 samples, 2.25%)</title><rect x="737.8" y="275.0" width="26.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.8" y="286.0">o..</text>
</g>
<g>
<title>byte[] (278 samples, 1.19%)</title><rect x="737.8" y="259.0" width="14.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="740.8" y="270.0"></text>
</g>
<g>
<title>byte[] (247 samples, 1.06%)</title><rect x="751.9" y="259.0" width="12.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="754.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (41 samples, 0.18%)</title><rect x="764.4" y="275.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (36 samples, 0.15%)</title><rect x="764.5" y="259.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.15%)</title><rect x="764.5" y="243.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.15%)</title><rect x="764.5" y="227.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.5" y="238.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.11%)</title><rect x="764.5" y="211.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="767.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="765.7" y="211.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="768.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.03%)</title><rect x="766.5" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.03%)</title><rect x="766.5" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.5" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="766.5" y="243.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="769.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (19 samples, 0.08%)</title><rect x="766.9" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 0.08%)</title><rect x="766.9" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 0.08%)</title><rect x="766.9" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.06%)</title><rect x="766.9" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.06%)</title><rect x="766.9" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.9" y="270.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="766.9" y="243.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="769.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.02%)</title><rect x="767.6" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.6" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.02%)</title><rect x="767.6" y="259.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="770.6" y="270.0"></text>
</g>
<g>
<title>[worker_3 tid=54520] (557 samples, 2.39%)</title><rect x="767.9" y="435.0" width="28.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="770.9" y="446.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (557 samples, 2.39%)</title><rect x="767.9" y="419.0" width="28.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.9" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (557 samples, 2.39%)</title><rect x="767.9" y="403.0" width="28.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.9" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (557 samples, 2.39%)</title><rect x="767.9" y="387.0" width="28.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.9" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.03%)</title><rect x="767.9" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.03%)</title><rect x="767.9" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.03%)</title><rect x="767.9" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.03%)</title><rect x="767.9" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.03%)</title><rect x="767.9" y="307.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="770.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (551 samples, 2.36%)</title><rect x="768.2" y="371.0" width="27.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.2" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (551 samples, 2.36%)</title><rect x="768.2" y="355.0" width="27.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.2" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (551 samples, 2.36%)</title><rect x="768.2" y="339.0" width="27.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.2" y="350.0">r..</text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="768.2" y="323.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="771.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.07%)</title><rect x="769.0" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.07%)</title><rect x="769.0" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.07%)</title><rect x="769.0" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.07%)</title><rect x="769.0" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.0" y="286.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="769.0" y="259.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="772.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.09%)</title><rect x="769.8" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.09%)</title><rect x="769.8" y="307.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.09%)</title><rect x="769.8" y="291.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="772.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (29 samples, 0.12%)</title><rect x="770.9" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.9" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.03%)</title><rect x="770.9" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="773.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.10%)</title><rect x="771.2" y="307.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.2" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="771.2" y="291.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="774.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.03%)</title><rect x="771.8" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="774.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (364 samples, 1.56%)</title><rect x="772.4" y="323.0" width="18.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (27 samples, 0.12%)</title><rect x="772.4" y="307.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (27 samples, 0.12%)</title><rect x="772.4" y="291.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (27 samples, 0.12%)</title><rect x="772.4" y="275.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (27 samples, 0.12%)</title><rect x="772.4" y="259.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.12%)</title><rect x="772.4" y="243.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (26 samples, 0.11%)</title><rect x="772.4" y="227.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (26 samples, 0.11%)</title><rect x="772.4" y="211.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (26 samples, 0.11%)</title><rect x="772.4" y="195.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.11%)</title><rect x="772.4" y="179.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="775.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (13 samples, 0.06%)</title><rect x="773.7" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (13 samples, 0.06%)</title><rect x="773.7" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (13 samples, 0.06%)</title><rect x="773.7" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (13 samples, 0.06%)</title><rect x="773.7" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (13 samples, 0.06%)</title><rect x="773.7" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.06%)</title><rect x="773.7" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.7" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.06%)</title><rect x="773.7" y="211.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="776.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (28 samples, 0.12%)</title><rect x="774.4" y="307.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (28 samples, 0.12%)</title><rect x="774.4" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.12%)</title><rect x="774.4" y="275.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.12%)</title><rect x="774.4" y="259.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="777.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (8 samples, 0.03%)</title><rect x="775.8" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="775.8" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="775.8" y="275.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="778.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (288 samples, 1.24%)</title><rect x="776.2" y="307.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.06%)</title><rect x="776.2" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.06%)</title><rect x="776.2" y="275.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="779.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (274 samples, 1.18%)</title><rect x="776.9" y="291.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (11 samples, 0.05%)</title><rect x="776.9" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.9" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (11 samples, 0.05%)</title><rect x="776.9" y="259.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="779.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (124 samples, 0.53%)</title><rect x="777.5" y="275.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.5" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (7 samples, 0.03%)</title><rect x="777.5" y="259.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="780.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (117 samples, 0.50%)</title><rect x="777.8" y="259.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.8" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.03%)</title><rect x="777.8" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="780.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (9 samples, 0.04%)</title><rect x="778.1" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.1" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (9 samples, 0.04%)</title><rect x="778.1" y="227.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="781.1" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (13 samples, 0.06%)</title><rect x="778.6" y="243.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="781.6" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (86 samples, 0.37%)</title><rect x="779.4" y="243.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (86 samples, 0.37%)</title><rect x="779.4" y="227.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (86 samples, 0.37%)</title><rect x="779.4" y="211.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.06%)</title><rect x="779.4" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (14 samples, 0.06%)</title><rect x="779.4" y="179.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.06%)</title><rect x="779.4" y="163.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.06%)</title><rect x="779.4" y="147.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.03%)</title><rect x="779.4" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.03%)</title><rect x="779.4" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.4" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (8 samples, 0.03%)</title><rect x="779.4" y="99.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="782.4" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="779.8" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="779.8" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="779.8" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="779.8" y="83.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="782.8" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (72 samples, 0.31%)</title><rect x="780.1" y="195.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.1" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (13 samples, 0.06%)</title><rect x="780.1" y="179.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="783.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.09%)</title><rect x="780.8" y="179.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.09%)</title><rect x="780.8" y="163.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.get$Lambda (18 samples, 0.08%)</title><rect x="780.9" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.9" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (18 samples, 0.08%)</title><rect x="780.9" y="131.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="783.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.04%)</title><rect x="781.8" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (9 samples, 0.04%)</title><rect x="781.8" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.8" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (9 samples, 0.04%)</title><rect x="781.8" y="147.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="784.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (30 samples, 0.13%)</title><rect x="782.2" y="179.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.13%)</title><rect x="782.2" y="163.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="785.2" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.04%)</title><rect x="783.8" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="786.8" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.03%)</title><rect x="784.2" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="784.2" y="259.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="787.2" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (8 samples, 0.03%)</title><rect x="784.6" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.03%)</title><rect x="784.6" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (8 samples, 0.03%)</title><rect x="784.6" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.6" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.03%)</title><rect x="784.6" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (8 samples, 0.03%)</title><rect x="784.6" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (8 samples, 0.03%)</title><rect x="784.6" y="195.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="787.6" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (6 samples, 0.03%)</title><rect x="785.2" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (6 samples, 0.03%)</title><rect x="785.2" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.2" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (6 samples, 0.03%)</title><rect x="785.2" y="243.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="788.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.06%)</title><rect x="785.5" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.04%)</title><rect x="785.7" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.04%)</title><rect x="785.7" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.04%)</title><rect x="785.7" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.04%)</title><rect x="785.7" y="211.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10 samples, 0.04%)</title><rect x="785.7" y="195.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10 samples, 0.04%)</title><rect x="785.7" y="179.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.04%)</title><rect x="785.7" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (10 samples, 0.04%)</title><rect x="785.7" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (10 samples, 0.04%)</title><rect x="785.7" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.04%)</title><rect x="785.7" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.04%)</title><rect x="785.7" y="99.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (10 samples, 0.04%)</title><rect x="785.7" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (10 samples, 0.04%)</title><rect x="785.7" y="67.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (10 samples, 0.04%)</title><rect x="785.7" y="51.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="788.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (91 samples, 0.39%)</title><rect x="786.2" y="275.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.09%)</title><rect x="786.2" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (10 samples, 0.04%)</title><rect x="786.2" y="243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (10 samples, 0.04%)</title><rect x="786.2" y="227.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="789.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.05%)</title><rect x="786.7" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.05%)</title><rect x="786.7" y="227.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="789.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="787.5" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="787.5" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="787.5" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (15 samples, 0.06%)</title><rect x="787.5" y="211.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="790.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (37 samples, 0.16%)</title><rect x="788.2" y="259.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.2" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (17 samples, 0.07%)</title><rect x="788.2" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.2" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (17 samples, 0.07%)</title><rect x="788.2" y="227.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="791.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (20 samples, 0.09%)</title><rect x="789.1" y="243.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="789.1" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="789.1" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (7 samples, 0.03%)</title><rect x="789.1" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.1" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (7 samples, 0.03%)</title><rect x="789.1" y="179.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="792.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (13 samples, 0.06%)</title><rect x="789.4" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (13 samples, 0.06%)</title><rect x="789.4" y="211.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="792.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (14 samples, 0.06%)</title><rect x="790.1" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (14 samples, 0.06%)</title><rect x="790.1" y="243.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="793.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (65 samples, 0.28%)</title><rect x="790.8" y="323.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (65 samples, 0.28%)</title><rect x="790.8" y="307.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (48 samples, 0.21%)</title><rect x="790.8" y="291.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (48 samples, 0.21%)</title><rect x="790.8" y="275.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (48 samples, 0.21%)</title><rect x="790.8" y="259.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.21%)</title><rect x="790.8" y="243.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.8" y="254.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.21%)</title><rect x="790.8" y="227.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="793.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (17 samples, 0.07%)</title><rect x="793.2" y="291.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.2" y="302.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="793.2" y="275.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="796.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (39 samples, 0.17%)</title><rect x="794.1" y="323.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 0.17%)</title><rect x="794.1" y="307.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (39 samples, 0.17%)</title><rect x="794.1" y="291.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 0.09%)</title><rect x="794.1" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (22 samples, 0.09%)</title><rect x="794.1" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.1" y="270.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="794.1" y="243.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="797.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.07%)</title><rect x="795.2" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.2" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (17 samples, 0.07%)</title><rect x="795.2" y="259.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="798.2" y="270.0"></text>
</g>
<g>
<title>[worker_3 tid=54525] (512 samples, 2.20%)</title><rect x="796.1" y="435.0" width="25.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="799.1" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (512 samples, 2.20%)</title><rect x="796.1" y="419.0" width="25.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (512 samples, 2.20%)</title><rect x="796.1" y="403.0" width="25.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (512 samples, 2.20%)</title><rect x="796.1" y="387.0" width="25.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.06%)</title><rect x="796.1" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 0.06%)</title><rect x="796.1" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.06%)</title><rect x="796.1" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.06%)</title><rect x="796.1" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.06%)</title><rect x="796.1" y="307.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="799.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (497 samples, 2.13%)</title><rect x="796.8" y="371.0" width="25.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.8" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (497 samples, 2.13%)</title><rect x="796.8" y="355.0" width="25.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="799.8" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (497 samples, 2.13%)</title><rect x="796.8" y="339.0" width="25.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.8" y="350.0">r..</text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="796.8" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="799.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.06%)</title><rect x="797.2" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.06%)</title><rect x="797.2" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.06%)</title><rect x="797.2" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.06%)</title><rect x="797.2" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="800.2" y="286.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="797.2" y="259.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="800.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.06%)</title><rect x="797.8" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.06%)</title><rect x="797.8" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="797.8" y="291.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="800.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (36 samples, 0.15%)</title><rect x="798.5" y="323.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.5" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.03%)</title><rect x="798.5" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="801.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (29 samples, 0.12%)</title><rect x="798.8" y="307.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.8" y="318.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="798.8" y="291.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="801.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.04%)</title><rect x="799.4" y="291.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="802.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="799.9" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="802.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (349 samples, 1.50%)</title><rect x="800.3" y="323.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (35 samples, 0.15%)</title><rect x="800.3" y="307.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (35 samples, 0.15%)</title><rect x="800.3" y="291.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (35 samples, 0.15%)</title><rect x="800.3" y="275.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (35 samples, 0.15%)</title><rect x="800.3" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (35 samples, 0.15%)</title><rect x="800.3" y="243.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.03%)</title><rect x="800.3" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.03%)</title><rect x="800.3" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.3" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.03%)</title><rect x="800.3" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.03%)</title><rect x="800.3" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.03%)</title><rect x="800.3" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.03%)</title><rect x="800.3" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (8 samples, 0.03%)</title><rect x="800.3" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.03%)</title><rect x="800.3" y="115.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.03%)</title><rect x="800.3" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.03%)</title><rect x="800.3" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (8 samples, 0.03%)</title><rect x="800.3" y="67.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (8 samples, 0.03%)</title><rect x="800.3" y="51.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (8 samples, 0.03%)</title><rect x="800.3" y="35.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="803.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (27 samples, 0.12%)</title><rect x="800.7" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (27 samples, 0.12%)</title><rect x="800.7" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (27 samples, 0.12%)</title><rect x="800.7" y="195.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.12%)</title><rect x="800.7" y="179.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="803.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (10 samples, 0.04%)</title><rect x="802.1" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (10 samples, 0.04%)</title><rect x="802.1" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (10 samples, 0.04%)</title><rect x="802.1" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (10 samples, 0.04%)</title><rect x="802.1" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (10 samples, 0.04%)</title><rect x="802.1" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.04%)</title><rect x="802.1" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.04%)</title><rect x="802.1" y="211.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="805.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (19 samples, 0.08%)</title><rect x="802.6" y="307.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (19 samples, 0.08%)</title><rect x="802.6" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (19 samples, 0.08%)</title><rect x="802.6" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.08%)</title><rect x="802.6" y="259.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="805.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (16 samples, 0.07%)</title><rect x="803.5" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.07%)</title><rect x="803.5" y="291.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.07%)</title><rect x="803.5" y="275.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="806.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (269 samples, 1.15%)</title><rect x="804.4" y="307.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (16 samples, 0.07%)</title><rect x="804.4" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.07%)</title><rect x="804.4" y="275.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="807.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (253 samples, 1.09%)</title><rect x="805.2" y="291.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (13 samples, 0.06%)</title><rect x="805.2" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (13 samples, 0.06%)</title><rect x="805.2" y="259.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="808.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (100 samples, 0.43%)</title><rect x="805.8" y="275.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (98 samples, 0.42%)</title><rect x="805.9" y="259.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.9" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.03%)</title><rect x="805.9" y="243.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="808.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.03%)</title><rect x="806.2" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.2" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.03%)</title><rect x="806.2" y="227.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="809.2" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (10 samples, 0.04%)</title><rect x="806.5" y="243.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="809.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (8 samples, 0.03%)</title><rect x="807.0" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="807.0" y="227.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="810.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (68 samples, 0.29%)</title><rect x="807.4" y="243.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (68 samples, 0.29%)</title><rect x="807.4" y="227.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (68 samples, 0.29%)</title><rect x="807.4" y="211.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.05%)</title><rect x="807.4" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (12 samples, 0.05%)</title><rect x="807.4" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.05%)</title><rect x="807.4" y="163.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.05%)</title><rect x="807.4" y="147.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.03%)</title><rect x="807.6" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (8 samples, 0.03%)</title><rect x="807.6" y="115.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (8 samples, 0.03%)</title><rect x="807.6" y="99.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.6" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (8 samples, 0.03%)</title><rect x="807.6" y="83.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="810.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (56 samples, 0.24%)</title><rect x="808.1" y="195.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.1" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (15 samples, 0.06%)</title><rect x="808.1" y="179.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="811.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="808.8" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="808.8" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (8 samples, 0.03%)</title><rect x="808.8" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.8" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (8 samples, 0.03%)</title><rect x="808.8" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="811.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.03%)</title><rect x="809.4" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.03%)</title><rect x="809.4" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.4" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.03%)</title><rect x="809.4" y="147.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="812.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (23 samples, 0.10%)</title><rect x="809.7" y="179.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.10%)</title><rect x="809.7" y="163.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="812.7" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (14 samples, 0.06%)</title><rect x="811.2" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="814.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (14 samples, 0.06%)</title><rect x="811.2" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (14 samples, 0.06%)</title><rect x="811.2" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.2" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (14 samples, 0.06%)</title><rect x="811.2" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (14 samples, 0.06%)</title><rect x="811.2" y="211.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (14 samples, 0.06%)</title><rect x="811.2" y="195.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="814.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.values (6 samples, 0.03%)</title><rect x="812.0" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.0" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableCollection (6 samples, 0.03%)</title><rect x="812.0" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.0" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection (6 samples, 0.03%)</title><rect x="812.0" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="815.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (8 samples, 0.03%)</title><rect x="812.3" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (8 samples, 0.03%)</title><rect x="812.3" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.3" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (8 samples, 0.03%)</title><rect x="812.3" y="243.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="815.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.05%)</title><rect x="812.7" y="275.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.03%)</title><rect x="812.9" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.03%)</title><rect x="812.9" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.03%)</title><rect x="812.9" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.9" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.03%)</title><rect x="812.9" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.03%)</title><rect x="812.9" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.03%)</title><rect x="812.9" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.03%)</title><rect x="812.9" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (8 samples, 0.03%)</title><rect x="812.9" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.03%)</title><rect x="812.9" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.03%)</title><rect x="812.9" y="115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.03%)</title><rect x="812.9" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (8 samples, 0.03%)</title><rect x="812.9" y="83.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (8 samples, 0.03%)</title><rect x="812.9" y="67.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (8 samples, 0.03%)</title><rect x="812.9" y="51.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="815.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (93 samples, 0.40%)</title><rect x="813.3" y="275.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (24 samples, 0.10%)</title><rect x="813.3" y="259.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (10 samples, 0.04%)</title><rect x="813.3" y="243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (10 samples, 0.04%)</title><rect x="813.3" y="227.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="816.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.06%)</title><rect x="813.8" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.06%)</title><rect x="813.8" y="227.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="816.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="814.7" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="814.7" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="814.7" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (15 samples, 0.06%)</title><rect x="814.7" y="211.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="817.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (31 samples, 0.13%)</title><rect x="815.4" y="259.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.4" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (9 samples, 0.04%)</title><rect x="815.4" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.4" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (9 samples, 0.04%)</title><rect x="815.4" y="227.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="818.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (22 samples, 0.09%)</title><rect x="815.9" y="243.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="815.9" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="815.9" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (10 samples, 0.04%)</title><rect x="815.9" y="195.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (10 samples, 0.04%)</title><rect x="815.9" y="179.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="818.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (12 samples, 0.05%)</title><rect x="816.4" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (12 samples, 0.05%)</title><rect x="816.4" y="211.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="819.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (19 samples, 0.08%)</title><rect x="817.0" y="259.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.0" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (19 samples, 0.08%)</title><rect x="817.0" y="243.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="820.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (50 samples, 0.21%)</title><rect x="818.0" y="323.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (50 samples, 0.21%)</title><rect x="818.0" y="307.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (31 samples, 0.13%)</title><rect x="818.0" y="291.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (31 samples, 0.13%)</title><rect x="818.0" y="275.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (31 samples, 0.13%)</title><rect x="818.0" y="259.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (31 samples, 0.13%)</title><rect x="818.0" y="243.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.0" y="254.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.13%)</title><rect x="818.0" y="227.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="821.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (19 samples, 0.08%)</title><rect x="819.5" y="291.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.5" y="302.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="819.5" y="275.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="822.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (29 samples, 0.12%)</title><rect x="820.5" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (29 samples, 0.12%)</title><rect x="820.5" y="307.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 0.12%)</title><rect x="820.5" y="291.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.09%)</title><rect x="820.5" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (20 samples, 0.09%)</title><rect x="820.5" y="259.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.5" y="270.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.09%)</title><rect x="820.5" y="243.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="823.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.04%)</title><rect x="821.5" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.5" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.04%)</title><rect x="821.5" y="259.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="824.5" y="270.0"></text>
</g>
<g>
<title>[worker_4 tid=54512] (780 samples, 3.35%)</title><rect x="822.0" y="435.0" width="39.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="825.0" y="446.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (780 samples, 3.35%)</title><rect x="822.0" y="419.0" width="39.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.0" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (780 samples, 3.35%)</title><rect x="822.0" y="403.0" width="39.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.0" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (780 samples, 3.35%)</title><rect x="822.0" y="387.0" width="39.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.0" y="398.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (776 samples, 3.33%)</title><rect x="822.2" y="371.0" width="39.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.2" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (776 samples, 3.33%)</title><rect x="822.2" y="355.0" width="39.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.2" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (776 samples, 3.33%)</title><rect x="822.2" y="339.0" width="39.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.2" y="350.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.04%)</title><rect x="822.2" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.04%)</title><rect x="822.2" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.04%)</title><rect x="822.2" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.04%)</title><rect x="822.2" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.2" y="286.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="822.2" y="259.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="825.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.03%)</title><rect x="822.7" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.03%)</title><rect x="822.7" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.03%)</title><rect x="822.7" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="825.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (9 samples, 0.04%)</title><rect x="823.0" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.03%)</title><rect x="823.2" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (90 samples, 0.39%)</title><rect x="823.5" y="323.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (79 samples, 0.34%)</title><rect x="824.0" y="307.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (77 samples, 0.33%)</title><rect x="824.1" y="291.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (30 samples, 0.13%)</title><rect x="824.2" y="275.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (28 samples, 0.12%)</title><rect x="824.3" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.3" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.09%)</title><rect x="824.7" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.09%)</title><rect x="824.7" y="227.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.09%)</title><rect x="824.7" y="211.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.03%)</title><rect x="824.7" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (8 samples, 0.03%)</title><rect x="824.7" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.03%)</title><rect x="824.7" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.03%)</title><rect x="824.7" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (12 samples, 0.05%)</title><rect x="825.1" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="825.4" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.4" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="825.4" y="163.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="828.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (34 samples, 0.15%)</title><rect x="826.3" y="275.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.05%)</title><rect x="826.3" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.03%)</title><rect x="826.3" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.03%)</title><rect x="826.3" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="829.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.02%)</title><rect x="826.6" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.02%)</title><rect x="826.6" y="227.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="829.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="827.0" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="827.0" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="827.0" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.03%)</title><rect x="827.0" y="211.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="830.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (8 samples, 0.03%)</title><rect x="827.3" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (6 samples, 0.03%)</title><rect x="827.4" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (5 samples, 0.02%)</title><rect x="827.4" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (5 samples, 0.02%)</title><rect x="827.4" y="211.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="830.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (7 samples, 0.03%)</title><rect x="827.7" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.7" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (7 samples, 0.03%)</title><rect x="827.7" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="830.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (26 samples, 0.11%)</title><rect x="828.0" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (26 samples, 0.11%)</title><rect x="828.0" y="307.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.08%)</title><rect x="828.0" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.08%)</title><rect x="828.0" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.08%)</title><rect x="828.0" y="259.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.08%)</title><rect x="828.0" y="243.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.0" y="254.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="828.0" y="227.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="831.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (7 samples, 0.03%)</title><rect x="829.0" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.0" y="302.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="829.0" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="832.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (608 samples, 2.61%)</title><rect x="829.4" y="323.0" width="30.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.4" y="334.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="829.4" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1860250540.invoke (7 samples, 0.03%)</title><rect x="829.4" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="829.4" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.03%)</title><rect x="829.4" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.03%)</title><rect x="829.4" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.4" y="254.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="829.4" y="227.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="832.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (601 samples, 2.58%)</title><rect x="829.7" y="307.0" width="30.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.7" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (601 samples, 2.58%)</title><rect x="829.7" y="291.0" width="30.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.7" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (535 samples, 2.29%)</title><rect x="829.8" y="275.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.8" y="286.0">o..</text>
</g>
<g>
<title>byte[] (277 samples, 1.19%)</title><rect x="829.8" y="259.0" width="14.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="832.8" y="270.0"></text>
</g>
<g>
<title>byte[] (258 samples, 1.11%)</title><rect x="843.8" y="259.0" width="13.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="846.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (51 samples, 0.22%)</title><rect x="856.8" y="275.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (42 samples, 0.18%)</title><rect x="857.0" y="259.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.0" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (42 samples, 0.18%)</title><rect x="857.0" y="243.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (42 samples, 0.18%)</title><rect x="857.0" y="227.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.0" y="238.0"></text>
</g>
<g>
<title>char[] (32 samples, 0.14%)</title><rect x="857.0" y="211.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="860.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.03%)</title><rect x="858.9" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.03%)</title><rect x="858.9" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.03%)</title><rect x="858.9" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.9" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="858.9" y="163.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="861.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (13 samples, 0.06%)</title><rect x="859.4" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.4" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.06%)</title><rect x="859.4" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.4" y="270.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="859.4" y="243.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="862.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (26 samples, 0.11%)</title><rect x="860.1" y="323.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 0.11%)</title><rect x="860.1" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 0.11%)</title><rect x="860.1" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="863.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.08%)</title><rect x="860.1" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.08%)</title><rect x="860.1" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="863.1" y="270.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="860.1" y="243.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="863.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.03%)</title><rect x="861.1" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.1" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.03%)</title><rect x="861.1" y="259.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="864.1" y="270.0"></text>
</g>
<g>
<title>[worker_4 tid=54521] (546 samples, 2.34%)</title><rect x="861.4" y="435.0" width="27.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="864.4" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (546 samples, 2.34%)</title><rect x="861.4" y="419.0" width="27.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.4" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (546 samples, 2.34%)</title><rect x="861.4" y="403.0" width="27.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.4" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (546 samples, 2.34%)</title><rect x="861.4" y="387.0" width="27.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.4" y="398.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (542 samples, 2.32%)</title><rect x="861.6" y="371.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.6" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (542 samples, 2.32%)</title><rect x="861.6" y="355.0" width="27.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="864.6" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (542 samples, 2.32%)</title><rect x="861.6" y="339.0" width="27.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.6" y="350.0">r..</text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="861.6" y="323.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="864.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (18 samples, 0.08%)</title><rect x="862.2" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (18 samples, 0.08%)</title><rect x="862.2" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (18 samples, 0.08%)</title><rect x="862.2" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.08%)</title><rect x="862.2" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.2" y="286.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.08%)</title><rect x="862.2" y="259.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="865.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.06%)</title><rect x="863.1" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="866.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.06%)</title><rect x="863.1" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="863.1" y="291.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="866.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (43 samples, 0.18%)</title><rect x="863.8" y="323.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.8" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.03%)</title><rect x="863.8" y="307.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="866.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (36 samples, 0.15%)</title><rect x="864.1" y="307.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="867.1" y="318.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.09%)</title><rect x="864.1" y="291.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="867.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.05%)</title><rect x="865.2" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="868.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (361 samples, 1.55%)</title><rect x="866.0" y="323.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (29 samples, 0.12%)</title><rect x="866.0" y="307.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="869.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 0.12%)</title><rect x="866.0" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="869.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 0.12%)</title><rect x="866.0" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="869.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 0.12%)</title><rect x="866.0" y="259.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (29 samples, 0.12%)</title><rect x="866.0" y="243.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (26 samples, 0.11%)</title><rect x="866.1" y="227.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (26 samples, 0.11%)</title><rect x="866.1" y="211.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (26 samples, 0.11%)</title><rect x="866.1" y="195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.11%)</title><rect x="866.1" y="179.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="869.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.03%)</title><rect x="867.4" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (8 samples, 0.03%)</title><rect x="867.4" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (8 samples, 0.03%)</title><rect x="867.4" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (8 samples, 0.03%)</title><rect x="867.4" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (8 samples, 0.03%)</title><rect x="867.4" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="870.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="867.4" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="867.4" y="211.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="870.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (29 samples, 0.12%)</title><rect x="867.8" y="307.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.12%)</title><rect x="867.8" y="291.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="870.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.12%)</title><rect x="867.8" y="275.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.12%)</title><rect x="867.8" y="259.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="870.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (15 samples, 0.06%)</title><rect x="869.3" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.06%)</title><rect x="869.3" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.06%)</title><rect x="869.3" y="275.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="872.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (280 samples, 1.20%)</title><rect x="870.0" y="307.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.04%)</title><rect x="870.0" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="870.0" y="275.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="873.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (271 samples, 1.16%)</title><rect x="870.5" y="291.0" width="13.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (16 samples, 0.07%)</title><rect x="870.5" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.5" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (16 samples, 0.07%)</title><rect x="870.5" y="259.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="873.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (101 samples, 0.43%)</title><rect x="871.3" y="275.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="874.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (101 samples, 0.43%)</title><rect x="871.3" y="259.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.3" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (11 samples, 0.05%)</title><rect x="871.3" y="243.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="874.3" y="254.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (9 samples, 0.04%)</title><rect x="872.0" y="243.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="875.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.02%)</title><rect x="872.5" y="243.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="872.5" y="227.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="875.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (73 samples, 0.31%)</title><rect x="872.7" y="243.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (73 samples, 0.31%)</title><rect x="872.7" y="227.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (73 samples, 0.31%)</title><rect x="872.7" y="211.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (15 samples, 0.06%)</title><rect x="872.7" y="195.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (15 samples, 0.06%)</title><rect x="872.7" y="179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (15 samples, 0.06%)</title><rect x="872.7" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (15 samples, 0.06%)</title><rect x="872.7" y="147.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.03%)</title><rect x="872.7" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.03%)</title><rect x="872.7" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.7" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (8 samples, 0.03%)</title><rect x="872.7" y="99.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="875.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.03%)</title><rect x="873.1" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (7 samples, 0.03%)</title><rect x="873.1" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (7 samples, 0.03%)</title><rect x="873.1" y="99.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.1" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (7 samples, 0.03%)</title><rect x="873.1" y="83.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="876.1" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (58 samples, 0.25%)</title><rect x="873.5" y="195.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.03%)</title><rect x="873.5" y="179.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="876.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="873.8" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="873.8" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (8 samples, 0.03%)</title><rect x="873.8" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.8" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (8 samples, 0.03%)</title><rect x="873.8" y="131.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="876.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.04%)</title><rect x="874.5" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (9 samples, 0.04%)</title><rect x="874.5" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.5" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (9 samples, 0.04%)</title><rect x="874.5" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="877.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (30 samples, 0.13%)</title><rect x="874.9" y="179.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.9" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.13%)</title><rect x="874.9" y="163.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="877.9" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (16 samples, 0.07%)</title><rect x="876.6" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (16 samples, 0.07%)</title><rect x="876.6" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (16 samples, 0.07%)</title><rect x="876.6" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="879.6" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (16 samples, 0.07%)</title><rect x="876.6" y="227.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (16 samples, 0.07%)</title><rect x="876.6" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (16 samples, 0.07%)</title><rect x="876.6" y="195.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="879.6" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (8 samples, 0.03%)</title><rect x="877.6" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="880.6" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (8 samples, 0.03%)</title><rect x="877.6" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.6" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (8 samples, 0.03%)</title><rect x="877.6" y="243.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="880.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.07%)</title><rect x="878.1" y="275.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.05%)</title><rect x="878.3" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.05%)</title><rect x="878.3" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.05%)</title><rect x="878.3" y="227.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.3" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.05%)</title><rect x="878.3" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.05%)</title><rect x="878.3" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.05%)</title><rect x="878.3" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.05%)</title><rect x="878.3" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (12 samples, 0.05%)</title><rect x="878.3" y="147.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.05%)</title><rect x="878.3" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.05%)</title><rect x="878.3" y="115.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.05%)</title><rect x="878.3" y="99.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (12 samples, 0.05%)</title><rect x="878.3" y="83.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (12 samples, 0.05%)</title><rect x="878.3" y="67.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (12 samples, 0.05%)</title><rect x="878.3" y="51.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="881.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (105 samples, 0.45%)</title><rect x="878.9" y="275.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (45 samples, 0.19%)</title><rect x="878.9" y="259.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (9 samples, 0.04%)</title><rect x="878.9" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.9" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (9 samples, 0.04%)</title><rect x="878.9" y="227.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="881.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (36 samples, 0.15%)</title><rect x="879.4" y="243.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (36 samples, 0.15%)</title><rect x="879.4" y="227.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="882.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (8 samples, 0.03%)</title><rect x="881.2" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (8 samples, 0.03%)</title><rect x="881.2" y="243.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="884.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.06%)</title><rect x="881.6" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.06%)</title><rect x="881.6" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.06%)</title><rect x="881.6" y="227.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (13 samples, 0.06%)</title><rect x="881.6" y="211.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="884.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (23 samples, 0.10%)</title><rect x="882.2" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (20 samples, 0.09%)</title><rect x="882.4" y="243.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="882.4" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="882.4" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (5 samples, 0.02%)</title><rect x="882.4" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (5 samples, 0.02%)</title><rect x="882.4" y="179.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="885.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (15 samples, 0.06%)</title><rect x="882.7" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.7" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (15 samples, 0.06%)</title><rect x="882.7" y="211.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="885.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (16 samples, 0.07%)</title><rect x="883.4" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (16 samples, 0.07%)</title><rect x="883.4" y="243.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="886.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (70 samples, 0.30%)</title><rect x="884.2" y="323.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (70 samples, 0.30%)</title><rect x="884.2" y="307.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (43 samples, 0.18%)</title><rect x="884.2" y="291.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (43 samples, 0.18%)</title><rect x="884.2" y="275.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (43 samples, 0.18%)</title><rect x="884.2" y="259.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 0.18%)</title><rect x="884.2" y="243.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.2" y="254.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.18%)</title><rect x="884.2" y="227.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="887.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (27 samples, 0.12%)</title><rect x="886.4" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.4" y="302.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.12%)</title><rect x="886.4" y="275.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="889.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (26 samples, 0.11%)</title><rect x="887.8" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 0.11%)</title><rect x="887.8" y="307.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 0.11%)</title><rect x="887.8" y="291.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.09%)</title><rect x="887.8" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21 samples, 0.09%)</title><rect x="887.8" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.8" y="270.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="887.8" y="243.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="890.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.02%)</title><rect x="888.8" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.8" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.02%)</title><rect x="888.8" y="259.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="891.8" y="270.0"></text>
</g>
<g>
<title>[worker_4 tid=54527] (527 samples, 2.26%)</title><rect x="889.1" y="435.0" width="26.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="892.1" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (527 samples, 2.26%)</title><rect x="889.1" y="419.0" width="26.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (527 samples, 2.26%)</title><rect x="889.1" y="403.0" width="26.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (527 samples, 2.26%)</title><rect x="889.1" y="387.0" width="26.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.06%)</title><rect x="889.1" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 0.06%)</title><rect x="889.1" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.06%)</title><rect x="889.1" y="339.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.06%)</title><rect x="889.1" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.06%)</title><rect x="889.1" y="307.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="892.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (512 samples, 2.20%)</title><rect x="889.8" y="371.0" width="25.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.8" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (512 samples, 2.20%)</title><rect x="889.8" y="355.0" width="25.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.8" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (512 samples, 2.20%)</title><rect x="889.8" y="339.0" width="25.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.8" y="350.0">r..</text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="889.8" y="323.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="892.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.05%)</title><rect x="890.5" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.05%)</title><rect x="890.5" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.05%)</title><rect x="890.5" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.05%)</title><rect x="890.5" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.5" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="890.5" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="893.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.07%)</title><rect x="891.1" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.07%)</title><rect x="891.1" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.07%)</title><rect x="891.1" y="291.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="894.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (37 samples, 0.16%)</title><rect x="891.9" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.9" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.02%)</title><rect x="891.9" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="894.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (32 samples, 0.14%)</title><rect x="892.2" y="307.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.2" y="318.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="892.2" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="895.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.04%)</title><rect x="893.0" y="291.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="896.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="893.5" y="291.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="896.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (328 samples, 1.41%)</title><rect x="893.8" y="323.0" width="16.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (38 samples, 0.16%)</title><rect x="893.8" y="307.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (38 samples, 0.16%)</title><rect x="893.8" y="291.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (38 samples, 0.16%)</title><rect x="893.8" y="275.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="896.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (38 samples, 0.16%)</title><rect x="893.8" y="259.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (38 samples, 0.16%)</title><rect x="893.8" y="243.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (35 samples, 0.15%)</title><rect x="893.9" y="227.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (35 samples, 0.15%)</title><rect x="893.9" y="211.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (35 samples, 0.15%)</title><rect x="893.9" y="195.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.15%)</title><rect x="893.9" y="179.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="896.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (13 samples, 0.06%)</title><rect x="895.7" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (13 samples, 0.06%)</title><rect x="895.7" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (13 samples, 0.06%)</title><rect x="895.7" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (13 samples, 0.06%)</title><rect x="895.7" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (13 samples, 0.06%)</title><rect x="895.7" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.06%)</title><rect x="895.7" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.7" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.06%)</title><rect x="895.7" y="211.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="898.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (11 samples, 0.05%)</title><rect x="896.4" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.05%)</title><rect x="896.4" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.05%)</title><rect x="896.4" y="275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.05%)</title><rect x="896.4" y="259.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="899.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (7 samples, 0.03%)</title><rect x="896.9" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="896.9" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="896.9" y="275.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="899.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (259 samples, 1.11%)</title><rect x="897.3" y="307.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (29 samples, 0.12%)</title><rect x="897.3" y="291.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.12%)</title><rect x="897.3" y="275.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="900.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (230 samples, 0.99%)</title><rect x="898.7" y="291.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (85 samples, 0.36%)</title><rect x="898.9" y="275.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.9" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (7 samples, 0.03%)</title><rect x="898.9" y="259.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="901.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (78 samples, 0.33%)</title><rect x="899.3" y="259.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.3" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (8 samples, 0.03%)</title><rect x="899.6" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="902.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.02%)</title><rect x="900.0" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="900.0" y="227.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="903.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (58 samples, 0.25%)</title><rect x="900.3" y="243.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (58 samples, 0.25%)</title><rect x="900.3" y="227.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (58 samples, 0.25%)</title><rect x="900.3" y="211.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.05%)</title><rect x="900.3" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (12 samples, 0.05%)</title><rect x="900.3" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.05%)</title><rect x="900.3" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.05%)</title><rect x="900.3" y="147.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="900.3" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="900.3" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.3" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.03%)</title><rect x="900.3" y="99.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="903.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.02%)</title><rect x="900.6" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (5 samples, 0.02%)</title><rect x="900.6" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (5 samples, 0.02%)</title><rect x="900.6" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.6" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (5 samples, 0.02%)</title><rect x="900.6" y="83.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="903.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (46 samples, 0.20%)</title><rect x="900.9" y="195.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (11 samples, 0.05%)</title><rect x="900.9" y="179.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="903.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="901.4" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="901.4" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (5 samples, 0.02%)</title><rect x="901.4" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.4" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (5 samples, 0.02%)</title><rect x="901.4" y="131.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="904.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (8 samples, 0.03%)</title><rect x="901.8" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (8 samples, 0.03%)</title><rect x="901.8" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.8" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (8 samples, 0.03%)</title><rect x="901.8" y="147.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="904.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (19 samples, 0.08%)</title><rect x="902.2" y="179.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.08%)</title><rect x="902.2" y="163.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="905.2" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (17 samples, 0.07%)</title><rect x="903.5" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (17 samples, 0.07%)</title><rect x="903.5" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (17 samples, 0.07%)</title><rect x="903.5" y="243.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.5" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (17 samples, 0.07%)</title><rect x="903.5" y="227.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (17 samples, 0.07%)</title><rect x="903.5" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (17 samples, 0.07%)</title><rect x="903.5" y="195.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="906.5" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (13 samples, 0.06%)</title><rect x="904.5" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (13 samples, 0.06%)</title><rect x="904.5" y="259.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.5" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (13 samples, 0.06%)</title><rect x="904.5" y="243.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="907.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.04%)</title><rect x="905.2" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.03%)</title><rect x="905.2" y="259.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="908.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (94 samples, 0.40%)</title><rect x="905.6" y="275.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.6" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (30 samples, 0.13%)</title><rect x="905.6" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (13 samples, 0.06%)</title><rect x="905.6" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (13 samples, 0.06%)</title><rect x="905.6" y="227.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="908.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (17 samples, 0.07%)</title><rect x="906.3" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (17 samples, 0.07%)</title><rect x="906.3" y="227.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="909.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (5 samples, 0.02%)</title><rect x="907.1" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (5 samples, 0.02%)</title><rect x="907.1" y="243.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="910.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="907.4" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="907.4" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.06%)</title><rect x="907.4" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (15 samples, 0.06%)</title><rect x="907.4" y="211.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="910.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (26 samples, 0.11%)</title><rect x="908.2" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.2" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (9 samples, 0.04%)</title><rect x="908.2" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.2" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (9 samples, 0.04%)</title><rect x="908.2" y="227.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="911.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (17 samples, 0.07%)</title><rect x="908.6" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="911.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (13 samples, 0.06%)</title><rect x="908.8" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (13 samples, 0.06%)</title><rect x="908.8" y="211.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="911.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (18 samples, 0.08%)</title><rect x="909.5" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (18 samples, 0.08%)</title><rect x="909.5" y="243.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="912.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (68 samples, 0.29%)</title><rect x="910.4" y="323.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (68 samples, 0.29%)</title><rect x="910.4" y="307.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (44 samples, 0.19%)</title><rect x="910.4" y="291.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (44 samples, 0.19%)</title><rect x="910.4" y="275.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (44 samples, 0.19%)</title><rect x="910.4" y="259.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.19%)</title><rect x="910.4" y="243.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.4" y="254.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.19%)</title><rect x="910.4" y="227.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="913.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (24 samples, 0.10%)</title><rect x="912.6" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.6" y="302.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="912.6" y="275.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="915.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (38 samples, 0.16%)</title><rect x="913.8" y="323.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (38 samples, 0.16%)</title><rect x="913.8" y="307.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (38 samples, 0.16%)</title><rect x="913.8" y="291.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.12%)</title><rect x="913.8" y="275.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (27 samples, 0.12%)</title><rect x="913.8" y="259.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.8" y="270.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.12%)</title><rect x="913.8" y="243.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="916.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.05%)</title><rect x="915.2" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.2" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.05%)</title><rect x="915.2" y="259.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="918.2" y="270.0"></text>
</g>
<g>
<title>[worker_5 tid=54509] (727 samples, 3.12%)</title><rect x="915.7" y="435.0" width="36.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="918.7" y="446.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (727 samples, 3.12%)</title><rect x="915.7" y="419.0" width="36.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.7" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (727 samples, 3.12%)</title><rect x="915.7" y="403.0" width="36.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.7" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (727 samples, 3.12%)</title><rect x="915.7" y="387.0" width="36.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.7" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.03%)</title><rect x="915.7" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.03%)</title><rect x="915.7" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.03%)</title><rect x="915.7" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.03%)</title><rect x="915.7" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.03%)</title><rect x="915.7" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="918.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (721 samples, 3.09%)</title><rect x="916.1" y="371.0" width="36.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.1" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (721 samples, 3.09%)</title><rect x="916.1" y="355.0" width="36.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.1" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (721 samples, 3.09%)</title><rect x="916.1" y="339.0" width="36.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.1" y="350.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.06%)</title><rect x="916.1" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.06%)</title><rect x="916.1" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.06%)</title><rect x="916.1" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.06%)</title><rect x="916.1" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.1" y="286.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="916.1" y="259.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="919.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.03%)</title><rect x="916.7" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.03%)</title><rect x="916.7" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.03%)</title><rect x="916.7" y="291.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="919.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (17 samples, 0.07%)</title><rect x="917.0" y="323.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.0" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.02%)</title><rect x="917.0" y="307.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="920.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.05%)</title><rect x="917.3" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.3" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="917.3" y="291.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="920.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="917.6" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="920.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (96 samples, 0.41%)</title><rect x="917.9" y="323.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (7 samples, 0.03%)</title><rect x="917.9" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.03%)</title><rect x="917.9" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.03%)</title><rect x="917.9" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (7 samples, 0.03%)</title><rect x="917.9" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.03%)</title><rect x="917.9" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (6 samples, 0.03%)</title><rect x="917.9" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (6 samples, 0.03%)</title><rect x="917.9" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="917.9" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="917.9" y="179.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="920.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.02%)</title><rect x="918.2" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.02%)</title><rect x="918.2" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (5 samples, 0.02%)</title><rect x="918.2" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (5 samples, 0.02%)</title><rect x="918.2" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="921.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (5 samples, 0.02%)</title><rect x="918.2" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="918.2" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="918.2" y="211.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="921.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.02%)</title><rect x="918.5" y="307.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="918.5" y="291.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.5" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.02%)</title><rect x="918.5" y="275.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.5" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="918.5" y="259.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="921.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (5 samples, 0.02%)</title><rect x="918.7" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="918.7" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="918.7" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="921.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (74 samples, 0.32%)</title><rect x="919.0" y="307.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.03%)</title><rect x="919.0" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.03%)</title><rect x="919.0" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="922.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (67 samples, 0.29%)</title><rect x="919.3" y="291.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (25 samples, 0.11%)</title><rect x="919.5" y="275.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (24 samples, 0.10%)</title><rect x="919.5" y="259.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.08%)</title><rect x="919.8" y="243.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.08%)</title><rect x="919.8" y="227.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.08%)</title><rect x="919.8" y="211.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="922.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.03%)</title><rect x="919.8" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (7 samples, 0.03%)</title><rect x="919.8" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.03%)</title><rect x="919.8" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.03%)</title><rect x="919.8" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="922.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (11 samples, 0.05%)</title><rect x="920.2" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.2" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (5 samples, 0.02%)</title><rect x="920.2" y="179.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="923.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (25 samples, 0.11%)</title><rect x="921.5" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.03%)</title><rect x="921.5" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (5 samples, 0.02%)</title><rect x="921.5" y="243.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (5 samples, 0.02%)</title><rect x="921.5" y="227.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="924.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (6 samples, 0.03%)</title><rect x="922.0" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="925.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (9 samples, 0.04%)</title><rect x="922.3" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.3" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (9 samples, 0.04%)</title><rect x="922.3" y="243.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="925.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (26 samples, 0.11%)</title><rect x="922.7" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="925.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (26 samples, 0.11%)</title><rect x="922.7" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.07%)</title><rect x="922.7" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.07%)</title><rect x="922.7" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.07%)</title><rect x="922.7" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.07%)</title><rect x="922.7" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="925.7" y="254.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="922.7" y="227.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="925.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (10 samples, 0.04%)</title><rect x="923.5" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.5" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="923.5" y="275.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="926.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (546 samples, 2.34%)</title><rect x="924.0" y="323.0" width="27.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.0" y="334.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (543 samples, 2.33%)</title><rect x="924.2" y="307.0" width="27.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.2" y="318.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (543 samples, 2.33%)</title><rect x="924.2" y="291.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.2" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (494 samples, 2.12%)</title><rect x="924.3" y="275.0" width="25.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.3" y="286.0">o..</text>
</g>
<g>
<title>byte[] (285 samples, 1.22%)</title><rect x="924.3" y="259.0" width="14.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="927.3" y="270.0"></text>
</g>
<g>
<title>byte[] (209 samples, 0.90%)</title><rect x="938.7" y="259.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (35 samples, 0.15%)</title><rect x="949.3" y="275.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (27 samples, 0.12%)</title><rect x="949.5" y="259.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 0.12%)</title><rect x="949.5" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="952.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 0.12%)</title><rect x="949.5" y="227.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="952.5" y="238.0"></text>
</g>
<g>
<title>char[] (19 samples, 0.08%)</title><rect x="949.5" y="211.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="952.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.03%)</title><rect x="950.5" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.03%)</title><rect x="950.5" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.03%)</title><rect x="950.5" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.5" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="950.5" y="163.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="953.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (11 samples, 0.05%)</title><rect x="951.0" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.0" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.05%)</title><rect x="951.0" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="954.0" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="951.0" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="954.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (17 samples, 0.07%)</title><rect x="951.7" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 0.07%)</title><rect x="951.7" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 0.07%)</title><rect x="951.7" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="954.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.06%)</title><rect x="951.7" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.7" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.06%)</title><rect x="951.7" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.7" y="270.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="951.7" y="243.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="954.7" y="254.0"></text>
</g>
<g>
<title>[worker_5 tid=54523] (547 samples, 2.35%)</title><rect x="952.5" y="435.0" width="27.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="955.5" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (547 samples, 2.35%)</title><rect x="952.5" y="419.0" width="27.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.5" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (547 samples, 2.35%)</title><rect x="952.5" y="403.0" width="27.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="955.5" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (547 samples, 2.35%)</title><rect x="952.5" y="387.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.5" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.05%)</title><rect x="952.5" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 0.05%)</title><rect x="952.5" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.05%)</title><rect x="952.5" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (12 samples, 0.05%)</title><rect x="952.5" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.05%)</title><rect x="952.5" y="307.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="955.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (535 samples, 2.29%)</title><rect x="953.1" y="371.0" width="27.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="956.1" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (535 samples, 2.29%)</title><rect x="953.1" y="355.0" width="27.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.1" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (535 samples, 2.29%)</title><rect x="953.1" y="339.0" width="27.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.1" y="350.0">r..</text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="953.1" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="956.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.06%)</title><rect x="953.8" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="956.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.06%)</title><rect x="953.8" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.06%)</title><rect x="953.8" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.06%)</title><rect x="953.8" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.8" y="286.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="953.8" y="259.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="956.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.06%)</title><rect x="954.4" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.06%)</title><rect x="954.4" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.06%)</title><rect x="954.4" y="291.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="957.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (34 samples, 0.15%)</title><rect x="955.1" y="323.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="958.1" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.02%)</title><rect x="955.1" y="307.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="958.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (29 samples, 0.12%)</title><rect x="955.4" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.4" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="955.4" y="291.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="958.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.02%)</title><rect x="955.9" y="291.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="958.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="956.1" y="291.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="959.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (363 samples, 1.56%)</title><rect x="956.8" y="323.0" width="18.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.10%)</title><rect x="956.8" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.10%)</title><rect x="956.8" y="291.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.10%)</title><rect x="956.8" y="275.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.10%)</title><rect x="956.8" y="259.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.10%)</title><rect x="956.8" y="243.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="959.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="956.8" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="959.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.03%)</title><rect x="956.8" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.8" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.03%)</title><rect x="956.8" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="959.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.03%)</title><rect x="956.8" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="959.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.03%)</title><rect x="956.8" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.03%)</title><rect x="956.8" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (6 samples, 0.03%)</title><rect x="956.8" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.03%)</title><rect x="956.8" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.03%)</title><rect x="956.8" y="99.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="956.8" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="956.8" y="67.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="956.8" y="51.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="956.8" y="35.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="959.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (18 samples, 0.08%)</title><rect x="957.1" y="227.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (18 samples, 0.08%)</title><rect x="957.1" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.08%)</title><rect x="957.1" y="195.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.08%)</title><rect x="957.1" y="179.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="960.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (27 samples, 0.12%)</title><rect x="958.1" y="307.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (27 samples, 0.12%)</title><rect x="958.1" y="291.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (27 samples, 0.12%)</title><rect x="958.1" y="275.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (27 samples, 0.12%)</title><rect x="958.1" y="259.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (27 samples, 0.12%)</title><rect x="958.1" y="243.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (27 samples, 0.12%)</title><rect x="958.1" y="227.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.12%)</title><rect x="958.1" y="211.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="961.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (16 samples, 0.07%)</title><rect x="959.4" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="962.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.07%)</title><rect x="959.4" y="291.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.07%)</title><rect x="959.4" y="275.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.07%)</title><rect x="959.4" y="259.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="962.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (23 samples, 0.10%)</title><rect x="960.2" y="307.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (23 samples, 0.10%)</title><rect x="960.2" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="963.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.10%)</title><rect x="960.2" y="275.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="963.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (273 samples, 1.17%)</title><rect x="961.4" y="307.0" width="13.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (16 samples, 0.07%)</title><rect x="961.4" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.07%)</title><rect x="961.4" y="275.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="964.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (257 samples, 1.10%)</title><rect x="962.2" y="291.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (10 samples, 0.04%)</title><rect x="962.2" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (10 samples, 0.04%)</title><rect x="962.2" y="259.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="965.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (108 samples, 0.46%)</title><rect x="962.7" y="275.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (104 samples, 0.45%)</title><rect x="962.9" y="259.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.9" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.02%)</title><rect x="962.9" y="243.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="965.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.03%)</title><rect x="963.2" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.2" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.03%)</title><rect x="963.2" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="966.2" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.03%)</title><rect x="963.5" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="966.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (8 samples, 0.03%)</title><rect x="963.8" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="963.8" y="227.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="966.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (78 samples, 0.33%)</title><rect x="964.2" y="243.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (78 samples, 0.33%)</title><rect x="964.2" y="227.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (78 samples, 0.33%)</title><rect x="964.2" y="211.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.06%)</title><rect x="964.2" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (14 samples, 0.06%)</title><rect x="964.2" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.06%)</title><rect x="964.2" y="163.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.06%)</title><rect x="964.2" y="147.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.02%)</title><rect x="964.2" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.02%)</title><rect x="964.2" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.2" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.02%)</title><rect x="964.2" y="99.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="967.2" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.04%)</title><rect x="964.5" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (9 samples, 0.04%)</title><rect x="964.5" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (9 samples, 0.04%)</title><rect x="964.5" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (9 samples, 0.04%)</title><rect x="964.5" y="83.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="967.5" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (64 samples, 0.27%)</title><rect x="964.9" y="195.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (14 samples, 0.06%)</title><rect x="964.9" y="179.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="967.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="965.7" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="965.7" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (9 samples, 0.04%)</title><rect x="965.7" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.7" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (9 samples, 0.04%)</title><rect x="965.7" y="131.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="968.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.get$Lambda (7 samples, 0.03%)</title><rect x="966.1" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.1" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (7 samples, 0.03%)</title><rect x="966.1" y="131.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="969.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.03%)</title><rect x="966.5" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.03%)</title><rect x="966.5" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.5" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.03%)</title><rect x="966.5" y="147.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="969.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (27 samples, 0.12%)</title><rect x="966.8" y="179.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.8" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.12%)</title><rect x="966.8" y="163.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="969.8" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.04%)</title><rect x="968.2" y="275.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="971.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (10 samples, 0.04%)</title><rect x="968.9" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (10 samples, 0.04%)</title><rect x="968.9" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (10 samples, 0.04%)</title><rect x="968.9" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.9" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (10 samples, 0.04%)</title><rect x="968.9" y="227.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (10 samples, 0.04%)</title><rect x="968.9" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (10 samples, 0.04%)</title><rect x="968.9" y="195.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="971.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.values (6 samples, 0.03%)</title><rect x="969.4" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableCollection (6 samples, 0.03%)</title><rect x="969.4" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.4" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection (6 samples, 0.03%)</title><rect x="969.4" y="243.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="972.4" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (7 samples, 0.03%)</title><rect x="969.7" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (7 samples, 0.03%)</title><rect x="969.7" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.7" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (7 samples, 0.03%)</title><rect x="969.7" y="243.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="972.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (11 samples, 0.05%)</title><rect x="970.1" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.04%)</title><rect x="970.2" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.04%)</title><rect x="970.2" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (9 samples, 0.04%)</title><rect x="970.2" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.04%)</title><rect x="970.2" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.04%)</title><rect x="970.2" y="195.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.04%)</title><rect x="970.2" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.04%)</title><rect x="970.2" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (9 samples, 0.04%)</title><rect x="970.2" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.04%)</title><rect x="970.2" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.04%)</title><rect x="970.2" y="115.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.04%)</title><rect x="970.2" y="99.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (9 samples, 0.04%)</title><rect x="970.2" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (9 samples, 0.04%)</title><rect x="970.2" y="67.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (9 samples, 0.04%)</title><rect x="970.2" y="51.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="973.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (91 samples, 0.39%)</title><rect x="970.6" y="275.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.6" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (26 samples, 0.11%)</title><rect x="970.6" y="259.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (22 samples, 0.09%)</title><rect x="970.8" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (22 samples, 0.09%)</title><rect x="970.8" y="227.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="973.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.04%)</title><rect x="972.0" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.04%)</title><rect x="972.0" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.04%)</title><rect x="972.0" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (10 samples, 0.04%)</title><rect x="972.0" y="211.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="975.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (28 samples, 0.12%)</title><rect x="972.5" y="259.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="975.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (6 samples, 0.03%)</title><rect x="972.5" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.5" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (6 samples, 0.03%)</title><rect x="972.5" y="227.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="975.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (22 samples, 0.09%)</title><rect x="972.8" y="243.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.06%)</title><rect x="972.8" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.06%)</title><rect x="972.8" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (15 samples, 0.06%)</title><rect x="972.8" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.8" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (15 samples, 0.06%)</title><rect x="972.8" y="179.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="975.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (7 samples, 0.03%)</title><rect x="973.5" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.5" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (7 samples, 0.03%)</title><rect x="973.5" y="211.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="976.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (26 samples, 0.11%)</title><rect x="973.9" y="259.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (26 samples, 0.11%)</title><rect x="973.9" y="243.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="976.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (64 samples, 0.27%)</title><rect x="975.2" y="323.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (64 samples, 0.27%)</title><rect x="975.2" y="307.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (44 samples, 0.19%)</title><rect x="975.2" y="291.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (44 samples, 0.19%)</title><rect x="975.2" y="275.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (44 samples, 0.19%)</title><rect x="975.2" y="259.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="978.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.19%)</title><rect x="975.2" y="243.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="978.2" y="254.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.19%)</title><rect x="975.2" y="227.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="978.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (20 samples, 0.09%)</title><rect x="977.4" y="291.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.4" y="302.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.09%)</title><rect x="977.4" y="275.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="980.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (35 samples, 0.15%)</title><rect x="978.5" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (35 samples, 0.15%)</title><rect x="978.5" y="307.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 0.15%)</title><rect x="978.5" y="291.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.10%)</title><rect x="978.5" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 0.10%)</title><rect x="978.5" y="259.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.5" y="270.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.09%)</title><rect x="978.5" y="243.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="981.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.05%)</title><rect x="979.6" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.6" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.05%)</title><rect x="979.6" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="982.6" y="270.0"></text>
</g>
<g>
<title>[worker_5 tid=54530] (512 samples, 2.20%)</title><rect x="980.2" y="435.0" width="25.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="983.2" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (512 samples, 2.20%)</title><rect x="980.2" y="419.0" width="25.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.2" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (512 samples, 2.20%)</title><rect x="980.2" y="403.0" width="25.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (512 samples, 2.20%)</title><rect x="980.2" y="387.0" width="25.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.2" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.06%)</title><rect x="980.2" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.06%)</title><rect x="980.2" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.06%)</title><rect x="980.2" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.06%)</title><rect x="980.2" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.06%)</title><rect x="980.2" y="307.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="983.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (498 samples, 2.14%)</title><rect x="980.9" y="371.0" width="25.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.9" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (498 samples, 2.14%)</title><rect x="980.9" y="355.0" width="25.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.9" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (498 samples, 2.14%)</title><rect x="980.9" y="339.0" width="25.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.9" y="350.0">r..</text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="980.9" y="323.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="983.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (18 samples, 0.08%)</title><rect x="981.5" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (18 samples, 0.08%)</title><rect x="981.5" y="307.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (18 samples, 0.08%)</title><rect x="981.5" y="291.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.08%)</title><rect x="981.5" y="275.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="984.5" y="286.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.08%)</title><rect x="981.5" y="259.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="984.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.09%)</title><rect x="982.4" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.09%)</title><rect x="982.4" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="985.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.09%)</title><rect x="982.4" y="291.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="985.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (31 samples, 0.13%)</title><rect x="983.4" y="323.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (27 samples, 0.12%)</title><rect x="983.6" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.6" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="983.6" y="291.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="986.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.05%)</title><rect x="984.3" y="291.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="987.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (331 samples, 1.42%)</title><rect x="985.0" y="323.0" width="16.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="988.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (40 samples, 0.17%)</title><rect x="985.0" y="307.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="988.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (40 samples, 0.17%)</title><rect x="985.0" y="291.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (40 samples, 0.17%)</title><rect x="985.0" y="275.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="988.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (40 samples, 0.17%)</title><rect x="985.0" y="259.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (40 samples, 0.17%)</title><rect x="985.0" y="243.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="988.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.03%)</title><rect x="985.0" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="988.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.03%)</title><rect x="985.0" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="988.0" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.03%)</title><rect x="985.0" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.03%)</title><rect x="985.0" y="179.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.03%)</title><rect x="985.0" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.03%)</title><rect x="985.0" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (7 samples, 0.03%)</title><rect x="985.0" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.03%)</title><rect x="985.0" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.03%)</title><rect x="985.0" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.0" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.03%)</title><rect x="985.0" y="83.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (7 samples, 0.03%)</title><rect x="985.0" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="988.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (7 samples, 0.03%)</title><rect x="985.0" y="51.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (7 samples, 0.03%)</title><rect x="985.0" y="35.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="988.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (33 samples, 0.14%)</title><rect x="985.3" y="227.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (33 samples, 0.14%)</title><rect x="985.3" y="211.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="988.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.14%)</title><rect x="985.3" y="195.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.14%)</title><rect x="985.3" y="179.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="988.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (19 samples, 0.08%)</title><rect x="987.0" y="307.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (19 samples, 0.08%)</title><rect x="987.0" y="291.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="990.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (19 samples, 0.08%)</title><rect x="987.0" y="275.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="990.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (19 samples, 0.08%)</title><rect x="987.0" y="259.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (19 samples, 0.08%)</title><rect x="987.0" y="243.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.08%)</title><rect x="987.0" y="227.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="990.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.08%)</title><rect x="987.0" y="211.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="990.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (11 samples, 0.05%)</title><rect x="988.0" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.05%)</title><rect x="988.0" y="291.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.05%)</title><rect x="988.0" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.0" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.05%)</title><rect x="988.0" y="259.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="991.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (13 samples, 0.06%)</title><rect x="988.5" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.06%)</title><rect x="988.5" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.06%)</title><rect x="988.5" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="991.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (248 samples, 1.06%)</title><rect x="989.2" y="307.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.06%)</title><rect x="989.2" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="992.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="989.2" y="275.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="992.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (235 samples, 1.01%)</title><rect x="989.8" y="291.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.03%)</title><rect x="989.8" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.8" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.03%)</title><rect x="989.8" y="259.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="992.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (98 samples, 0.42%)</title><rect x="990.2" y="275.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (6 samples, 0.03%)</title><rect x="990.2" y="259.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="993.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (92 samples, 0.39%)</title><rect x="990.5" y="259.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="993.5" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.03%)</title><rect x="990.5" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="993.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.03%)</title><rect x="990.8" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.8" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.03%)</title><rect x="990.8" y="227.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="993.8" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.02%)</title><rect x="991.1" y="243.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="994.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.02%)</title><rect x="991.4" y="243.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="994.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="991.4" y="227.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="994.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (70 samples, 0.30%)</title><rect x="991.6" y="243.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (70 samples, 0.30%)</title><rect x="991.6" y="227.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (70 samples, 0.30%)</title><rect x="991.6" y="211.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.07%)</title><rect x="991.6" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="994.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (16 samples, 0.07%)</title><rect x="991.6" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="994.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.07%)</title><rect x="991.6" y="163.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.07%)</title><rect x="991.6" y="147.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="991.6" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="994.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="991.6" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.6" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.03%)</title><rect x="991.6" y="99.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="994.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.04%)</title><rect x="992.0" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (9 samples, 0.04%)</title><rect x="992.0" y="115.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (9 samples, 0.04%)</title><rect x="992.0" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (9 samples, 0.04%)</title><rect x="992.0" y="83.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="995.0" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (54 samples, 0.23%)</title><rect x="992.4" y="195.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="995.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (14 samples, 0.06%)</title><rect x="992.4" y="179.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="995.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.06%)</title><rect x="993.1" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="996.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="993.1" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="996.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (8 samples, 0.03%)</title><rect x="993.1" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.1" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (8 samples, 0.03%)</title><rect x="993.1" y="131.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="996.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.get$Lambda (5 samples, 0.02%)</title><rect x="993.5" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="996.5" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (5 samples, 0.02%)</title><rect x="993.5" y="131.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="996.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (23 samples, 0.10%)</title><rect x="994.0" y="179.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.0" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.10%)</title><rect x="994.0" y="163.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="997.0" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.02%)</title><rect x="995.2" y="275.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="998.2" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.02%)</title><rect x="995.4" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="995.4" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="998.4" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (8 samples, 0.03%)</title><rect x="995.7" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.03%)</title><rect x="995.7" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.7" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (8 samples, 0.03%)</title><rect x="995.7" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.7" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.03%)</title><rect x="995.7" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (8 samples, 0.03%)</title><rect x="995.7" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (8 samples, 0.03%)</title><rect x="995.7" y="195.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="998.7" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (9 samples, 0.04%)</title><rect x="996.1" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (9 samples, 0.04%)</title><rect x="996.1" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="999.1" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (9 samples, 0.04%)</title><rect x="996.1" y="243.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="999.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.06%)</title><rect x="996.5" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.04%)</title><rect x="996.5" y="259.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="999.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="997.0" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="997.0" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.03%)</title><rect x="997.0" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.03%)</title><rect x="997.0" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.03%)</title><rect x="997.0" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.03%)</title><rect x="997.0" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.03%)</title><rect x="997.0" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1000.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (6 samples, 0.03%)</title><rect x="997.0" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.03%)</title><rect x="997.0" y="131.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.03%)</title><rect x="997.0" y="115.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="997.0" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="997.0" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="997.0" y="67.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1000.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="997.0" y="51.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1000.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (88 samples, 0.38%)</title><rect x="997.3" y="275.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (28 samples, 0.12%)</title><rect x="997.3" y="259.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (10 samples, 0.04%)</title><rect x="997.3" y="243.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (10 samples, 0.04%)</title><rect x="997.3" y="227.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1000.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.08%)</title><rect x="997.8" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (18 samples, 0.08%)</title><rect x="997.8" y="227.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1000.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.06%)</title><rect x="998.8" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.06%)</title><rect x="998.8" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.06%)</title><rect x="998.8" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.8" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (14 samples, 0.06%)</title><rect x="998.8" y="211.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1001.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (25 samples, 0.11%)</title><rect x="999.5" y="259.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (7 samples, 0.03%)</title><rect x="999.5" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.5" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (7 samples, 0.03%)</title><rect x="999.5" y="227.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1002.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (18 samples, 0.08%)</title><rect x="999.9" y="243.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (14 samples, 0.06%)</title><rect x="1000.1" y="227.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1003.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (14 samples, 0.06%)</title><rect x="1000.1" y="211.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1003.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (19 samples, 0.08%)</title><rect x="1000.8" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.8" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (19 samples, 0.08%)</title><rect x="1000.8" y="243.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1003.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (49 samples, 0.21%)</title><rect x="1001.7" y="323.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (49 samples, 0.21%)</title><rect x="1001.7" y="307.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (26 samples, 0.11%)</title><rect x="1001.7" y="291.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (26 samples, 0.11%)</title><rect x="1001.7" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (26 samples, 0.11%)</title><rect x="1001.7" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.11%)</title><rect x="1001.7" y="243.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1004.7" y="254.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="1001.7" y="227.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1004.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (23 samples, 0.10%)</title><rect x="1003.1" y="291.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.1" y="302.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="1003.1" y="275.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1006.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (38 samples, 0.16%)</title><rect x="1004.2" y="323.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (38 samples, 0.16%)</title><rect x="1004.2" y="307.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1007.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (38 samples, 0.16%)</title><rect x="1004.2" y="291.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24 samples, 0.10%)</title><rect x="1004.2" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24 samples, 0.10%)</title><rect x="1004.2" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.2" y="270.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="1004.2" y="243.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1007.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.06%)</title><rect x="1005.4" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.4" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (14 samples, 0.06%)</title><rect x="1005.4" y="259.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1008.4" y="270.0"></text>
</g>
<g>
<title>[worker_6 tid=54508] (749 samples, 3.21%)</title><rect x="1006.1" y="435.0" width="37.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1009.1" y="446.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (749 samples, 3.21%)</title><rect x="1006.1" y="419.0" width="37.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.1" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (749 samples, 3.21%)</title><rect x="1006.1" y="403.0" width="37.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1009.1" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (749 samples, 3.21%)</title><rect x="1006.1" y="387.0" width="37.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1009.1" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.03%)</title><rect x="1006.1" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.03%)</title><rect x="1006.1" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.03%)</title><rect x="1006.1" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.03%)</title><rect x="1006.1" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.03%)</title><rect x="1006.1" y="307.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1009.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (741 samples, 3.18%)</title><rect x="1006.5" y="371.0" width="37.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.5" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (741 samples, 3.18%)</title><rect x="1006.5" y="355.0" width="37.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.5" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (741 samples, 3.18%)</title><rect x="1006.5" y="339.0" width="37.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.5" y="350.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.05%)</title><rect x="1006.7" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.05%)</title><rect x="1006.7" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.05%)</title><rect x="1006.7" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.05%)</title><rect x="1006.7" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.7" y="286.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="1006.7" y="259.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1009.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.04%)</title><rect x="1007.3" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.04%)</title><rect x="1007.3" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.04%)</title><rect x="1007.3" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1010.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (16 samples, 0.07%)</title><rect x="1007.8" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1010.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.07%)</title><rect x="1007.8" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.8" y="318.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="1007.8" y="291.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1010.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (105 samples, 0.45%)</title><rect x="1008.6" y="323.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (14 samples, 0.06%)</title><rect x="1008.6" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14 samples, 0.06%)</title><rect x="1008.6" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14 samples, 0.06%)</title><rect x="1008.6" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14 samples, 0.06%)</title><rect x="1008.6" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.06%)</title><rect x="1008.6" y="243.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1011.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (14 samples, 0.06%)</title><rect x="1008.6" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1011.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (14 samples, 0.06%)</title><rect x="1008.6" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.06%)</title><rect x="1008.6" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1011.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.06%)</title><rect x="1008.6" y="179.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1011.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (9 samples, 0.04%)</title><rect x="1009.3" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (9 samples, 0.04%)</title><rect x="1009.3" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (9 samples, 0.04%)</title><rect x="1009.3" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (9 samples, 0.04%)</title><rect x="1009.3" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (9 samples, 0.04%)</title><rect x="1009.3" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.04%)</title><rect x="1009.3" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1012.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.04%)</title><rect x="1009.3" y="211.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1012.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.02%)</title><rect x="1009.8" y="307.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="1009.8" y="291.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.02%)</title><rect x="1009.8" y="275.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="1009.8" y="259.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1012.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (8 samples, 0.03%)</title><rect x="1010.0" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1013.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="1010.0" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="1010.0" y="275.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1013.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (69 samples, 0.30%)</title><rect x="1010.4" y="307.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1013.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.02%)</title><rect x="1010.4" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1013.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.02%)</title><rect x="1010.4" y="275.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1013.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (64 samples, 0.27%)</title><rect x="1010.7" y="291.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (29 samples, 0.12%)</title><rect x="1010.8" y="275.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (28 samples, 0.12%)</title><rect x="1010.8" y="259.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.8" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.02%)</title><rect x="1010.8" y="243.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1013.8" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.08%)</title><rect x="1011.4" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.08%)</title><rect x="1011.4" y="227.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.08%)</title><rect x="1011.4" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.02%)</title><rect x="1011.4" y="195.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (5 samples, 0.02%)</title><rect x="1011.4" y="179.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.02%)</title><rect x="1011.4" y="163.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.02%)</title><rect x="1011.4" y="147.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (13 samples, 0.06%)</title><rect x="1011.6" y="195.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1012.0" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.0" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="1012.0" y="163.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1015.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.02%)</title><rect x="1012.8" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (17 samples, 0.07%)</title><rect x="1013.1" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.02%)</title><rect x="1013.1" y="259.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.02%)</title><rect x="1013.1" y="243.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.02%)</title><rect x="1013.1" y="227.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1016.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (6 samples, 0.03%)</title><rect x="1013.4" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (5 samples, 0.02%)</title><rect x="1013.4" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (5 samples, 0.02%)</title><rect x="1013.4" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1016.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (5 samples, 0.02%)</title><rect x="1013.4" y="211.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1016.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (5 samples, 0.02%)</title><rect x="1013.7" y="259.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1016.7" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (5 samples, 0.02%)</title><rect x="1013.7" y="243.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1016.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (25 samples, 0.11%)</title><rect x="1013.9" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1016.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (25 samples, 0.11%)</title><rect x="1013.9" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.06%)</title><rect x="1013.9" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1016.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.06%)</title><rect x="1013.9" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.06%)</title><rect x="1013.9" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.06%)</title><rect x="1013.9" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.9" y="254.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="1013.9" y="227.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1016.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (10 samples, 0.04%)</title><rect x="1014.7" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.7" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="1014.7" y="275.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1017.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (552 samples, 2.37%)</title><rect x="1015.2" y="323.0" width="27.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.2" y="334.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (548 samples, 2.35%)</title><rect x="1015.4" y="307.0" width="27.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.4" y="318.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (548 samples, 2.35%)</title><rect x="1015.4" y="291.0" width="27.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1018.4" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (504 samples, 2.16%)</title><rect x="1015.5" y="275.0" width="25.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.5" y="286.0">o..</text>
</g>
<g>
<title>byte[] (281 samples, 1.21%)</title><rect x="1015.5" y="259.0" width="14.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1018.5" y="270.0"></text>
</g>
<g>
<title>byte[] (223 samples, 0.96%)</title><rect x="1029.7" y="259.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1032.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (34 samples, 0.15%)</title><rect x="1041.0" y="275.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (28 samples, 0.12%)</title><rect x="1041.2" y="259.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.12%)</title><rect x="1041.2" y="243.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.2" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.12%)</title><rect x="1041.2" y="227.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.2" y="238.0"></text>
</g>
<g>
<title>char[] (19 samples, 0.08%)</title><rect x="1041.2" y="211.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1044.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="1042.1" y="211.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1045.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (6 samples, 0.03%)</title><rect x="1042.7" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.7" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1042.7" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.7" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="1042.7" y="243.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1045.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (18 samples, 0.08%)</title><rect x="1043.1" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.08%)</title><rect x="1043.1" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.08%)</title><rect x="1043.1" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.06%)</title><rect x="1043.1" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.06%)</title><rect x="1043.1" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1046.1" y="270.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="1043.1" y="243.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1046.1" y="254.0"></text>
</g>
<g>
<title>[worker_6 tid=54524] (551 samples, 2.36%)</title><rect x="1044.0" y="435.0" width="27.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1047.0" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (551 samples, 2.36%)</title><rect x="1044.0" y="419.0" width="27.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.0" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (551 samples, 2.36%)</title><rect x="1044.0" y="403.0" width="27.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.0" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (551 samples, 2.36%)</title><rect x="1044.0" y="387.0" width="27.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.0" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.04%)</title><rect x="1044.0" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.04%)</title><rect x="1044.0" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.04%)</title><rect x="1044.0" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.04%)</title><rect x="1044.0" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.04%)</title><rect x="1044.0" y="307.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1047.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (542 samples, 2.32%)</title><rect x="1044.5" y="371.0" width="27.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.5" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (542 samples, 2.32%)</title><rect x="1044.5" y="355.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.5" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (542 samples, 2.32%)</title><rect x="1044.5" y="339.0" width="27.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1047.5" y="350.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.07%)</title><rect x="1044.7" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.07%)</title><rect x="1044.7" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.07%)</title><rect x="1044.7" y="291.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.07%)</title><rect x="1044.7" y="275.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.7" y="286.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="1044.7" y="259.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1047.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.04%)</title><rect x="1045.5" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.04%)</title><rect x="1045.5" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="1045.5" y="291.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1048.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (40 samples, 0.17%)</title><rect x="1046.0" y="323.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1049.0" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (16 samples, 0.07%)</title><rect x="1046.0" y="307.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1049.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (24 samples, 0.10%)</title><rect x="1046.8" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.8" y="318.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="1046.8" y="291.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1049.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.02%)</title><rect x="1047.6" y="291.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1050.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (368 samples, 1.58%)</title><rect x="1048.0" y="323.0" width="18.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (36 samples, 0.15%)</title><rect x="1048.0" y="307.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (36 samples, 0.15%)</title><rect x="1048.0" y="291.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1051.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (36 samples, 0.15%)</title><rect x="1048.0" y="275.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (36 samples, 0.15%)</title><rect x="1048.0" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (36 samples, 0.15%)</title><rect x="1048.0" y="243.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.02%)</title><rect x="1048.0" y="227.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1051.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.02%)</title><rect x="1048.0" y="211.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.0" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.02%)</title><rect x="1048.0" y="195.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.02%)</title><rect x="1048.0" y="179.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1051.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.02%)</title><rect x="1048.0" y="163.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.02%)</title><rect x="1048.0" y="147.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (5 samples, 0.02%)</title><rect x="1048.0" y="131.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.02%)</title><rect x="1048.0" y="115.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.02%)</title><rect x="1048.0" y="99.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.0" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.02%)</title><rect x="1048.0" y="83.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (5 samples, 0.02%)</title><rect x="1048.0" y="67.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (5 samples, 0.02%)</title><rect x="1048.0" y="51.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (5 samples, 0.02%)</title><rect x="1048.0" y="35.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1051.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (31 samples, 0.13%)</title><rect x="1048.2" y="227.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (31 samples, 0.13%)</title><rect x="1048.2" y="211.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.13%)</title><rect x="1048.2" y="195.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1051.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.13%)</title><rect x="1048.2" y="179.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1051.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (12 samples, 0.05%)</title><rect x="1049.8" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (12 samples, 0.05%)</title><rect x="1049.8" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (12 samples, 0.05%)</title><rect x="1049.8" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (12 samples, 0.05%)</title><rect x="1049.8" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (12 samples, 0.05%)</title><rect x="1049.8" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.05%)</title><rect x="1049.8" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.8" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.05%)</title><rect x="1049.8" y="211.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1052.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (22 samples, 0.09%)</title><rect x="1050.4" y="307.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (22 samples, 0.09%)</title><rect x="1050.4" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.09%)</title><rect x="1050.4" y="275.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.09%)</title><rect x="1050.4" y="259.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1053.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (20 samples, 0.09%)</title><rect x="1051.5" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.09%)</title><rect x="1051.5" y="291.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.09%)</title><rect x="1051.5" y="275.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1054.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (278 samples, 1.19%)</title><rect x="1052.5" y="307.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.05%)</title><rect x="1052.5" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.05%)</title><rect x="1052.5" y="275.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1055.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (267 samples, 1.15%)</title><rect x="1053.1" y="291.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (12 samples, 0.05%)</title><rect x="1053.1" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.1" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (12 samples, 0.05%)</title><rect x="1053.1" y="259.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1056.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (104 samples, 0.45%)</title><rect x="1053.7" y="275.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1056.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (100 samples, 0.43%)</title><rect x="1053.9" y="259.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.03%)</title><rect x="1054.1" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.1" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.03%)</title><rect x="1054.1" y="227.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1057.1" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.03%)</title><rect x="1054.4" y="243.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1057.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (10 samples, 0.04%)</title><rect x="1054.8" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.04%)</title><rect x="1054.8" y="227.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1057.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (73 samples, 0.31%)</title><rect x="1055.3" y="243.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (73 samples, 0.31%)</title><rect x="1055.3" y="227.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (73 samples, 0.31%)</title><rect x="1055.3" y="211.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.06%)</title><rect x="1055.3" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (13 samples, 0.06%)</title><rect x="1055.3" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.06%)</title><rect x="1055.3" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.06%)</title><rect x="1055.3" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1058.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="1055.3" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="1055.3" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.3" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.03%)</title><rect x="1055.3" y="99.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1058.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="1055.6" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="1055.6" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="1055.6" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.6" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="1055.6" y="83.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1058.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (60 samples, 0.26%)</title><rect x="1055.9" y="195.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (10 samples, 0.04%)</title><rect x="1055.9" y="179.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1058.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.10%)</title><rect x="1056.4" y="179.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.10%)</title><rect x="1056.4" y="163.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (20 samples, 0.09%)</title><rect x="1056.4" y="147.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.4" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (20 samples, 0.09%)</title><rect x="1056.4" y="131.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1059.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (24 samples, 0.10%)</title><rect x="1057.8" y="179.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.8" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.10%)</title><rect x="1057.8" y="163.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1060.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1059.2" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="1059.2" y="259.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1062.2" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (8 samples, 0.03%)</title><rect x="1059.5" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.03%)</title><rect x="1059.5" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1062.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (8 samples, 0.03%)</title><rect x="1059.5" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.5" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1059.5" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (8 samples, 0.03%)</title><rect x="1059.5" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (8 samples, 0.03%)</title><rect x="1059.5" y="195.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1062.5" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.values (6 samples, 0.03%)</title><rect x="1059.9" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableCollection (6 samples, 0.03%)</title><rect x="1059.9" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.9" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection (6 samples, 0.03%)</title><rect x="1059.9" y="243.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1062.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (8 samples, 0.03%)</title><rect x="1060.2" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1063.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (8 samples, 0.03%)</title><rect x="1060.2" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1063.2" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (8 samples, 0.03%)</title><rect x="1060.2" y="243.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1063.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.06%)</title><rect x="1060.6" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (8 samples, 0.03%)</title><rect x="1060.6" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1063.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1061.0" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="1061.0" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.03%)</title><rect x="1061.0" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.03%)</title><rect x="1061.0" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.03%)</title><rect x="1061.0" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.03%)</title><rect x="1061.0" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.03%)</title><rect x="1061.0" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (6 samples, 0.03%)</title><rect x="1061.0" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (6 samples, 0.03%)</title><rect x="1061.0" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (6 samples, 0.03%)</title><rect x="1061.0" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="1061.0" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="1061.0" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="1061.0" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="1061.0" y="51.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1064.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (105 samples, 0.45%)</title><rect x="1061.3" y="275.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (25 samples, 0.11%)</title><rect x="1061.3" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (10 samples, 0.04%)</title><rect x="1061.3" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (10 samples, 0.04%)</title><rect x="1061.3" y="227.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1064.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (15 samples, 0.06%)</title><rect x="1061.8" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (15 samples, 0.06%)</title><rect x="1061.8" y="227.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1064.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (21 samples, 0.09%)</title><rect x="1062.6" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (21 samples, 0.09%)</title><rect x="1062.6" y="243.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (21 samples, 0.09%)</title><rect x="1062.6" y="227.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (21 samples, 0.09%)</title><rect x="1062.6" y="211.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1065.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (31 samples, 0.13%)</title><rect x="1063.7" y="259.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.7" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (7 samples, 0.03%)</title><rect x="1063.7" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.7" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (7 samples, 0.03%)</title><rect x="1063.7" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1066.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (24 samples, 0.10%)</title><rect x="1064.0" y="243.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="1064.0" y="227.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="1064.0" y="211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (12 samples, 0.05%)</title><rect x="1064.0" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.0" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (12 samples, 0.05%)</title><rect x="1064.0" y="179.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1067.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (12 samples, 0.05%)</title><rect x="1064.6" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.6" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (12 samples, 0.05%)</title><rect x="1064.6" y="211.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1067.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (27 samples, 0.12%)</title><rect x="1065.2" y="259.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.2" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (27 samples, 0.12%)</title><rect x="1065.2" y="243.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1068.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (67 samples, 0.29%)</title><rect x="1066.6" y="323.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (67 samples, 0.29%)</title><rect x="1066.6" y="307.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (58 samples, 0.25%)</title><rect x="1066.6" y="291.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (58 samples, 0.25%)</title><rect x="1066.6" y="275.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1069.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (58 samples, 0.25%)</title><rect x="1066.6" y="259.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.25%)</title><rect x="1066.6" y="243.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.6" y="254.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.25%)</title><rect x="1066.6" y="227.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1069.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (9 samples, 0.04%)</title><rect x="1069.6" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.6" y="302.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="1069.6" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1072.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (38 samples, 0.16%)</title><rect x="1070.0" y="323.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (38 samples, 0.16%)</title><rect x="1070.0" y="307.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1073.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (38 samples, 0.16%)</title><rect x="1070.0" y="291.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.12%)</title><rect x="1070.0" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1073.0" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (27 samples, 0.12%)</title><rect x="1070.0" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.0" y="270.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="1070.0" y="243.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1073.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.05%)</title><rect x="1071.4" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.4" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.05%)</title><rect x="1071.4" y="259.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1074.4" y="270.0"></text>
</g>
<g>
<title>[worker_6 tid=54529] (521 samples, 2.23%)</title><rect x="1071.9" y="435.0" width="26.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1074.9" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (521 samples, 2.23%)</title><rect x="1071.9" y="419.0" width="26.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.9" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (521 samples, 2.23%)</title><rect x="1071.9" y="403.0" width="26.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1074.9" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (521 samples, 2.23%)</title><rect x="1071.9" y="387.0" width="26.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.9" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.06%)</title><rect x="1071.9" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 0.06%)</title><rect x="1071.9" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.06%)</title><rect x="1071.9" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.06%)</title><rect x="1071.9" y="323.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.06%)</title><rect x="1071.9" y="307.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1074.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (506 samples, 2.17%)</title><rect x="1072.7" y="371.0" width="25.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.7" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (506 samples, 2.17%)</title><rect x="1072.7" y="355.0" width="25.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1075.7" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (506 samples, 2.17%)</title><rect x="1072.7" y="339.0" width="25.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.7" y="350.0">r..</text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="1072.7" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1075.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.05%)</title><rect x="1073.2" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.05%)</title><rect x="1073.2" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.05%)</title><rect x="1073.2" y="291.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.05%)</title><rect x="1073.2" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1076.2" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="1073.2" y="259.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1076.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.04%)</title><rect x="1073.8" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.04%)</title><rect x="1073.8" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="1073.8" y="291.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1076.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (39 samples, 0.17%)</title><rect x="1074.2" y="323.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1077.2" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.05%)</title><rect x="1074.2" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1077.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (28 samples, 0.12%)</title><rect x="1074.8" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.8" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="1074.8" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1077.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.05%)</title><rect x="1075.2" y="291.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1078.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="1075.8" y="291.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1078.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (339 samples, 1.45%)</title><rect x="1076.2" y="323.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (41 samples, 0.18%)</title><rect x="1076.2" y="307.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (41 samples, 0.18%)</title><rect x="1076.2" y="291.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (41 samples, 0.18%)</title><rect x="1076.2" y="275.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (41 samples, 0.18%)</title><rect x="1076.2" y="259.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (41 samples, 0.18%)</title><rect x="1076.2" y="243.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.03%)</title><rect x="1076.2" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.03%)</title><rect x="1076.2" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.2" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.03%)</title><rect x="1076.2" y="195.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.03%)</title><rect x="1076.2" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.03%)</title><rect x="1076.2" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.03%)</title><rect x="1076.2" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (8 samples, 0.03%)</title><rect x="1076.2" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.03%)</title><rect x="1076.2" y="115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.03%)</title><rect x="1076.2" y="99.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.2" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.03%)</title><rect x="1076.2" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (8 samples, 0.03%)</title><rect x="1076.2" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (8 samples, 0.03%)</title><rect x="1076.2" y="51.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1079.2" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (8 samples, 0.03%)</title><rect x="1076.2" y="35.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1079.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (33 samples, 0.14%)</title><rect x="1076.6" y="227.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (33 samples, 0.14%)</title><rect x="1076.6" y="211.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.14%)</title><rect x="1076.6" y="195.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.14%)</title><rect x="1076.6" y="179.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1079.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (14 samples, 0.06%)</title><rect x="1078.3" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (14 samples, 0.06%)</title><rect x="1078.3" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (14 samples, 0.06%)</title><rect x="1078.3" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (14 samples, 0.06%)</title><rect x="1078.3" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (14 samples, 0.06%)</title><rect x="1078.3" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1081.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.06%)</title><rect x="1078.3" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1081.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.06%)</title><rect x="1078.3" y="211.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1081.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (11 samples, 0.05%)</title><rect x="1079.0" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.05%)</title><rect x="1079.0" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1082.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.05%)</title><rect x="1079.0" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.0" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.05%)</title><rect x="1079.0" y="259.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1082.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (12 samples, 0.05%)</title><rect x="1079.5" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.05%)</title><rect x="1079.5" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1082.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.05%)</title><rect x="1079.5" y="275.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1082.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (261 samples, 1.12%)</title><rect x="1080.1" y="307.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1083.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (16 samples, 0.07%)</title><rect x="1080.1" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.1" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.07%)</title><rect x="1080.1" y="275.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1083.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (245 samples, 1.05%)</title><rect x="1080.9" y="291.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.03%)</title><rect x="1080.9" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1083.9" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.03%)</title><rect x="1080.9" y="259.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1083.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (93 samples, 0.40%)</title><rect x="1081.3" y="275.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (90 samples, 0.39%)</title><rect x="1081.4" y="259.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1084.4" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (10 samples, 0.04%)</title><rect x="1081.4" y="243.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1084.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.02%)</title><rect x="1081.9" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.9" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.02%)</title><rect x="1081.9" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1084.9" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.02%)</title><rect x="1082.2" y="243.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1085.2" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (66 samples, 0.28%)</title><rect x="1082.7" y="243.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (66 samples, 0.28%)</title><rect x="1082.7" y="227.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (66 samples, 0.28%)</title><rect x="1082.7" y="211.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.07%)</title><rect x="1082.7" y="195.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (16 samples, 0.07%)</title><rect x="1082.7" y="179.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.07%)</title><rect x="1082.7" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1085.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.07%)</title><rect x="1082.7" y="147.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1085.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.03%)</title><rect x="1082.7" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1085.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.03%)</title><rect x="1082.7" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1085.7" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.03%)</title><rect x="1082.7" y="99.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1085.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.04%)</title><rect x="1083.0" y="131.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (10 samples, 0.04%)</title><rect x="1083.0" y="115.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (10 samples, 0.04%)</title><rect x="1083.0" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (10 samples, 0.04%)</title><rect x="1083.0" y="83.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1086.0" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (50 samples, 0.21%)</title><rect x="1083.5" y="195.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (13 samples, 0.06%)</title><rect x="1083.5" y="179.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1086.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="1084.1" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="1084.1" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1087.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.get$Lambda (6 samples, 0.03%)</title><rect x="1084.2" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.2" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (6 samples, 0.03%)</title><rect x="1084.2" y="131.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1087.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.03%)</title><rect x="1084.5" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1087.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.03%)</title><rect x="1084.5" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1087.5" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.03%)</title><rect x="1084.5" y="147.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1087.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (23 samples, 0.10%)</title><rect x="1084.8" y="179.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1087.8" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.10%)</title><rect x="1084.8" y="163.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1087.8" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.04%)</title><rect x="1086.0" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1089.0" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1086.5" y="275.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="1086.5" y="259.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1089.5" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (10 samples, 0.04%)</title><rect x="1086.7" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (10 samples, 0.04%)</title><rect x="1086.7" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.7" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (10 samples, 0.04%)</title><rect x="1086.7" y="243.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.7" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (10 samples, 0.04%)</title><rect x="1086.7" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (10 samples, 0.04%)</title><rect x="1086.7" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (10 samples, 0.04%)</title><rect x="1086.7" y="195.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1089.7" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.values (6 samples, 0.03%)</title><rect x="1087.2" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableCollection (6 samples, 0.03%)</title><rect x="1087.2" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.2" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection (6 samples, 0.03%)</title><rect x="1087.2" y="243.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1090.2" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (18 samples, 0.08%)</title><rect x="1087.5" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (18 samples, 0.08%)</title><rect x="1087.5" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.5" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (18 samples, 0.08%)</title><rect x="1087.5" y="243.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1090.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.06%)</title><rect x="1088.5" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1091.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.04%)</title><rect x="1088.5" y="259.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1091.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (83 samples, 0.36%)</title><rect x="1089.1" y="275.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.09%)</title><rect x="1089.1" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (7 samples, 0.03%)</title><rect x="1089.1" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.1" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (7 samples, 0.03%)</title><rect x="1089.1" y="227.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1092.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (15 samples, 0.06%)</title><rect x="1089.5" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (15 samples, 0.06%)</title><rect x="1089.5" y="227.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1092.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.09%)</title><rect x="1090.5" y="259.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.09%)</title><rect x="1090.5" y="243.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.09%)</title><rect x="1090.5" y="227.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (20 samples, 0.09%)</title><rect x="1090.5" y="211.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1093.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (18 samples, 0.08%)</title><rect x="1091.5" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (15 samples, 0.06%)</title><rect x="1091.6" y="243.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (15 samples, 0.06%)</title><rect x="1091.6" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.6" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (15 samples, 0.06%)</title><rect x="1091.6" y="211.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1094.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (19 samples, 0.08%)</title><rect x="1092.4" y="259.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (19 samples, 0.08%)</title><rect x="1092.4" y="243.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1095.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (64 samples, 0.27%)</title><rect x="1093.3" y="323.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (64 samples, 0.27%)</title><rect x="1093.3" y="307.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (41 samples, 0.18%)</title><rect x="1093.3" y="291.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (41 samples, 0.18%)</title><rect x="1093.3" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (41 samples, 0.18%)</title><rect x="1093.3" y="259.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1096.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.18%)</title><rect x="1093.3" y="243.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.3" y="254.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.18%)</title><rect x="1093.3" y="227.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1096.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (23 samples, 0.10%)</title><rect x="1095.4" y="291.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.4" y="302.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="1095.4" y="275.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1098.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (34 samples, 0.15%)</title><rect x="1096.6" y="323.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (34 samples, 0.15%)</title><rect x="1096.6" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1099.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (34 samples, 0.15%)</title><rect x="1096.6" y="291.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 0.09%)</title><rect x="1096.6" y="275.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (22 samples, 0.09%)</title><rect x="1096.6" y="259.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.6" y="270.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="1096.6" y="243.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1099.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.05%)</title><rect x="1097.7" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.7" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.05%)</title><rect x="1097.7" y="259.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1100.7" y="270.0"></text>
</g>
<g>
<title>[worker_7 tid=54507] (753 samples, 3.23%)</title><rect x="1098.3" y="435.0" width="38.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1101.3" y="446.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (753 samples, 3.23%)</title><rect x="1098.3" y="419.0" width="38.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.3" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (753 samples, 3.23%)</title><rect x="1098.3" y="403.0" width="38.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.3" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (753 samples, 3.23%)</title><rect x="1098.3" y="387.0" width="38.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.3" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.03%)</title><rect x="1098.3" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.03%)</title><rect x="1098.3" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.03%)</title><rect x="1098.3" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.03%)</title><rect x="1098.3" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1101.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.03%)</title><rect x="1098.3" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1101.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (746 samples, 3.20%)</title><rect x="1098.7" y="371.0" width="37.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.7" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (746 samples, 3.20%)</title><rect x="1098.7" y="355.0" width="37.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.7" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (746 samples, 3.20%)</title><rect x="1098.7" y="339.0" width="37.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1101.7" y="350.0">ru/..</text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="1098.7" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1101.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.05%)</title><rect x="1099.1" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.05%)</title><rect x="1099.1" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.05%)</title><rect x="1099.1" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.05%)</title><rect x="1099.1" y="275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.1" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="1099.1" y="259.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1102.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="1099.6" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="1099.6" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.03%)</title><rect x="1099.6" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1102.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (15 samples, 0.06%)</title><rect x="1100.0" y="323.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.06%)</title><rect x="1100.1" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.1" y="318.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="1100.1" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1103.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="1100.4" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1103.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (108 samples, 0.46%)</title><rect x="1100.8" y="323.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (9 samples, 0.04%)</title><rect x="1100.8" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9 samples, 0.04%)</title><rect x="1100.8" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (9 samples, 0.04%)</title><rect x="1100.8" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (9 samples, 0.04%)</title><rect x="1100.8" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1103.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.04%)</title><rect x="1100.8" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (8 samples, 0.03%)</title><rect x="1100.8" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (8 samples, 0.03%)</title><rect x="1100.8" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="1100.8" y="195.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.8" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="1100.8" y="179.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1103.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.03%)</title><rect x="1101.2" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1104.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (7 samples, 0.03%)</title><rect x="1101.2" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (7 samples, 0.03%)</title><rect x="1101.2" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (7 samples, 0.03%)</title><rect x="1101.2" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1104.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (7 samples, 0.03%)</title><rect x="1101.2" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1104.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="1101.2" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="1101.2" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1104.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (87 samples, 0.37%)</title><rect x="1101.8" y="307.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (84 samples, 0.36%)</title><rect x="1102.0" y="291.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (35 samples, 0.15%)</title><rect x="1102.2" y="275.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (34 samples, 0.15%)</title><rect x="1102.2" y="259.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1102.6" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="1102.6" y="227.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1105.6" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (22 samples, 0.09%)</title><rect x="1102.9" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (22 samples, 0.09%)</title><rect x="1102.9" y="227.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1105.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (22 samples, 0.09%)</title><rect x="1102.9" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1105.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.02%)</title><rect x="1102.9" y="195.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (5 samples, 0.02%)</title><rect x="1102.9" y="179.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.02%)</title><rect x="1102.9" y="163.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1105.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.02%)</title><rect x="1102.9" y="147.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (17 samples, 0.07%)</title><rect x="1103.1" y="195.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="1103.6" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1106.6" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="1103.6" y="163.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1106.6" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (5 samples, 0.02%)</title><rect x="1104.0" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.02%)</title><rect x="1104.0" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (5 samples, 0.02%)</title><rect x="1104.0" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.0" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1104.0" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (5 samples, 0.02%)</title><rect x="1104.0" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1107.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (5 samples, 0.02%)</title><rect x="1104.0" y="195.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1107.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.02%)</title><rect x="1104.5" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1107.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (29 samples, 0.12%)</title><rect x="1104.8" y="275.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.04%)</title><rect x="1104.8" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.02%)</title><rect x="1105.0" y="243.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1108.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.02%)</title><rect x="1105.0" y="227.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1108.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1105.2" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1105.2" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1105.2" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.03%)</title><rect x="1105.2" y="211.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1108.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (7 samples, 0.03%)</title><rect x="1105.5" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1108.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (5 samples, 0.02%)</title><rect x="1105.6" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (7 samples, 0.03%)</title><rect x="1105.9" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (7 samples, 0.03%)</title><rect x="1105.9" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1108.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (33 samples, 0.14%)</title><rect x="1106.2" y="323.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (33 samples, 0.14%)</title><rect x="1106.2" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1109.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.10%)</title><rect x="1106.2" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1109.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.10%)</title><rect x="1106.2" y="275.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.10%)</title><rect x="1106.2" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.10%)</title><rect x="1106.2" y="243.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1109.2" y="254.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="1106.2" y="227.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1109.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (10 samples, 0.04%)</title><rect x="1107.4" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.4" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="1107.4" y="275.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1110.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.proxy (546 samples, 2.34%)</title><rect x="1107.9" y="323.0" width="27.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.9" y="334.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (543 samples, 2.33%)</title><rect x="1108.1" y="307.0" width="27.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.1" y="318.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (543 samples, 2.33%)</title><rect x="1108.1" y="291.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.1" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (487 samples, 2.09%)</title><rect x="1108.3" y="275.0" width="24.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.3" y="286.0">o..</text>
</g>
<g>
<title>byte[] (258 samples, 1.11%)</title><rect x="1108.3" y="259.0" width="13.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1111.3" y="270.0"></text>
</g>
<g>
<title>byte[] (229 samples, 0.98%)</title><rect x="1121.3" y="259.0" width="11.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1124.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (44 samples, 0.19%)</title><rect x="1132.9" y="275.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (38 samples, 0.16%)</title><rect x="1133.1" y="259.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.1" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.16%)</title><rect x="1133.1" y="243.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.1" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.16%)</title><rect x="1133.1" y="227.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.1" y="238.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.09%)</title><rect x="1133.1" y="211.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1136.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="1134.1" y="211.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1137.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1134.6" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1134.6" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.03%)</title><rect x="1134.6" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.6" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="1134.6" y="163.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1137.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.02%)</title><rect x="1135.2" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.02%)</title><rect x="1135.2" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.02%)</title><rect x="1135.2" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.02%)</title><rect x="1135.2" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.2" y="238.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="1135.2" y="211.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1138.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (17 samples, 0.07%)</title><rect x="1135.5" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 0.07%)</title><rect x="1135.5" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 0.07%)</title><rect x="1135.5" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.06%)</title><rect x="1135.5" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.06%)</title><rect x="1135.5" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.5" y="270.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="1135.5" y="243.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1138.5" y="254.0"></text>
</g>
<g>
<title>[worker_7 tid=54526] (548 samples, 2.35%)</title><rect x="1136.4" y="435.0" width="27.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1139.4" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (548 samples, 2.35%)</title><rect x="1136.4" y="419.0" width="27.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.4" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (548 samples, 2.35%)</title><rect x="1136.4" y="403.0" width="27.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.4" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (548 samples, 2.35%)</title><rect x="1136.4" y="387.0" width="27.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.4" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.04%)</title><rect x="1136.4" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 0.04%)</title><rect x="1136.4" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.04%)</title><rect x="1136.4" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.04%)</title><rect x="1136.4" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (10 samples, 0.04%)</title><rect x="1136.4" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1139.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (538 samples, 2.31%)</title><rect x="1136.9" y="371.0" width="27.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.9" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (538 samples, 2.31%)</title><rect x="1136.9" y="355.0" width="27.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.9" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (538 samples, 2.31%)</title><rect x="1136.9" y="339.0" width="27.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.9" y="350.0">r..</text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="1136.9" y="323.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1139.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.08%)</title><rect x="1137.5" y="323.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.08%)</title><rect x="1137.5" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.08%)</title><rect x="1137.5" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.08%)</title><rect x="1137.5" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.5" y="286.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="1137.5" y="259.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1140.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.05%)</title><rect x="1138.5" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.05%)</title><rect x="1138.5" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.05%)</title><rect x="1138.5" y="291.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1141.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (34 samples, 0.15%)</title><rect x="1139.0" y="323.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.0" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.03%)</title><rect x="1139.0" y="307.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1142.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (27 samples, 0.12%)</title><rect x="1139.4" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.4" y="318.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="1139.4" y="291.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1142.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="1140.3" y="291.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1143.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (356 samples, 1.53%)</title><rect x="1140.8" y="323.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (41 samples, 0.18%)</title><rect x="1140.8" y="307.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (41 samples, 0.18%)</title><rect x="1140.8" y="291.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (41 samples, 0.18%)</title><rect x="1140.8" y="275.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (41 samples, 0.18%)</title><rect x="1140.8" y="259.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (41 samples, 0.18%)</title><rect x="1140.8" y="243.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (37 samples, 0.16%)</title><rect x="1141.0" y="227.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (37 samples, 0.16%)</title><rect x="1141.0" y="211.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.16%)</title><rect x="1141.0" y="195.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.16%)</title><rect x="1141.0" y="179.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1144.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (16 samples, 0.07%)</title><rect x="1142.8" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (16 samples, 0.07%)</title><rect x="1142.8" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1145.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (16 samples, 0.07%)</title><rect x="1142.8" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (16 samples, 0.07%)</title><rect x="1142.8" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1145.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (16 samples, 0.07%)</title><rect x="1142.8" y="243.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1145.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.07%)</title><rect x="1142.8" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.8" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.07%)</title><rect x="1142.8" y="211.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1145.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (17 samples, 0.07%)</title><rect x="1143.6" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.07%)</title><rect x="1143.6" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.07%)</title><rect x="1143.6" y="275.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.07%)</title><rect x="1143.6" y="259.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1146.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (15 samples, 0.06%)</title><rect x="1144.5" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.06%)</title><rect x="1144.5" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.06%)</title><rect x="1144.5" y="275.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1147.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (267 samples, 1.15%)</title><rect x="1145.3" y="307.0" width="13.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.06%)</title><rect x="1145.3" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="1145.3" y="275.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1148.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (254 samples, 1.09%)</title><rect x="1145.9" y="291.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (10 samples, 0.04%)</title><rect x="1145.9" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.9" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (10 samples, 0.04%)</title><rect x="1145.9" y="259.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1148.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (103 samples, 0.44%)</title><rect x="1146.4" y="275.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (99 samples, 0.42%)</title><rect x="1146.6" y="259.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.6" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (8 samples, 0.03%)</title><rect x="1146.6" y="243.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1149.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1147.3" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="1147.3" y="227.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1150.3" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (76 samples, 0.33%)</title><rect x="1147.8" y="243.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (76 samples, 0.33%)</title><rect x="1147.8" y="227.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (76 samples, 0.33%)</title><rect x="1147.8" y="211.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.07%)</title><rect x="1147.8" y="195.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (16 samples, 0.07%)</title><rect x="1147.8" y="179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.07%)</title><rect x="1147.8" y="163.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.07%)</title><rect x="1147.8" y="147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (10 samples, 0.04%)</title><rect x="1147.8" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (10 samples, 0.04%)</title><rect x="1147.8" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.8" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (10 samples, 0.04%)</title><rect x="1147.8" y="99.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1150.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="1148.3" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1151.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (6 samples, 0.03%)</title><rect x="1148.3" y="115.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (6 samples, 0.03%)</title><rect x="1148.3" y="99.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.03%)</title><rect x="1148.3" y="83.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1151.3" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (60 samples, 0.26%)</title><rect x="1148.6" y="195.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.6" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (18 samples, 0.08%)</title><rect x="1148.6" y="179.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1151.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="1149.5" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="1149.5" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$94/1151757377.get$Lambda (5 samples, 0.02%)</title><rect x="1149.5" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.5" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$94 (5 samples, 0.02%)</title><rect x="1149.5" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1152.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.02%)</title><rect x="1149.9" y="179.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (5 samples, 0.02%)</title><rect x="1149.9" y="163.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.9" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (5 samples, 0.02%)</title><rect x="1149.9" y="147.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1152.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (30 samples, 0.13%)</title><rect x="1150.1" y="179.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.1" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.13%)</title><rect x="1150.1" y="163.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1153.1" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.04%)</title><rect x="1151.6" y="275.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1154.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1152.1" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1155.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="1152.1" y="259.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1155.1" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (15 samples, 0.06%)</title><rect x="1152.4" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.4" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (15 samples, 0.06%)</title><rect x="1152.4" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.4" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (15 samples, 0.06%)</title><rect x="1152.4" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.4" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (15 samples, 0.06%)</title><rect x="1152.4" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (15 samples, 0.06%)</title><rect x="1152.4" y="211.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (15 samples, 0.06%)</title><rect x="1152.4" y="195.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1155.4" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (11 samples, 0.05%)</title><rect x="1153.3" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (11 samples, 0.05%)</title><rect x="1153.3" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.3" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (11 samples, 0.05%)</title><rect x="1153.3" y="243.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1156.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.04%)</title><rect x="1153.9" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.02%)</title><rect x="1153.9" y="259.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1156.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1154.1" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.02%)</title><rect x="1154.1" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.02%)</title><rect x="1154.1" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.1" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.02%)</title><rect x="1154.1" y="211.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.02%)</title><rect x="1154.1" y="195.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.02%)</title><rect x="1154.1" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.02%)</title><rect x="1154.1" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (5 samples, 0.02%)</title><rect x="1154.1" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.02%)</title><rect x="1154.1" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.02%)</title><rect x="1154.1" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.02%)</title><rect x="1154.1" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (5 samples, 0.02%)</title><rect x="1154.1" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (5 samples, 0.02%)</title><rect x="1154.1" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (5 samples, 0.02%)</title><rect x="1154.1" y="51.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1157.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (87 samples, 0.37%)</title><rect x="1154.4" y="275.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (25 samples, 0.11%)</title><rect x="1154.4" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.03%)</title><rect x="1154.4" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.03%)</title><rect x="1154.4" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1157.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (19 samples, 0.08%)</title><rect x="1154.7" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (19 samples, 0.08%)</title><rect x="1154.7" y="227.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1157.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1155.8" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1155.8" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1155.8" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.8" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.03%)</title><rect x="1155.8" y="211.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1158.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (31 samples, 0.13%)</title><rect x="1156.1" y="259.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.1" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (6 samples, 0.03%)</title><rect x="1156.1" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.1" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (6 samples, 0.03%)</title><rect x="1156.1" y="227.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1159.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (25 samples, 0.11%)</title><rect x="1156.4" y="243.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="1156.4" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="1156.4" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (12 samples, 0.05%)</title><rect x="1156.4" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (12 samples, 0.05%)</title><rect x="1156.4" y="179.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1159.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (13 samples, 0.06%)</title><rect x="1157.1" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (13 samples, 0.06%)</title><rect x="1157.1" y="211.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1160.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (21 samples, 0.09%)</title><rect x="1157.7" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.7" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (21 samples, 0.09%)</title><rect x="1157.7" y="243.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1160.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (60 samples, 0.26%)</title><rect x="1158.8" y="323.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (60 samples, 0.26%)</title><rect x="1158.8" y="307.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (35 samples, 0.15%)</title><rect x="1158.8" y="291.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (35 samples, 0.15%)</title><rect x="1158.8" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (35 samples, 0.15%)</title><rect x="1158.8" y="259.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.15%)</title><rect x="1158.8" y="243.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.8" y="254.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.15%)</title><rect x="1158.8" y="227.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1161.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (25 samples, 0.11%)</title><rect x="1160.5" y="291.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1163.5" y="302.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="1160.5" y="275.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1163.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (46 samples, 0.20%)</title><rect x="1161.8" y="323.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 0.20%)</title><rect x="1161.8" y="307.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 0.20%)</title><rect x="1161.8" y="291.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (43 samples, 0.18%)</title><rect x="1161.8" y="275.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (43 samples, 0.18%)</title><rect x="1161.8" y="259.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.8" y="270.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.18%)</title><rect x="1161.8" y="243.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1164.8" y="254.0"></text>
</g>
<g>
<title>[worker_7 tid=54528] (511 samples, 2.19%)</title><rect x="1164.1" y="435.0" width="25.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1167.1" y="446.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (511 samples, 2.19%)</title><rect x="1164.1" y="419.0" width="25.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (511 samples, 2.19%)</title><rect x="1164.1" y="403.0" width="25.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (511 samples, 2.19%)</title><rect x="1164.1" y="387.0" width="25.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.04%)</title><rect x="1164.1" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 0.04%)</title><rect x="1164.1" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.04%)</title><rect x="1164.1" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.04%)</title><rect x="1164.1" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.04%)</title><rect x="1164.1" y="307.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1167.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$74/2097645333.run (501 samples, 2.15%)</title><rect x="1164.6" y="371.0" width="25.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.6" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$1 (501 samples, 2.15%)</title><rect x="1164.6" y="355.0" width="25.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.6" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (501 samples, 2.15%)</title><rect x="1164.6" y="339.0" width="25.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.6" y="350.0">r..</text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="1164.6" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1167.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.05%)</title><rect x="1165.3" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.05%)</title><rect x="1165.3" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.05%)</title><rect x="1165.3" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.05%)</title><rect x="1165.3" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.3" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="1165.3" y="259.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1168.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.07%)</title><rect x="1165.8" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.07%)</title><rect x="1165.8" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.07%)</title><rect x="1165.8" y="291.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1168.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (30 samples, 0.13%)</title><rect x="1166.6" y="323.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.6" y="334.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.03%)</title><rect x="1166.6" y="307.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1169.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.10%)</title><rect x="1167.0" y="307.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.0" y="318.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="1167.0" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1170.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.05%)</title><rect x="1167.3" y="291.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1170.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="1167.8" y="291.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1170.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (355 samples, 1.52%)</title><rect x="1168.1" y="323.0" width="18.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (30 samples, 0.13%)</title><rect x="1168.1" y="307.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (30 samples, 0.13%)</title><rect x="1168.1" y="291.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (30 samples, 0.13%)</title><rect x="1168.1" y="275.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (30 samples, 0.13%)</title><rect x="1168.1" y="259.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (30 samples, 0.13%)</title><rect x="1168.1" y="243.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.03%)</title><rect x="1168.1" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1171.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.03%)</title><rect x="1168.1" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1171.1" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.03%)</title><rect x="1168.1" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.03%)</title><rect x="1168.1" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.03%)</title><rect x="1168.1" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.03%)</title><rect x="1168.1" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (7 samples, 0.03%)</title><rect x="1168.1" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.03%)</title><rect x="1168.1" y="115.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.03%)</title><rect x="1168.1" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.1" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.03%)</title><rect x="1168.1" y="83.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (7 samples, 0.03%)</title><rect x="1168.1" y="67.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (7 samples, 0.03%)</title><rect x="1168.1" y="51.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1171.1" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (7 samples, 0.03%)</title><rect x="1168.1" y="35.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1171.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$98/1290803999.apply (23 samples, 0.10%)</title><rect x="1168.5" y="227.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1171.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (23 samples, 0.10%)</title><rect x="1168.5" y="211.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (23 samples, 0.10%)</title><rect x="1168.5" y="195.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.10%)</title><rect x="1168.5" y="179.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1171.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (13 samples, 0.06%)</title><rect x="1169.7" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (13 samples, 0.06%)</title><rect x="1169.7" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1172.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$108/211852448.apply (13 samples, 0.06%)</title><rect x="1169.7" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (13 samples, 0.06%)</title><rect x="1169.7" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (13 samples, 0.06%)</title><rect x="1169.7" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.06%)</title><rect x="1169.7" y="227.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.7" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.06%)</title><rect x="1169.7" y="211.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1172.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (10 samples, 0.04%)</title><rect x="1170.3" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1173.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (10 samples, 0.04%)</title><rect x="1170.3" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.3" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.04%)</title><rect x="1170.3" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.3" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.04%)</title><rect x="1170.3" y="259.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1173.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (14 samples, 0.06%)</title><rect x="1170.8" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.06%)</title><rect x="1170.8" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1173.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.06%)</title><rect x="1170.8" y="275.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1173.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (288 samples, 1.24%)</title><rect x="1171.5" y="307.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1174.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.03%)</title><rect x="1171.5" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.03%)</title><rect x="1171.5" y="275.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1174.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (281 samples, 1.21%)</title><rect x="1171.9" y="291.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (13 samples, 0.06%)</title><rect x="1171.9" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.9" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (13 samples, 0.06%)</title><rect x="1171.9" y="259.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1174.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (87 samples, 0.37%)</title><rect x="1172.5" y="275.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (84 samples, 0.36%)</title><rect x="1172.7" y="259.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.7" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.03%)</title><rect x="1172.7" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1175.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.03%)</title><rect x="1173.0" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.0" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.03%)</title><rect x="1173.0" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1176.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1173.6" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="1173.6" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1176.6" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (61 samples, 0.26%)</title><rect x="1173.9" y="243.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (61 samples, 0.26%)</title><rect x="1173.9" y="227.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (61 samples, 0.26%)</title><rect x="1173.9" y="211.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1176.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.06%)</title><rect x="1173.9" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1176.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (13 samples, 0.06%)</title><rect x="1173.9" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.06%)</title><rect x="1173.9" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.06%)</title><rect x="1173.9" y="147.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.03%)</title><rect x="1173.9" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.03%)</title><rect x="1173.9" y="115.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1176.9" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (8 samples, 0.03%)</title><rect x="1173.9" y="99.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1176.9" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.02%)</title><rect x="1174.3" y="131.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (5 samples, 0.02%)</title><rect x="1174.3" y="115.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1177.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (5 samples, 0.02%)</title><rect x="1174.3" y="99.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (5 samples, 0.02%)</title><rect x="1174.3" y="83.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1177.3" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (48 samples, 0.21%)</title><rect x="1174.5" y="195.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.03%)</title><rect x="1174.5" y="179.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1177.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="1174.9" y="179.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="1174.9" y="163.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.04%)</title><rect x="1175.1" y="179.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (10 samples, 0.04%)</title><rect x="1175.1" y="163.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.1" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (10 samples, 0.04%)</title><rect x="1175.1" y="147.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1178.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (26 samples, 0.11%)</title><rect x="1175.6" y="179.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.6" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.11%)</title><rect x="1175.6" y="163.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1178.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1177.0" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="1177.0" y="259.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1180.0" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (17 samples, 0.07%)</title><rect x="1177.3" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.3" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (17 samples, 0.07%)</title><rect x="1177.3" y="259.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.3" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (17 samples, 0.07%)</title><rect x="1177.3" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.3" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (17 samples, 0.07%)</title><rect x="1177.3" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (17 samples, 0.07%)</title><rect x="1177.3" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (17 samples, 0.07%)</title><rect x="1177.3" y="195.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1180.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.values (6 samples, 0.03%)</title><rect x="1178.2" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableCollection (6 samples, 0.03%)</title><rect x="1178.2" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.2" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection (6 samples, 0.03%)</title><rect x="1178.2" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1181.2" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (10 samples, 0.04%)</title><rect x="1178.5" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (10 samples, 0.04%)</title><rect x="1178.5" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.5" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (10 samples, 0.04%)</title><rect x="1178.5" y="243.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1181.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.07%)</title><rect x="1179.0" y="275.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.04%)</title><rect x="1179.0" y="259.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1182.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.03%)</title><rect x="1179.5" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1182.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.03%)</title><rect x="1179.5" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1182.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.03%)</title><rect x="1179.5" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.03%)</title><rect x="1179.5" y="211.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.03%)</title><rect x="1179.5" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.03%)</title><rect x="1179.5" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1182.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.03%)</title><rect x="1179.5" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2033595524.getAsBoolean (7 samples, 0.03%)</title><rect x="1179.5" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1182.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.03%)</title><rect x="1179.5" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.03%)</title><rect x="1179.5" y="115.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.03%)</title><rect x="1179.5" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1182.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$82/1583309389.apply (7 samples, 0.03%)</title><rect x="1179.5" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1182.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (7 samples, 0.03%)</title><rect x="1179.5" y="67.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1182.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (7 samples, 0.03%)</title><rect x="1179.5" y="51.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1182.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (124 samples, 0.53%)</title><rect x="1179.8" y="275.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (28 samples, 0.12%)</title><rect x="1179.8" y="259.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (12 samples, 0.05%)</title><rect x="1179.8" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (12 samples, 0.05%)</title><rect x="1179.8" y="227.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1182.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.07%)</title><rect x="1180.4" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.07%)</title><rect x="1180.4" y="227.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1183.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.03%)</title><rect x="1181.4" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.03%)</title><rect x="1181.4" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.03%)</title><rect x="1181.4" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1184.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (8 samples, 0.03%)</title><rect x="1181.4" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1184.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (50 samples, 0.21%)</title><rect x="1181.8" y="259.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (12 samples, 0.05%)</title><rect x="1181.8" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.8" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (12 samples, 0.05%)</title><rect x="1181.8" y="227.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1184.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (38 samples, 0.16%)</title><rect x="1182.4" y="243.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="1182.4" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="1182.4" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$84/1516305758.get$Lambda (7 samples, 0.03%)</title><rect x="1182.4" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$84 (7 samples, 0.03%)</title><rect x="1182.4" y="179.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1185.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (31 samples, 0.13%)</title><rect x="1182.8" y="227.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (31 samples, 0.13%)</title><rect x="1182.8" y="211.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1185.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (35 samples, 0.15%)</title><rect x="1184.3" y="259.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.3" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (35 samples, 0.15%)</title><rect x="1184.3" y="243.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1187.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (39 samples, 0.17%)</title><rect x="1186.1" y="323.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getRightNodeForKey (39 samples, 0.17%)</title><rect x="1186.1" y="307.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (25 samples, 0.11%)</title><rect x="1186.1" y="291.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (25 samples, 0.11%)</title><rect x="1186.1" y="275.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (25 samples, 0.11%)</title><rect x="1186.1" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.11%)</title><rect x="1186.1" y="243.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.1" y="254.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="1186.1" y="227.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1189.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getBytes (14 samples, 0.06%)</title><rect x="1187.4" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.4" y="302.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="1187.4" y="275.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1190.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.sendResponse (38 samples, 0.16%)</title><rect x="1188.1" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (38 samples, 0.16%)</title><rect x="1188.1" y="307.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (38 samples, 0.16%)</title><rect x="1188.1" y="291.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26 samples, 0.11%)</title><rect x="1188.1" y="275.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (26 samples, 0.11%)</title><rect x="1188.1" y="259.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.1" y="270.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="1188.1" y="243.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1191.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.05%)</title><rect x="1189.4" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.4" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.05%)</title><rect x="1189.4" y="259.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1192.4" y="270.0"></text>
</g>
</g>
</svg>
