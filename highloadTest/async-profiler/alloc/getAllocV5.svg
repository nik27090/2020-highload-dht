<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="485"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="485"> </text>
<g id="frames">
<g>
<title>all (124,277 samples, 100.00%)</title><rect x="10.0" y="451.0" width="1180.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="462.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (70,349 samples, 56.61%)</title><rect x="10.0" y="435.0" width="668.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="446.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (70,349 samples, 56.61%)</title><rect x="10.0" y="419.0" width="668.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="430.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (70,349 samples, 56.61%)</title><rect x="10.0" y="403.0" width="668.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="414.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (783 samples, 0.63%)</title><rect x="10.0" y="387.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (783 samples, 0.63%)</title><rect x="10.0" y="371.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (768 samples, 0.62%)</title><rect x="10.0" y="355.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (768 samples, 0.62%)</title><rect x="10.0" y="339.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (768 samples, 0.62%)</title><rect x="10.0" y="323.0" width="7.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$73/534297806.run (69,566 samples, 55.98%)</title><rect x="17.4" y="387.0" width="660.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.4" y="398.0">ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$73/534297806.run</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$requestHandler$1 (69,566 samples, 55.98%)</title><rect x="17.4" y="371.0" width="660.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.4" y="382.0">ru/mail/polis/service/nik27090/ServiceImpl.lambda$requestHandler$1</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.parseAckFrom (1,120 samples, 0.90%)</title><rect x="17.4" y="355.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.4" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.AckFrom (1,120 samples, 0.90%)</title><rect x="17.4" y="339.0" width="10.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="20.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor (68,446 samples, 55.08%)</title><rect x="28.1" y="355.0" width="649.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.1" y="366.0">ru/mail/polis/service/nik27090/ServiceImpl.getEntityExecutor</text>
</g>
<g>
<title>java/lang/String.getBytes (379 samples, 0.30%)</title><rect x="28.1" y="339.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (379 samples, 0.30%)</title><rect x="28.1" y="323.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (379 samples, 0.30%)</title><rect x="28.1" y="307.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (379 samples, 0.30%)</title><rect x="28.1" y="291.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.1" y="302.0"></text>
</g>
<g>
<title>byte[] (379 samples, 0.30%)</title><rect x="28.1" y="275.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="31.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (832 samples, 0.67%)</title><rect x="31.7" y="339.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (832 samples, 0.67%)</title><rect x="31.7" y="323.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (832 samples, 0.67%)</title><rect x="31.7" y="307.0" width="7.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="34.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (229 samples, 0.18%)</title><rect x="39.6" y="339.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (229 samples, 0.18%)</title><rect x="39.6" y="323.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (85 samples, 0.07%)</title><rect x="39.6" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.6" y="318.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (85 samples, 0.07%)</title><rect x="39.6" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.6" y="302.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (85 samples, 0.07%)</title><rect x="39.6" y="275.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="42.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (144 samples, 0.12%)</title><rect x="40.4" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (144 samples, 0.12%)</title><rect x="40.4" y="291.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="43.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (108 samples, 0.09%)</title><rect x="41.7" y="339.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (32 samples, 0.03%)</title><rect x="41.7" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.7" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (32 samples, 0.03%)</title><rect x="41.7" y="307.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="44.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (76 samples, 0.06%)</title><rect x="42.0" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.0" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (76 samples, 0.06%)</title><rect x="42.0" y="307.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="45.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (116 samples, 0.09%)</title><rect x="42.8" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (116 samples, 0.09%)</title><rect x="42.8" y="323.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="45.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (468 samples, 0.38%)</title><rect x="43.9" y="339.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (468 samples, 0.38%)</title><rect x="43.9" y="323.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (468 samples, 0.38%)</title><rect x="43.9" y="307.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (355 samples, 0.29%)</title><rect x="43.9" y="291.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (322 samples, 0.26%)</title><rect x="43.9" y="275.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.9" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (69 samples, 0.06%)</title><rect x="43.9" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (69 samples, 0.06%)</title><rect x="43.9" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (69 samples, 0.06%)</title><rect x="43.9" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$86/1156721799.accept (69 samples, 0.06%)</title><rect x="43.9" y="211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (69 samples, 0.06%)</title><rect x="43.9" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (69 samples, 0.06%)</title><rect x="43.9" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.9" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (69 samples, 0.06%)</title><rect x="43.9" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (69 samples, 0.06%)</title><rect x="43.9" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.9" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (69 samples, 0.06%)</title><rect x="43.9" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.9" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (69 samples, 0.06%)</title><rect x="43.9" y="115.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="46.9" y="126.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (141 samples, 0.11%)</title><rect x="44.5" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (141 samples, 0.11%)</title><rect x="44.5" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$86/1156721799.accept (141 samples, 0.11%)</title><rect x="44.5" y="227.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.5" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (141 samples, 0.11%)</title><rect x="44.5" y="211.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (141 samples, 0.11%)</title><rect x="44.5" y="195.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (141 samples, 0.11%)</title><rect x="44.5" y="179.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.5" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (141 samples, 0.11%)</title><rect x="44.5" y="163.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (141 samples, 0.11%)</title><rect x="44.5" y="147.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (141 samples, 0.11%)</title><rect x="44.5" y="131.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="47.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (75 samples, 0.06%)</title><rect x="45.9" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$79/437290203.get (75 samples, 0.06%)</title><rect x="45.9" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.9" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (75 samples, 0.06%)</title><rect x="45.9" y="227.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="48.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (37 samples, 0.03%)</title><rect x="46.6" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (37 samples, 0.03%)</title><rect x="46.6" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$79/437290203.get (37 samples, 0.03%)</title><rect x="46.6" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.6" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.03%)</title><rect x="46.6" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="49.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (33 samples, 0.03%)</title><rect x="46.9" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (33 samples, 0.03%)</title><rect x="46.9" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.9" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (33 samples, 0.03%)</title><rect x="46.9" y="243.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="49.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (113 samples, 0.09%)</title><rect x="47.2" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (113 samples, 0.09%)</title><rect x="47.2" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (113 samples, 0.09%)</title><rect x="47.2" y="259.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="50.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (69 samples, 0.06%)</title><rect x="48.3" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (69 samples, 0.06%)</title><rect x="48.3" y="323.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="51.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper.getEntity (43,229 samples, 34.78%)</title><rect x="49.0" y="339.0" width="410.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.0" y="350.0">ru/mail/polis/service/nik27090/DaoHelper.getEntity</text>
</g>
<g>
<title>byte[] (595 samples, 0.48%)</title><rect x="49.0" y="323.0" width="5.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="52.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/686792785.linkToTargetMethod (1,177 samples, 0.95%)</title><rect x="54.6" y="323.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/637420610.invoke (1,177 samples, 0.95%)</title><rect x="54.6" y="307.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,177 samples, 0.95%)</title><rect x="54.6" y="291.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (460 samples, 0.37%)</title><rect x="54.6" y="275.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (460 samples, 0.37%)</title><rect x="54.6" y="259.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="57.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (717 samples, 0.58%)</title><rect x="59.0" y="275.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (717 samples, 0.58%)</title><rect x="59.0" y="259.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.0" y="270.0"></text>
</g>
<g>
<title>byte[] (717 samples, 0.58%)</title><rect x="59.0" y="243.0" width="6.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="62.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (767 samples, 0.62%)</title><rect x="65.8" y="323.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (767 samples, 0.62%)</title><rect x="65.8" y="307.0" width="7.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="68.8" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (436 samples, 0.35%)</title><rect x="73.1" y="323.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="76.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,750 samples, 1.41%)</title><rect x="77.2" y="323.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>byte[] (737 samples, 0.59%)</title><rect x="77.2" y="307.0" width="7.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String[] (586 samples, 0.47%)</title><rect x="84.2" y="307.0" width="5.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="87.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (427 samples, 0.34%)</title><rect x="89.8" y="307.0" width="4.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="92.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (21,011 samples, 16.91%)</title><rect x="93.8" y="323.0" width="199.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.8" y="334.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2,153 samples, 1.73%)</title><rect x="93.8" y="307.0" width="20.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2,153 samples, 1.73%)</title><rect x="93.8" y="291.0" width="20.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2,153 samples, 1.73%)</title><rect x="93.8" y="275.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2,153 samples, 1.73%)</title><rect x="93.8" y="259.0" width="20.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,153 samples, 1.73%)</title><rect x="93.8" y="243.0" width="20.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (422 samples, 0.34%)</title><rect x="93.8" y="227.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (422 samples, 0.34%)</title><rect x="93.8" y="211.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.8" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (422 samples, 0.34%)</title><rect x="93.8" y="195.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (422 samples, 0.34%)</title><rect x="93.8" y="179.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (422 samples, 0.34%)</title><rect x="93.8" y="163.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (422 samples, 0.34%)</title><rect x="93.8" y="147.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (422 samples, 0.34%)</title><rect x="93.8" y="131.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (422 samples, 0.34%)</title><rect x="93.8" y="115.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (422 samples, 0.34%)</title><rect x="93.8" y="99.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (422 samples, 0.34%)</title><rect x="93.8" y="83.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (422 samples, 0.34%)</title><rect x="93.8" y="67.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (422 samples, 0.34%)</title><rect x="93.8" y="51.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (422 samples, 0.34%)</title><rect x="93.8" y="35.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="96.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$157/879983192.apply (1,731 samples, 1.39%)</title><rect x="97.8" y="227.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (1,731 samples, 1.39%)</title><rect x="97.8" y="211.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,731 samples, 1.39%)</title><rect x="97.8" y="195.0" width="16.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.8" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,731 samples, 1.39%)</title><rect x="97.8" y="179.0" width="16.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="100.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1,198 samples, 0.96%)</title><rect x="114.3" y="307.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1,198 samples, 0.96%)</title><rect x="114.3" y="291.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$160/427024508.apply (1,198 samples, 0.96%)</title><rect x="114.3" y="275.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$iterator$2 (1,198 samples, 0.96%)</title><rect x="114.3" y="259.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (350 samples, 0.28%)</title><rect x="114.3" y="243.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.3" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (350 samples, 0.28%)</title><rect x="114.3" y="227.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="117.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (848 samples, 0.68%)</title><rect x="117.6" y="243.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (848 samples, 0.68%)</title><rect x="117.6" y="227.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.6" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (848 samples, 0.68%)</title><rect x="117.6" y="211.0" width="8.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="120.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (891 samples, 0.72%)</title><rect x="125.6" y="307.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (891 samples, 0.72%)</title><rect x="125.6" y="291.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (891 samples, 0.72%)</title><rect x="125.6" y="275.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (891 samples, 0.72%)</title><rect x="125.6" y="259.0" width="8.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="128.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (693 samples, 0.56%)</title><rect x="134.1" y="307.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (693 samples, 0.56%)</title><rect x="134.1" y="291.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.1" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (693 samples, 0.56%)</title><rect x="134.1" y="275.0" width="6.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="137.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (16,076 samples, 12.94%)</title><rect x="140.7" y="307.0" width="152.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.7" y="318.0">ru/mail/polis/dao/n..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (65 samples, 0.05%)</title><rect x="140.7" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.7" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (65 samples, 0.05%)</title><rect x="140.7" y="275.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="143.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (835 samples, 0.67%)</title><rect x="141.3" y="291.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (835 samples, 0.67%)</title><rect x="141.3" y="275.0" width="7.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="144.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (15,176 samples, 12.21%)</title><rect x="149.2" y="291.0" width="144.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.2" y="302.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (552 samples, 0.44%)</title><rect x="149.2" y="275.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (552 samples, 0.44%)</title><rect x="149.2" y="259.0" width="5.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="152.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,777 samples, 4.65%)</title><rect x="154.5" y="275.0" width="54.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.5" y="286.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (322 samples, 0.26%)</title><rect x="154.5" y="259.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="157.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,455 samples, 4.39%)</title><rect x="157.5" y="259.0" width="51.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.5" y="270.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (407 samples, 0.33%)</title><rect x="157.5" y="243.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="160.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (468 samples, 0.38%)</title><rect x="161.4" y="243.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.4" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (468 samples, 0.38%)</title><rect x="161.4" y="227.0" width="4.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="164.4" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (587 samples, 0.47%)</title><rect x="165.8" y="243.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="168.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (409 samples, 0.33%)</title><rect x="171.4" y="243.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (409 samples, 0.33%)</title><rect x="171.4" y="227.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="174.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3,584 samples, 2.88%)</title><rect x="175.3" y="243.0" width="34.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.3" y="254.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3,584 samples, 2.88%)</title><rect x="175.3" y="227.0" width="34.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.3" y="238.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3,584 samples, 2.88%)</title><rect x="175.3" y="211.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.3" y="222.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (446 samples, 0.36%)</title><rect x="175.3" y="195.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (446 samples, 0.36%)</title><rect x="175.3" y="179.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (446 samples, 0.36%)</title><rect x="175.3" y="163.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (446 samples, 0.36%)</title><rect x="175.3" y="147.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (446 samples, 0.36%)</title><rect x="175.3" y="131.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (446 samples, 0.36%)</title><rect x="175.3" y="115.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (446 samples, 0.36%)</title><rect x="175.3" y="99.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (446 samples, 0.36%)</title><rect x="175.3" y="83.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="178.3" y="94.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3,138 samples, 2.53%)</title><rect x="179.5" y="195.0" width="29.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.5" y="206.0">ja..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (739 samples, 0.59%)</title><rect x="179.5" y="179.0" width="7.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="182.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (552 samples, 0.44%)</title><rect x="186.5" y="179.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (552 samples, 0.44%)</title><rect x="186.5" y="163.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$143/1281519691.get$Lambda (297 samples, 0.24%)</title><rect x="186.5" y="147.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.5" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$143 (297 samples, 0.24%)</title><rect x="186.5" y="131.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="189.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.get$Lambda (255 samples, 0.21%)</title><rect x="189.4" y="147.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.4" y="158.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$147 (255 samples, 0.21%)</title><rect x="189.4" y="131.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="192.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (412 samples, 0.33%)</title><rect x="191.8" y="179.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (412 samples, 0.33%)</title><rect x="191.8" y="163.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.8" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (412 samples, 0.33%)</title><rect x="191.8" y="147.0" width="3.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="194.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (1,435 samples, 1.15%)</title><rect x="195.7" y="179.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,435 samples, 1.15%)</title><rect x="195.7" y="163.0" width="13.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="198.7" y="174.0"></text>
</g>
<g>
<title>java.util.ArrayList (421 samples, 0.34%)</title><rect x="209.3" y="275.0" width="4.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="212.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (397 samples, 0.32%)</title><rect x="213.3" y="275.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (397 samples, 0.32%)</title><rect x="213.3" y="259.0" width="3.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="216.3" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,018 samples, 0.82%)</title><rect x="217.1" y="275.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.1" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,018 samples, 0.82%)</title><rect x="217.1" y="259.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="220.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1,018 samples, 0.82%)</title><rect x="217.1" y="243.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.1" y="254.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (327 samples, 0.26%)</title><rect x="217.1" y="227.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="220.1" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (691 samples, 0.56%)</title><rect x="220.2" y="227.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (691 samples, 0.56%)</title><rect x="220.2" y="211.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (691 samples, 0.56%)</title><rect x="220.2" y="195.0" width="6.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="223.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.values (288 samples, 0.23%)</title><rect x="226.8" y="275.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableCollection (288 samples, 0.23%)</title><rect x="226.8" y="259.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.8" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection (288 samples, 0.23%)</title><rect x="226.8" y="243.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="229.8" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (617 samples, 0.50%)</title><rect x="229.5" y="275.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="232.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (617 samples, 0.50%)</title><rect x="229.5" y="259.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.5" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (617 samples, 0.50%)</title><rect x="229.5" y="243.0" width="5.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="232.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (28 samples, 0.02%)</title><rect x="235.4" y="275.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (28 samples, 0.02%)</title><rect x="235.4" y="259.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireShared (27 samples, 0.02%)</title><rect x="235.4" y="243.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (27 samples, 0.02%)</title><rect x="235.4" y="227.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (27 samples, 0.02%)</title><rect x="235.4" y="211.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="238.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (792 samples, 0.64%)</title><rect x="235.6" y="275.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (392 samples, 0.32%)</title><rect x="235.6" y="259.0" width="3.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="238.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (400 samples, 0.32%)</title><rect x="239.3" y="259.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (400 samples, 0.32%)</title><rect x="239.3" y="243.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (400 samples, 0.32%)</title><rect x="239.3" y="227.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.3" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (400 samples, 0.32%)</title><rect x="239.3" y="211.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (400 samples, 0.32%)</title><rect x="239.3" y="195.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (400 samples, 0.32%)</title><rect x="239.3" y="179.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (400 samples, 0.32%)</title><rect x="239.3" y="163.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (400 samples, 0.32%)</title><rect x="239.3" y="147.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (400 samples, 0.32%)</title><rect x="239.3" y="131.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (400 samples, 0.32%)</title><rect x="239.3" y="115.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (400 samples, 0.32%)</title><rect x="239.3" y="99.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (400 samples, 0.32%)</title><rect x="239.3" y="83.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (400 samples, 0.32%)</title><rect x="239.3" y="67.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (400 samples, 0.32%)</title><rect x="239.3" y="51.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="242.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (5,286 samples, 4.25%)</title><rect x="243.1" y="275.0" width="50.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.1" y="286.0">ru/ma..</text>
</g>
<g>
<title>java/util/Collection.stream (1,479 samples, 1.19%)</title><rect x="243.1" y="259.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (525 samples, 0.42%)</title><rect x="243.1" y="243.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.1" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (525 samples, 0.42%)</title><rect x="243.1" y="227.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="246.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (954 samples, 0.77%)</title><rect x="248.1" y="243.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (954 samples, 0.77%)</title><rect x="248.1" y="227.0" width="9.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="251.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (265 samples, 0.21%)</title><rect x="257.2" y="259.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (265 samples, 0.21%)</title><rect x="257.2" y="243.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="260.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (819 samples, 0.66%)</title><rect x="259.7" y="259.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (819 samples, 0.66%)</title><rect x="259.7" y="243.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (819 samples, 0.66%)</title><rect x="259.7" y="227.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (819 samples, 0.66%)</title><rect x="259.7" y="211.0" width="7.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="262.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (1,598 samples, 1.29%)</title><rect x="267.5" y="259.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (390 samples, 0.31%)</title><rect x="267.5" y="243.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.5" y="254.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (390 samples, 0.31%)</title><rect x="267.5" y="227.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="270.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (1,208 samples, 0.97%)</title><rect x="271.2" y="243.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (315 samples, 0.25%)</title><rect x="271.2" y="227.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (315 samples, 0.25%)</title><rect x="271.2" y="211.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$107/801053230.get$Lambda (315 samples, 0.25%)</title><rect x="271.2" y="195.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.2" y="206.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$107 (315 samples, 0.25%)</title><rect x="271.2" y="179.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="274.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (893 samples, 0.72%)</title><rect x="274.2" y="227.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (893 samples, 0.72%)</title><rect x="274.2" y="211.0" width="8.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="277.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,125 samples, 0.91%)</title><rect x="282.6" y="259.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.6" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (1,125 samples, 0.91%)</title><rect x="282.6" y="243.0" width="10.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="285.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getCell (17,493 samples, 14.08%)</title><rect x="293.3" y="323.0" width="166.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.3" y="334.0">ru/mail/polis/dao/nik..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,061 samples, 1.66%)</title><rect x="293.3" y="307.0" width="19.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (405 samples, 0.33%)</title><rect x="293.3" y="291.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (405 samples, 0.33%)</title><rect x="293.3" y="275.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.3" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (405 samples, 0.33%)</title><rect x="293.3" y="259.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (405 samples, 0.33%)</title><rect x="293.3" y="243.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (405 samples, 0.33%)</title><rect x="293.3" y="227.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (405 samples, 0.33%)</title><rect x="293.3" y="211.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (405 samples, 0.33%)</title><rect x="293.3" y="195.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (405 samples, 0.33%)</title><rect x="293.3" y="179.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (405 samples, 0.33%)</title><rect x="293.3" y="163.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (405 samples, 0.33%)</title><rect x="293.3" y="147.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (405 samples, 0.33%)</title><rect x="293.3" y="131.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (405 samples, 0.33%)</title><rect x="293.3" y="115.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (405 samples, 0.33%)</title><rect x="293.3" y="99.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="296.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$151/358634853.apply (1,656 samples, 1.33%)</title><rect x="297.2" y="291.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (1,656 samples, 1.33%)</title><rect x="297.2" y="275.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,656 samples, 1.33%)</title><rect x="297.2" y="259.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,656 samples, 1.33%)</title><rect x="297.2" y="243.0" width="15.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="300.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (825 samples, 0.66%)</title><rect x="312.9" y="307.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (825 samples, 0.66%)</title><rect x="312.9" y="291.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (825 samples, 0.66%)</title><rect x="312.9" y="275.0" width="7.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="315.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getIterator (14,607 samples, 11.75%)</title><rect x="320.7" y="307.0" width="138.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.7" y="318.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,540 samples, 4.46%)</title><rect x="320.7" y="291.0" width="52.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.7" y="302.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (287 samples, 0.23%)</title><rect x="320.7" y="275.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="323.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,253 samples, 4.23%)</title><rect x="323.5" y="275.0" width="49.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.5" y="286.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (418 samples, 0.34%)</title><rect x="323.5" y="259.0" width="3.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="326.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (397 samples, 0.32%)</title><rect x="327.4" y="259.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.4" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (397 samples, 0.32%)</title><rect x="327.4" y="243.0" width="3.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="330.4" y="254.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (536 samples, 0.43%)</title><rect x="331.2" y="259.0" width="5.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="334.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (398 samples, 0.32%)</title><rect x="336.3" y="259.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (398 samples, 0.32%)</title><rect x="336.3" y="243.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="339.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3,504 samples, 2.82%)</title><rect x="340.1" y="259.0" width="33.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.1" y="270.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3,504 samples, 2.82%)</title><rect x="340.1" y="243.0" width="33.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.1" y="254.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3,504 samples, 2.82%)</title><rect x="340.1" y="227.0" width="33.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.1" y="238.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (440 samples, 0.35%)</title><rect x="340.1" y="211.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (440 samples, 0.35%)</title><rect x="340.1" y="195.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (440 samples, 0.35%)</title><rect x="340.1" y="179.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (440 samples, 0.35%)</title><rect x="340.1" y="163.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (440 samples, 0.35%)</title><rect x="340.1" y="147.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (440 samples, 0.35%)</title><rect x="340.1" y="131.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (440 samples, 0.35%)</title><rect x="340.1" y="115.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.1" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (440 samples, 0.35%)</title><rect x="340.1" y="99.0" width="4.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="343.1" y="110.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3,064 samples, 2.47%)</title><rect x="344.2" y="211.0" width="29.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.2" y="222.0">ja..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (706 samples, 0.57%)</title><rect x="344.2" y="195.0" width="6.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="347.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (569 samples, 0.46%)</title><rect x="350.9" y="195.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (569 samples, 0.46%)</title><rect x="350.9" y="179.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$143/1281519691.get$Lambda (301 samples, 0.24%)</title><rect x="350.9" y="163.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.9" y="174.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$143 (301 samples, 0.24%)</title><rect x="350.9" y="147.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="353.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.get$Lambda (268 samples, 0.22%)</title><rect x="353.8" y="163.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.8" y="174.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$147 (268 samples, 0.22%)</title><rect x="353.8" y="147.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="356.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (377 samples, 0.30%)</title><rect x="356.3" y="195.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (377 samples, 0.30%)</title><rect x="356.3" y="179.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.3" y="190.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (377 samples, 0.30%)</title><rect x="356.3" y="163.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="359.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (1,412 samples, 1.14%)</title><rect x="359.9" y="195.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="362.9" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,412 samples, 1.14%)</title><rect x="359.9" y="179.0" width="13.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="362.9" y="190.0"></text>
</g>
<g>
<title>java.util.ArrayList (412 samples, 0.33%)</title><rect x="373.3" y="291.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="376.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (948 samples, 0.76%)</title><rect x="377.2" y="291.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (948 samples, 0.76%)</title><rect x="377.2" y="275.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.2" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (948 samples, 0.76%)</title><rect x="377.2" y="259.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (948 samples, 0.76%)</title><rect x="377.2" y="243.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (948 samples, 0.76%)</title><rect x="377.2" y="227.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.2" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (948 samples, 0.76%)</title><rect x="377.2" y="211.0" width="9.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="380.2" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (530 samples, 0.43%)</title><rect x="386.2" y="291.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.2" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (530 samples, 0.43%)</title><rect x="386.2" y="275.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (530 samples, 0.43%)</title><rect x="386.2" y="259.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.2" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (530 samples, 0.43%)</title><rect x="386.2" y="243.0" width="5.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="389.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (248 samples, 0.20%)</title><rect x="391.3" y="291.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (248 samples, 0.20%)</title><rect x="391.3" y="275.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (248 samples, 0.20%)</title><rect x="391.3" y="259.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.3" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$118/1137034356.get$Lambda (248 samples, 0.20%)</title><rect x="391.3" y="243.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.3" y="254.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$118 (248 samples, 0.20%)</title><rect x="391.3" y="227.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="394.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (713 samples, 0.57%)</title><rect x="393.6" y="291.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (286 samples, 0.23%)</title><rect x="393.6" y="275.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (286 samples, 0.23%)</title><rect x="393.6" y="259.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (286 samples, 0.23%)</title><rect x="393.6" y="243.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$118/1137034356.get$Lambda (286 samples, 0.23%)</title><rect x="393.6" y="227.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.6" y="238.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$118 (286 samples, 0.23%)</title><rect x="393.6" y="211.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="396.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (427 samples, 0.34%)</title><rect x="396.3" y="275.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (427 samples, 0.34%)</title><rect x="396.3" y="259.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (427 samples, 0.34%)</title><rect x="396.3" y="243.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.3" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$132/112798314.get$Lambda (427 samples, 0.34%)</title><rect x="396.3" y="227.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.3" y="238.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$132 (427 samples, 0.34%)</title><rect x="396.3" y="211.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="399.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (833 samples, 0.67%)</title><rect x="400.4" y="291.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.4" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (442 samples, 0.36%)</title><rect x="400.4" y="275.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="403.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (391 samples, 0.31%)</title><rect x="404.6" y="275.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (391 samples, 0.31%)</title><rect x="404.6" y="259.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (391 samples, 0.31%)</title><rect x="404.6" y="243.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.6" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (391 samples, 0.31%)</title><rect x="404.6" y="227.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (391 samples, 0.31%)</title><rect x="404.6" y="211.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (391 samples, 0.31%)</title><rect x="404.6" y="195.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (391 samples, 0.31%)</title><rect x="404.6" y="179.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$147/1339412342.getAsBoolean (391 samples, 0.31%)</title><rect x="404.6" y="163.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (391 samples, 0.31%)</title><rect x="404.6" y="147.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (391 samples, 0.31%)</title><rect x="404.6" y="131.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (391 samples, 0.31%)</title><rect x="404.6" y="115.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable$$Lambda$103/1864125987.apply (391 samples, 0.31%)</title><rect x="404.6" y="99.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.lambda$iterator$0 (391 samples, 0.31%)</title><rect x="404.6" y="83.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (391 samples, 0.31%)</title><rect x="404.6" y="67.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="407.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (5,383 samples, 4.33%)</title><rect x="408.3" y="291.0" width="51.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.3" y="302.0">ru/ma..</text>
</g>
<g>
<title>java/util/Collection.stream (1,553 samples, 1.25%)</title><rect x="408.3" y="275.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (532 samples, 0.43%)</title><rect x="408.3" y="259.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (532 samples, 0.43%)</title><rect x="408.3" y="243.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="411.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,021 samples, 0.82%)</title><rect x="413.4" y="259.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,021 samples, 0.82%)</title><rect x="413.4" y="243.0" width="9.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="416.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (290 samples, 0.23%)</title><rect x="423.1" y="275.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="426.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (290 samples, 0.23%)</title><rect x="423.1" y="259.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="426.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (793 samples, 0.64%)</title><rect x="425.8" y="275.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (793 samples, 0.64%)</title><rect x="425.8" y="259.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (793 samples, 0.64%)</title><rect x="425.8" y="243.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (793 samples, 0.64%)</title><rect x="425.8" y="227.0" width="7.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="428.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (1,564 samples, 1.26%)</title><rect x="433.3" y="275.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.3" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (426 samples, 0.34%)</title><rect x="433.3" y="259.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.3" y="270.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (426 samples, 0.34%)</title><rect x="433.3" y="243.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="436.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (1,138 samples, 0.92%)</title><rect x="437.4" y="259.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (277 samples, 0.22%)</title><rect x="437.4" y="243.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (277 samples, 0.22%)</title><rect x="437.4" y="227.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$107/801053230.get$Lambda (277 samples, 0.22%)</title><rect x="437.4" y="211.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$107 (277 samples, 0.22%)</title><rect x="437.4" y="195.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="440.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (861 samples, 0.69%)</title><rect x="440.0" y="243.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (861 samples, 0.69%)</title><rect x="440.0" y="227.0" width="8.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="443.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,183 samples, 0.95%)</title><rect x="448.2" y="275.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (1,183 samples, 0.95%)</title><rect x="448.2" y="259.0" width="11.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="451.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper.resolveGet (753 samples, 0.61%)</title><rect x="459.4" y="339.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.4" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (70 samples, 0.06%)</title><rect x="459.4" y="323.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="462.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (267 samples, 0.21%)</title><rect x="460.1" y="323.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper$$Lambda$172/1583351679.accept (267 samples, 0.21%)</title><rect x="460.1" y="307.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper.lambda$resolveGet$0 (267 samples, 0.21%)</title><rect x="460.1" y="291.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.1" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.put (267 samples, 0.21%)</title><rect x="460.1" y="275.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.1" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (267 samples, 0.21%)</title><rect x="460.1" y="259.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.1" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (152 samples, 0.12%)</title><rect x="460.1" y="243.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.1" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (152 samples, 0.12%)</title><rect x="460.1" y="227.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="463.1" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (115 samples, 0.09%)</title><rect x="461.5" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.5" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (115 samples, 0.09%)</title><rect x="461.5" y="227.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="464.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/DaoHelper.getTimestamp (398 samples, 0.32%)</title><rect x="462.8" y="323.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (398 samples, 0.32%)</title><rect x="462.8" y="307.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (398 samples, 0.32%)</title><rect x="462.8" y="291.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (398 samples, 0.32%)</title><rect x="462.8" y="275.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.8" y="286.0"></text>
</g>
<g>
<title>java.lang.String (168 samples, 0.14%)</title><rect x="462.8" y="259.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="465.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (230 samples, 0.19%)</title><rect x="464.4" y="259.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.4" y="270.0"></text>
</g>
<g>
<title>byte[] (230 samples, 0.19%)</title><rect x="464.4" y="243.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="467.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.calculateResponse (443 samples, 0.36%)</title><rect x="466.6" y="339.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.sendResponse (443 samples, 0.36%)</title><rect x="466.6" y="323.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (443 samples, 0.36%)</title><rect x="466.6" y="307.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (373 samples, 0.30%)</title><rect x="466.6" y="291.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (295 samples, 0.24%)</title><rect x="466.6" y="275.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (295 samples, 0.24%)</title><rect x="466.6" y="259.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.6" y="270.0"></text>
</g>
<g>
<title>byte[] (295 samples, 0.24%)</title><rect x="466.6" y="243.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="469.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (78 samples, 0.06%)</title><rect x="469.4" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.4" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (78 samples, 0.06%)</title><rect x="469.4" y="259.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="472.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (70 samples, 0.06%)</title><rect x="470.1" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.06%)</title><rect x="470.1" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (70 samples, 0.06%)</title><rect x="470.1" y="259.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="473.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.sendResponse (2,455 samples, 1.98%)</title><rect x="470.8" y="339.0" width="23.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.8" y="350.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,455 samples, 1.98%)</title><rect x="470.8" y="323.0" width="23.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.8" y="334.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,455 samples, 1.98%)</title><rect x="470.8" y="307.0" width="23.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.8" y="318.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,880 samples, 1.51%)</title><rect x="470.8" y="291.0" width="17.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,880 samples, 1.51%)</title><rect x="470.8" y="275.0" width="17.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.8" y="286.0"></text>
</g>
<g>
<title>byte[] (1,880 samples, 1.51%)</title><rect x="470.8" y="259.0" width="17.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="473.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (575 samples, 0.46%)</title><rect x="488.6" y="291.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.6" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (575 samples, 0.46%)</title><rect x="488.6" y="275.0" width="5.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="491.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getReplicas (67 samples, 0.05%)</title><rect x="494.1" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getReplicas (67 samples, 0.05%)</title><rect x="494.1" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (67 samples, 0.05%)</title><rect x="494.1" y="307.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="497.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.getResponseFromNodes (18,375 samples, 14.79%)</title><rect x="494.7" y="339.0" width="174.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.7" y="350.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java.util.ArrayList (44 samples, 0.04%)</title><rect x="494.7" y="323.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="497.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (69 samples, 0.06%)</title><rect x="495.1" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (69 samples, 0.06%)</title><rect x="495.1" y="307.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="498.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/HttpHelper.proxy (18,262 samples, 14.69%)</title><rect x="495.8" y="323.0" width="173.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.8" y="334.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (297 samples, 0.24%)</title><rect x="495.8" y="307.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1426329391.invoke (297 samples, 0.24%)</title><rect x="495.8" y="291.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (297 samples, 0.24%)</title><rect x="495.8" y="275.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="498.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (100 samples, 0.08%)</title><rect x="495.8" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="498.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (100 samples, 0.08%)</title><rect x="495.8" y="243.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="498.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (197 samples, 0.16%)</title><rect x="496.7" y="259.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (197 samples, 0.16%)</title><rect x="496.7" y="243.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.7" y="254.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.16%)</title><rect x="496.7" y="227.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="499.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (17,965 samples, 14.46%)</title><rect x="498.6" y="307.0" width="170.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.6" y="318.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (17,965 samples, 14.46%)</title><rect x="498.6" y="291.0" width="170.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.6" y="302.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (147 samples, 0.12%)</title><rect x="498.6" y="275.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="501.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (15,485 samples, 12.46%)</title><rect x="500.0" y="275.0" width="147.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.0" y="286.0">one/nio/http/HttpCl..</text>
</g>
<g>
<title>byte[] (10,556 samples, 8.49%)</title><rect x="500.0" y="259.0" width="100.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="503.0" y="270.0">byte[]</text>
</g>
<g>
<title>byte[] (4,929 samples, 3.97%)</title><rect x="600.2" y="259.0" width="46.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="603.2" y="270.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1,739 samples, 1.40%)</title><rect x="647.0" y="275.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.0" y="286.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.05%)</title><rect x="647.0" y="259.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="650.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.05%)</title><rect x="647.7" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.05%)</title><rect x="647.7" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.03%)</title><rect x="647.7" y="227.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="650.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.02%)</title><rect x="648.0" y="227.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.0" y="238.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.02%)</title><rect x="648.0" y="211.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="651.0" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (28 samples, 0.02%)</title><rect x="648.2" y="259.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="651.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1,422 samples, 1.14%)</title><rect x="648.5" y="259.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,422 samples, 1.14%)</title><rect x="648.5" y="243.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,422 samples, 1.14%)</title><rect x="648.5" y="227.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.5" y="238.0"></text>
</g>
<g>
<title>char[] (1,025 samples, 0.82%)</title><rect x="648.5" y="211.0" width="9.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="651.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (177 samples, 0.14%)</title><rect x="658.2" y="211.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="661.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (220 samples, 0.18%)</title><rect x="659.9" y="211.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (220 samples, 0.18%)</title><rect x="659.9" y="195.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (220 samples, 0.18%)</title><rect x="659.9" y="179.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.9" y="190.0"></text>
</g>
<g>
<title>byte[] (220 samples, 0.18%)</title><rect x="659.9" y="163.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="662.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (53 samples, 0.04%)</title><rect x="662.0" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (53 samples, 0.04%)</title><rect x="662.0" y="243.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="665.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (109 samples, 0.09%)</title><rect x="662.5" y="259.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (109 samples, 0.09%)</title><rect x="662.5" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (109 samples, 0.09%)</title><rect x="662.5" y="227.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.04%)</title><rect x="662.5" y="211.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="665.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.05%)</title><rect x="662.9" y="211.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.9" y="222.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.05%)</title><rect x="662.9" y="195.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="665.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (417 samples, 0.34%)</title><rect x="663.6" y="275.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (417 samples, 0.34%)</title><rect x="663.6" y="259.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.6" y="270.0"></text>
</g>
<g>
<title>byte[] (417 samples, 0.34%)</title><rect x="663.6" y="243.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="666.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (109 samples, 0.09%)</title><rect x="667.5" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (109 samples, 0.09%)</title><rect x="667.5" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (109 samples, 0.09%)</title><rect x="667.5" y="243.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.04%)</title><rect x="667.5" y="227.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="670.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.05%)</title><rect x="667.9" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.9" y="238.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.05%)</title><rect x="667.9" y="211.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="670.9" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (68 samples, 0.05%)</title><rect x="668.5" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.5" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (68 samples, 0.05%)</title><rect x="668.5" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.5" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (68 samples, 0.05%)</title><rect x="668.5" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.5" y="254.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (68 samples, 0.05%)</title><rect x="668.5" y="227.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="671.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/RendezvousTopology.isProxyReq (923 samples, 0.74%)</title><rect x="669.2" y="339.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (923 samples, 0.74%)</title><rect x="669.2" y="323.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (923 samples, 0.74%)</title><rect x="669.2" y="307.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (923 samples, 0.74%)</title><rect x="669.2" y="291.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (312 samples, 0.25%)</title><rect x="669.2" y="275.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="672.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (611 samples, 0.49%)</title><rect x="672.2" y="275.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.2" y="286.0"></text>
</g>
<g>
<title>byte[] (611 samples, 0.49%)</title><rect x="672.2" y="259.0" width="5.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="675.2" y="270.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (53,928 samples, 43.39%)</title><rect x="678.0" y="435.0" width="512.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.0" y="446.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,177 samples, 1.75%)</title><rect x="678.0" y="419.0" width="20.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,177 samples, 1.75%)</title><rect x="678.0" y="403.0" width="20.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="681.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (51,751 samples, 41.64%)</title><rect x="698.6" y="419.0" width="491.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.6" y="430.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (51,751 samples, 41.64%)</title><rect x="698.6" y="403.0" width="491.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.6" y="414.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51,751 samples, 41.64%)</title><rect x="698.6" y="387.0" width="491.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.6" y="398.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11,250 samples, 9.05%)</title><rect x="698.6" y="371.0" width="106.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.6" y="382.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11,250 samples, 9.05%)</title><rect x="698.6" y="355.0" width="106.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.6" y="366.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_requestHandler.handleRequest (6,593 samples, 5.31%)</title><rect x="698.6" y="339.0" width="62.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.6" y="350.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3,920 samples, 3.15%)</title><rect x="698.6" y="323.0" width="37.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.6" y="334.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,920 samples, 3.15%)</title><rect x="698.6" y="307.0" width="37.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.6" y="318.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (3,920 samples, 3.15%)</title><rect x="698.6" y="291.0" width="37.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.6" y="302.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,920 samples, 3.15%)</title><rect x="698.6" y="275.0" width="37.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.6" y="286.0">jav..</text>
</g>
<g>
<title>java.lang.String (1,788 samples, 1.44%)</title><rect x="698.6" y="259.0" width="17.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="701.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,132 samples, 1.72%)</title><rect x="715.6" y="259.0" width="20.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.6" y="270.0"></text>
</g>
<g>
<title>byte[] (2,132 samples, 1.72%)</title><rect x="715.6" y="243.0" width="20.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="718.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.requestHandler (2,673 samples, 2.15%)</title><rect x="735.8" y="323.0" width="25.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.8" y="334.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/468134893.linkToTargetMethod (2,619 samples, 2.11%)</title><rect x="735.8" y="307.0" width="24.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.8" y="318.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,619 samples, 2.11%)</title><rect x="735.8" y="291.0" width="24.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.8" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$73/534297806.get$Lambda (2,619 samples, 2.11%)</title><rect x="735.8" y="275.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.8" y="286.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$73 (2,619 samples, 2.11%)</title><rect x="735.8" y="259.0" width="24.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="738.8" y="270.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (54 samples, 0.04%)</title><rect x="760.7" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (54 samples, 0.04%)</title><rect x="760.7" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (54 samples, 0.04%)</title><rect x="760.7" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (54 samples, 0.04%)</title><rect x="760.7" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (54 samples, 0.04%)</title><rect x="760.7" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (54 samples, 0.04%)</title><rect x="760.7" y="227.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="763.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,657 samples, 3.75%)</title><rect x="761.2" y="339.0" width="44.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.2" y="350.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (4,657 samples, 3.75%)</title><rect x="761.2" y="323.0" width="44.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.2" y="334.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,657 samples, 3.75%)</title><rect x="761.2" y="307.0" width="44.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.2" y="318.0">java..</text>
</g>
<g>
<title>java.lang.String (1,889 samples, 1.52%)</title><rect x="761.2" y="291.0" width="18.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="764.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,768 samples, 2.23%)</title><rect x="779.2" y="291.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.2" y="302.0">j..</text>
</g>
<g>
<title>byte[] (2,768 samples, 2.23%)</title><rect x="779.2" y="275.0" width="26.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="782.2" y="286.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (20,593 samples, 16.57%)</title><rect x="805.4" y="371.0" width="195.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.4" y="382.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one.nio.http.Request (3,288 samples, 2.65%)</title><rect x="805.4" y="355.0" width="31.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="808.4" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,913 samples, 4.76%)</title><rect x="836.7" y="355.0" width="56.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.7" y="366.0">one/ni..</text>
</g>
<g>
<title>java.lang.String[] (5,867 samples, 4.72%)</title><rect x="836.7" y="339.0" width="55.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="839.7" y="350.0">java...</text>
</g>
<g>
<title>java.lang.String[] (46 samples, 0.04%)</title><rect x="892.4" y="339.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="895.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,392 samples, 9.17%)</title><rect x="892.8" y="355.0" width="108.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.8" y="366.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,392 samples, 9.17%)</title><rect x="892.8" y="339.0" width="108.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.8" y="350.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (6,661 samples, 5.36%)</title><rect x="892.8" y="323.0" width="63.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="895.8" y="334.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,665 samples, 1.34%)</title><rect x="956.1" y="323.0" width="15.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="959.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,066 samples, 2.47%)</title><rect x="971.9" y="323.0" width="29.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="974.9" y="334.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,066 samples, 2.47%)</title><rect x="971.9" y="307.0" width="29.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.9" y="318.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,066 samples, 2.47%)</title><rect x="971.9" y="291.0" width="29.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.9" y="302.0">ja..</text>
</g>
<g>
<title>byte[] (3,066 samples, 2.47%)</title><rect x="971.9" y="275.0" width="29.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="974.9" y="286.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (19,908 samples, 16.02%)</title><rect x="1001.0" y="371.0" width="189.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.0" y="382.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (19,908 samples, 16.02%)</title><rect x="1001.0" y="355.0" width="189.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1004.0" y="366.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (10,216 samples, 8.22%)</title><rect x="1001.0" y="339.0" width="97.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1004.0" y="350.0">char[]</text>
</g>
<g>
<title>java.lang.String (3,120 samples, 2.51%)</title><rect x="1098.1" y="339.0" width="29.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1101.1" y="350.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,561 samples, 5.28%)</title><rect x="1127.7" y="339.0" width="62.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.7" y="350.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,561 samples, 5.28%)</title><rect x="1127.7" y="323.0" width="62.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.7" y="334.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6,561 samples, 5.28%)</title><rect x="1127.7" y="307.0" width="62.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.7" y="318.0">java/l..</text>
</g>
<g>
<title>byte[] (6,561 samples, 5.28%)</title><rect x="1127.7" y="291.0" width="62.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1130.7" y="302.0">byte[]</text>
</g>
</g>
</svg>
