<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="517"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="517"> </text>
<g id="frames">
<g>
<title>all (25,970 samples, 100.00%)</title><rect x="10.0" y="483.0" width="1180.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="494.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=14403] (1,605 samples, 6.18%)</title><rect x="10.0" y="467.0" width="72.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,605 samples, 6.18%)</title><rect x="10.0" y="451.0" width="72.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,605 samples, 6.18%)</title><rect x="10.0" y="435.0" width="72.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,605 samples, 6.18%)</title><rect x="10.0" y="419.0" width="72.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,605 samples, 6.18%)</title><rect x="10.0" y="403.0" width="72.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (487 samples, 1.88%)</title><rect x="10.0" y="387.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (487 samples, 1.88%)</title><rect x="10.0" y="371.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (345 samples, 1.33%)</title><rect x="10.0" y="355.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (199 samples, 0.77%)</title><rect x="10.0" y="339.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (199 samples, 0.77%)</title><rect x="10.0" y="323.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (199 samples, 0.77%)</title><rect x="10.0" y="307.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (199 samples, 0.77%)</title><rect x="10.0" y="291.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.46%)</title><rect x="10.0" y="275.0" width="5.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.31%)</title><rect x="15.4" y="275.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.4" y="286.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.31%)</title><rect x="15.4" y="259.0" width="3.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="18.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (146 samples, 0.56%)</title><rect x="19.0" y="339.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (146 samples, 0.56%)</title><rect x="19.0" y="323.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (146 samples, 0.56%)</title><rect x="19.0" y="307.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.get$Lambda (146 samples, 0.56%)</title><rect x="19.0" y="291.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.0" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$80 (146 samples, 0.56%)</title><rect x="19.0" y="275.0" width="6.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="22.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (142 samples, 0.55%)</title><rect x="25.7" y="355.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (142 samples, 0.55%)</title><rect x="25.7" y="339.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (142 samples, 0.55%)</title><rect x="25.7" y="323.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.19%)</title><rect x="25.7" y="307.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="28.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (93 samples, 0.36%)</title><rect x="27.9" y="307.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.9" y="318.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.36%)</title><rect x="27.9" y="291.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="30.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (756 samples, 2.91%)</title><rect x="32.1" y="387.0" width="34.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.1" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (137 samples, 0.53%)</title><rect x="32.1" y="371.0" width="6.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="35.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (238 samples, 0.92%)</title><rect x="38.4" y="371.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (238 samples, 0.92%)</title><rect x="38.4" y="355.0" width="10.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="41.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (381 samples, 1.47%)</title><rect x="49.2" y="371.0" width="17.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (381 samples, 1.47%)</title><rect x="49.2" y="355.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.2" y="366.0"></text>
</g>
<g>
<title>char[] (193 samples, 0.74%)</title><rect x="49.2" y="339.0" width="8.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="52.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.23%)</title><rect x="57.9" y="339.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="60.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (128 samples, 0.49%)</title><rect x="60.7" y="339.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (128 samples, 0.49%)</title><rect x="60.7" y="323.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (128 samples, 0.49%)</title><rect x="60.7" y="307.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.7" y="318.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.49%)</title><rect x="60.7" y="291.0" width="5.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="63.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (362 samples, 1.39%)</title><rect x="66.5" y="387.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (362 samples, 1.39%)</title><rect x="66.5" y="371.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.5" y="382.0"></text>
</g>
<g>
<title>char[] (102 samples, 0.39%)</title><rect x="66.5" y="355.0" width="4.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.21%)</title><rect x="71.1" y="355.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="74.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (205 samples, 0.79%)</title><rect x="73.6" y="355.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (205 samples, 0.79%)</title><rect x="73.6" y="339.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (205 samples, 0.79%)</title><rect x="73.6" y="323.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.6" y="334.0"></text>
</g>
<g>
<title>byte[] (205 samples, 0.79%)</title><rect x="73.6" y="307.0" width="9.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="76.6" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14404] (1,713 samples, 6.60%)</title><rect x="82.9" y="467.0" width="77.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="85.9" y="478.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,713 samples, 6.60%)</title><rect x="82.9" y="451.0" width="77.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.9" y="462.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,713 samples, 6.60%)</title><rect x="82.9" y="435.0" width="77.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.9" y="446.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,713 samples, 6.60%)</title><rect x="82.9" y="419.0" width="77.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.9" y="430.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,713 samples, 6.60%)</title><rect x="82.9" y="403.0" width="77.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.9" y="414.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (516 samples, 1.99%)</title><rect x="82.9" y="387.0" width="23.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.9" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (516 samples, 1.99%)</title><rect x="82.9" y="371.0" width="23.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.9" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (306 samples, 1.18%)</title><rect x="82.9" y="355.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (188 samples, 0.72%)</title><rect x="82.9" y="339.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (188 samples, 0.72%)</title><rect x="82.9" y="323.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (188 samples, 0.72%)</title><rect x="82.9" y="307.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (188 samples, 0.72%)</title><rect x="82.9" y="291.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.44%)</title><rect x="82.9" y="275.0" width="5.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="85.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.28%)</title><rect x="88.1" y="275.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.1" y="286.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.28%)</title><rect x="88.1" y="259.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="91.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (118 samples, 0.45%)</title><rect x="91.5" y="339.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.45%)</title><rect x="91.5" y="323.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.45%)</title><rect x="91.5" y="307.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.get$Lambda (118 samples, 0.45%)</title><rect x="91.5" y="291.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.5" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$80 (118 samples, 0.45%)</title><rect x="91.5" y="275.0" width="5.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="94.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (210 samples, 0.81%)</title><rect x="96.8" y="355.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (210 samples, 0.81%)</title><rect x="96.8" y="339.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (210 samples, 0.81%)</title><rect x="96.8" y="323.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.26%)</title><rect x="96.8" y="307.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="99.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (142 samples, 0.55%)</title><rect x="99.9" y="307.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.9" y="318.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.55%)</title><rect x="99.9" y="291.0" width="6.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="102.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (722 samples, 2.78%)</title><rect x="106.4" y="387.0" width="32.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.4" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (144 samples, 0.55%)</title><rect x="106.4" y="371.0" width="6.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="109.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (219 samples, 0.84%)</title><rect x="112.9" y="371.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (173 samples, 0.67%)</title><rect x="112.9" y="355.0" width="7.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="115.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (46 samples, 0.18%)</title><rect x="120.8" y="355.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="123.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (359 samples, 1.38%)</title><rect x="122.9" y="371.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (359 samples, 1.38%)</title><rect x="122.9" y="355.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.9" y="366.0"></text>
</g>
<g>
<title>char[] (185 samples, 0.71%)</title><rect x="122.9" y="339.0" width="8.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="125.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (62 samples, 0.24%)</title><rect x="131.3" y="339.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="134.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (112 samples, 0.43%)</title><rect x="134.1" y="339.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (112 samples, 0.43%)</title><rect x="134.1" y="323.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (112 samples, 0.43%)</title><rect x="134.1" y="307.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.1" y="318.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.43%)</title><rect x="134.1" y="291.0" width="5.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="137.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (475 samples, 1.83%)</title><rect x="139.2" y="387.0" width="21.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.2" y="398.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (475 samples, 1.83%)</title><rect x="139.2" y="371.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.2" y="382.0">o..</text>
</g>
<g>
<title>char[] (193 samples, 0.74%)</title><rect x="139.2" y="355.0" width="8.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="142.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (163 samples, 0.63%)</title><rect x="147.9" y="355.0" width="7.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="150.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (119 samples, 0.46%)</title><rect x="155.4" y="355.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (119 samples, 0.46%)</title><rect x="155.4" y="339.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (119 samples, 0.46%)</title><rect x="155.4" y="323.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.4" y="334.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.46%)</title><rect x="155.4" y="307.0" width="5.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="158.4" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14406] (1,693 samples, 6.52%)</title><rect x="160.8" y="467.0" width="76.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="163.8" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,693 samples, 6.52%)</title><rect x="160.8" y="451.0" width="76.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.8" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,693 samples, 6.52%)</title><rect x="160.8" y="435.0" width="76.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.8" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,693 samples, 6.52%)</title><rect x="160.8" y="419.0" width="76.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.8" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,693 samples, 6.52%)</title><rect x="160.8" y="403.0" width="76.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.8" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (512 samples, 1.97%)</title><rect x="160.8" y="387.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.8" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (512 samples, 1.97%)</title><rect x="160.8" y="371.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.8" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (293 samples, 1.13%)</title><rect x="160.8" y="355.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (171 samples, 0.66%)</title><rect x="160.8" y="339.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (171 samples, 0.66%)</title><rect x="160.8" y="323.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (171 samples, 0.66%)</title><rect x="160.8" y="307.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (171 samples, 0.66%)</title><rect x="160.8" y="291.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (104 samples, 0.40%)</title><rect x="160.8" y="275.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="163.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.26%)</title><rect x="165.5" y="275.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.5" y="286.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.26%)</title><rect x="165.5" y="259.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="168.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (122 samples, 0.47%)</title><rect x="168.5" y="339.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (122 samples, 0.47%)</title><rect x="168.5" y="323.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (122 samples, 0.47%)</title><rect x="168.5" y="307.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.get$Lambda (122 samples, 0.47%)</title><rect x="168.5" y="291.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.5" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$80 (122 samples, 0.47%)</title><rect x="168.5" y="275.0" width="5.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="171.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (219 samples, 0.84%)</title><rect x="174.1" y="355.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (219 samples, 0.84%)</title><rect x="174.1" y="339.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (219 samples, 0.84%)</title><rect x="174.1" y="323.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.27%)</title><rect x="174.1" y="307.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="177.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (148 samples, 0.57%)</title><rect x="177.3" y="307.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.3" y="318.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.57%)</title><rect x="177.3" y="291.0" width="6.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="180.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (742 samples, 2.86%)</title><rect x="184.0" y="387.0" width="33.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.0" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (142 samples, 0.55%)</title><rect x="184.0" y="371.0" width="6.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="187.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (230 samples, 0.89%)</title><rect x="190.5" y="371.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (209 samples, 0.80%)</title><rect x="190.5" y="355.0" width="9.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="193.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.08%)</title><rect x="200.0" y="355.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="203.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (370 samples, 1.42%)</title><rect x="200.9" y="371.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (370 samples, 1.42%)</title><rect x="200.9" y="355.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.9" y="366.0"></text>
</g>
<g>
<title>char[] (186 samples, 0.72%)</title><rect x="200.9" y="339.0" width="8.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="203.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.28%)</title><rect x="209.4" y="339.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="212.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (110 samples, 0.42%)</title><rect x="212.7" y="339.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (110 samples, 0.42%)</title><rect x="212.7" y="323.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (110 samples, 0.42%)</title><rect x="212.7" y="307.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.7" y="318.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.42%)</title><rect x="212.7" y="291.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="215.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (439 samples, 1.69%)</title><rect x="217.7" y="387.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (439 samples, 1.69%)</title><rect x="217.7" y="371.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.7" y="382.0"></text>
</g>
<g>
<title>char[] (154 samples, 0.59%)</title><rect x="217.7" y="355.0" width="7.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="220.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.45%)</title><rect x="224.7" y="355.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="227.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (169 samples, 0.65%)</title><rect x="230.0" y="355.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="233.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (169 samples, 0.65%)</title><rect x="230.0" y="339.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (169 samples, 0.65%)</title><rect x="230.0" y="323.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.0" y="334.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.65%)</title><rect x="230.0" y="307.0" width="7.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="233.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=14407] (1,713 samples, 6.60%)</title><rect x="237.7" y="467.0" width="77.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="240.7" y="478.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,713 samples, 6.60%)</title><rect x="237.7" y="451.0" width="77.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.7" y="462.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,713 samples, 6.60%)</title><rect x="237.7" y="435.0" width="77.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.7" y="446.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,713 samples, 6.60%)</title><rect x="237.7" y="419.0" width="77.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.7" y="430.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,713 samples, 6.60%)</title><rect x="237.7" y="403.0" width="77.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.7" y="414.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (477 samples, 1.84%)</title><rect x="237.7" y="387.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.7" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (477 samples, 1.84%)</title><rect x="237.7" y="371.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="240.7" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (289 samples, 1.11%)</title><rect x="237.7" y="355.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (173 samples, 0.67%)</title><rect x="237.7" y="339.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (173 samples, 0.67%)</title><rect x="237.7" y="323.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (173 samples, 0.67%)</title><rect x="237.7" y="307.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (173 samples, 0.67%)</title><rect x="237.7" y="291.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.30%)</title><rect x="237.7" y="275.0" width="3.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="240.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (95 samples, 0.37%)</title><rect x="241.2" y="275.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.2" y="286.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.37%)</title><rect x="241.2" y="259.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="244.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (116 samples, 0.45%)</title><rect x="245.5" y="339.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.45%)</title><rect x="245.5" y="323.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.45%)</title><rect x="245.5" y="307.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.get$Lambda (116 samples, 0.45%)</title><rect x="245.5" y="291.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.5" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$80 (116 samples, 0.45%)</title><rect x="245.5" y="275.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="248.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (188 samples, 0.72%)</title><rect x="250.8" y="355.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (188 samples, 0.72%)</title><rect x="250.8" y="339.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (188 samples, 0.72%)</title><rect x="250.8" y="323.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.22%)</title><rect x="250.8" y="307.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="253.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (131 samples, 0.50%)</title><rect x="253.4" y="307.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.4" y="318.0"></text>
</g>
<g>
<title>byte[] (131 samples, 0.50%)</title><rect x="253.4" y="291.0" width="6.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="256.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (780 samples, 3.00%)</title><rect x="259.4" y="387.0" width="35.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.4" y="398.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (129 samples, 0.50%)</title><rect x="259.4" y="371.0" width="5.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="262.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (259 samples, 1.00%)</title><rect x="265.2" y="371.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (204 samples, 0.79%)</title><rect x="265.2" y="355.0" width="9.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="268.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (55 samples, 0.21%)</title><rect x="274.5" y="355.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="277.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (392 samples, 1.51%)</title><rect x="277.0" y="371.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (392 samples, 1.51%)</title><rect x="277.0" y="355.0" width="17.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.0" y="366.0"></text>
</g>
<g>
<title>char[] (222 samples, 0.85%)</title><rect x="277.0" y="339.0" width="10.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="280.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.26%)</title><rect x="287.1" y="339.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="290.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (103 samples, 0.40%)</title><rect x="290.1" y="339.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (103 samples, 0.40%)</title><rect x="290.1" y="323.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (103 samples, 0.40%)</title><rect x="290.1" y="307.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.1" y="318.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.40%)</title><rect x="290.1" y="291.0" width="4.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="293.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (456 samples, 1.76%)</title><rect x="294.8" y="387.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (456 samples, 1.76%)</title><rect x="294.8" y="371.0" width="20.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.8" y="382.0"></text>
</g>
<g>
<title>char[] (171 samples, 0.66%)</title><rect x="294.8" y="355.0" width="7.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="297.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (152 samples, 0.59%)</title><rect x="302.6" y="355.0" width="6.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="305.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (133 samples, 0.51%)</title><rect x="309.5" y="355.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (133 samples, 0.51%)</title><rect x="309.5" y="339.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (133 samples, 0.51%)</title><rect x="309.5" y="323.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="312.5" y="334.0"></text>
</g>
<g>
<title>byte[] (133 samples, 0.51%)</title><rect x="309.5" y="307.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="312.5" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=14408] (1,598 samples, 6.15%)</title><rect x="315.5" y="467.0" width="72.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="318.5" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,598 samples, 6.15%)</title><rect x="315.5" y="451.0" width="72.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.5" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,598 samples, 6.15%)</title><rect x="315.5" y="435.0" width="72.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.5" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,598 samples, 6.15%)</title><rect x="315.5" y="419.0" width="72.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.5" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,598 samples, 6.15%)</title><rect x="315.5" y="403.0" width="72.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.5" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (389 samples, 1.50%)</title><rect x="315.5" y="387.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (389 samples, 1.50%)</title><rect x="315.5" y="371.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.5" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (213 samples, 0.82%)</title><rect x="315.5" y="355.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (164 samples, 0.63%)</title><rect x="315.5" y="339.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (164 samples, 0.63%)</title><rect x="315.5" y="323.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (164 samples, 0.63%)</title><rect x="315.5" y="307.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (164 samples, 0.63%)</title><rect x="315.5" y="291.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.35%)</title><rect x="315.5" y="275.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="318.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.28%)</title><rect x="319.7" y="275.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.7" y="286.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.28%)</title><rect x="319.7" y="259.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="322.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (49 samples, 0.19%)</title><rect x="323.0" y="339.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.19%)</title><rect x="323.0" y="323.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.19%)</title><rect x="323.0" y="307.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.get$Lambda (49 samples, 0.19%)</title><rect x="323.0" y="291.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.0" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$80 (49 samples, 0.19%)</title><rect x="323.0" y="275.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="326.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (176 samples, 0.68%)</title><rect x="325.2" y="355.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (176 samples, 0.68%)</title><rect x="325.2" y="339.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (176 samples, 0.68%)</title><rect x="325.2" y="323.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.34%)</title><rect x="325.2" y="307.0" width="3.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="328.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (89 samples, 0.34%)</title><rect x="329.1" y="307.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.1" y="318.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.34%)</title><rect x="329.1" y="291.0" width="4.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="332.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (829 samples, 3.19%)</title><rect x="333.2" y="387.0" width="37.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.2" y="398.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (154 samples, 0.59%)</title><rect x="333.2" y="371.0" width="7.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="336.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (250 samples, 0.96%)</title><rect x="340.2" y="371.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (250 samples, 0.96%)</title><rect x="340.2" y="355.0" width="11.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="343.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (425 samples, 1.64%)</title><rect x="351.6" y="371.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (425 samples, 1.64%)</title><rect x="351.6" y="355.0" width="19.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.6" y="366.0"></text>
</g>
<g>
<title>char[] (251 samples, 0.97%)</title><rect x="351.6" y="339.0" width="11.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="354.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.18%)</title><rect x="363.0" y="339.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="366.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (126 samples, 0.49%)</title><rect x="365.1" y="339.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (126 samples, 0.49%)</title><rect x="365.1" y="323.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (126 samples, 0.49%)</title><rect x="365.1" y="307.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.1" y="318.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.49%)</title><rect x="365.1" y="291.0" width="5.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="368.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (380 samples, 1.46%)</title><rect x="370.9" y="387.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (380 samples, 1.46%)</title><rect x="370.9" y="371.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.9" y="382.0"></text>
</g>
<g>
<title>char[] (156 samples, 0.60%)</title><rect x="370.9" y="355.0" width="7.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="373.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.30%)</title><rect x="377.9" y="355.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="380.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (146 samples, 0.56%)</title><rect x="381.5" y="355.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (146 samples, 0.56%)</title><rect x="381.5" y="339.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (146 samples, 0.56%)</title><rect x="381.5" y="323.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.5" y="334.0"></text>
</g>
<g>
<title>byte[] (146 samples, 0.56%)</title><rect x="381.5" y="307.0" width="6.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="384.5" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=14409] (1,689 samples, 6.50%)</title><rect x="388.1" y="467.0" width="76.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="391.1" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,689 samples, 6.50%)</title><rect x="388.1" y="451.0" width="76.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.1" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,689 samples, 6.50%)</title><rect x="388.1" y="435.0" width="76.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.1" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,689 samples, 6.50%)</title><rect x="388.1" y="419.0" width="76.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.1" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,689 samples, 6.50%)</title><rect x="388.1" y="403.0" width="76.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.1" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (473 samples, 1.82%)</title><rect x="388.1" y="387.0" width="21.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (473 samples, 1.82%)</title><rect x="388.1" y="371.0" width="21.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.1" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (244 samples, 0.94%)</title><rect x="388.1" y="355.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (141 samples, 0.54%)</title><rect x="388.1" y="339.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (141 samples, 0.54%)</title><rect x="388.1" y="323.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (141 samples, 0.54%)</title><rect x="388.1" y="307.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (141 samples, 0.54%)</title><rect x="388.1" y="291.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.23%)</title><rect x="388.1" y="275.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="391.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.31%)</title><rect x="390.9" y="275.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.9" y="286.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.31%)</title><rect x="390.9" y="259.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="393.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (103 samples, 0.40%)</title><rect x="394.5" y="339.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.40%)</title><rect x="394.5" y="323.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.40%)</title><rect x="394.5" y="307.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.get$Lambda (103 samples, 0.40%)</title><rect x="394.5" y="291.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.5" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$80 (103 samples, 0.40%)</title><rect x="394.5" y="275.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="397.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (229 samples, 0.88%)</title><rect x="399.2" y="355.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (229 samples, 0.88%)</title><rect x="399.2" y="339.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (229 samples, 0.88%)</title><rect x="399.2" y="323.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.34%)</title><rect x="399.2" y="307.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="402.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (141 samples, 0.54%)</title><rect x="403.2" y="307.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.2" y="318.0"></text>
</g>
<g>
<title>byte[] (141 samples, 0.54%)</title><rect x="403.2" y="291.0" width="6.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="406.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (799 samples, 3.08%)</title><rect x="409.6" y="387.0" width="36.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.6" y="398.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (166 samples, 0.64%)</title><rect x="409.6" y="371.0" width="7.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="412.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (201 samples, 0.77%)</title><rect x="417.2" y="371.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (171 samples, 0.66%)</title><rect x="417.2" y="355.0" width="7.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="420.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.12%)</title><rect x="424.9" y="355.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="427.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (432 samples, 1.66%)</title><rect x="426.3" y="371.0" width="19.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (432 samples, 1.66%)</title><rect x="426.3" y="355.0" width="19.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.3" y="366.0"></text>
</g>
<g>
<title>char[] (227 samples, 0.87%)</title><rect x="426.3" y="339.0" width="10.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="429.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.32%)</title><rect x="436.6" y="339.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="439.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (123 samples, 0.47%)</title><rect x="440.3" y="339.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (123 samples, 0.47%)</title><rect x="440.3" y="323.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (123 samples, 0.47%)</title><rect x="440.3" y="307.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.3" y="318.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.47%)</title><rect x="440.3" y="291.0" width="5.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="443.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (417 samples, 1.61%)</title><rect x="445.9" y="387.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (417 samples, 1.61%)</title><rect x="445.9" y="371.0" width="19.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.9" y="382.0"></text>
</g>
<g>
<title>char[] (167 samples, 0.64%)</title><rect x="445.9" y="355.0" width="7.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="448.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (106 samples, 0.41%)</title><rect x="453.5" y="355.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="456.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (144 samples, 0.55%)</title><rect x="458.3" y="355.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (144 samples, 0.55%)</title><rect x="458.3" y="339.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (144 samples, 0.55%)</title><rect x="458.3" y="323.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.3" y="334.0"></text>
</g>
<g>
<title>byte[] (144 samples, 0.55%)</title><rect x="458.3" y="307.0" width="6.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="461.3" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=14410] (1,659 samples, 6.39%)</title><rect x="464.9" y="467.0" width="75.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="467.9" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,659 samples, 6.39%)</title><rect x="464.9" y="451.0" width="75.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.9" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,659 samples, 6.39%)</title><rect x="464.9" y="435.0" width="75.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.9" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,659 samples, 6.39%)</title><rect x="464.9" y="419.0" width="75.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.9" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,659 samples, 6.39%)</title><rect x="464.9" y="403.0" width="75.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.9" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (547 samples, 2.11%)</title><rect x="464.9" y="387.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.9" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (547 samples, 2.11%)</title><rect x="464.9" y="371.0" width="24.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.9" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_getEntity.handleRequest (364 samples, 1.40%)</title><rect x="464.9" y="355.0" width="16.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (230 samples, 0.89%)</title><rect x="464.9" y="339.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (230 samples, 0.89%)</title><rect x="464.9" y="323.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (230 samples, 0.89%)</title><rect x="464.9" y="307.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (230 samples, 0.89%)</title><rect x="464.9" y="291.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (106 samples, 0.41%)</title><rect x="464.9" y="275.0" width="4.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="467.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (124 samples, 0.48%)</title><rect x="469.7" y="275.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.7" y="286.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.48%)</title><rect x="469.7" y="259.0" width="5.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="472.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.getEntity (134 samples, 0.52%)</title><rect x="475.3" y="339.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.52%)</title><rect x="475.3" y="323.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.52%)</title><rect x="475.3" y="307.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.get$Lambda (134 samples, 0.52%)</title><rect x="475.3" y="291.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.3" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.nik27090.ServiceImpl$$Lambda$80 (134 samples, 0.52%)</title><rect x="475.3" y="275.0" width="6.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="478.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (183 samples, 0.70%)</title><rect x="481.4" y="355.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (183 samples, 0.70%)</title><rect x="481.4" y="339.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (183 samples, 0.70%)</title><rect x="481.4" y="323.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.30%)</title><rect x="481.4" y="307.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="484.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (106 samples, 0.41%)</title><rect x="484.9" y="307.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.9" y="318.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.41%)</title><rect x="484.9" y="291.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="487.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (738 samples, 2.84%)</title><rect x="489.7" y="387.0" width="33.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.7" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (95 samples, 0.37%)</title><rect x="489.7" y="371.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="492.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (242 samples, 0.93%)</title><rect x="494.0" y="371.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (236 samples, 0.91%)</title><rect x="494.0" y="355.0" width="10.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="497.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.02%)</title><rect x="504.8" y="355.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="507.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (401 samples, 1.54%)</title><rect x="505.0" y="371.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (401 samples, 1.54%)</title><rect x="505.0" y="355.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.0" y="366.0"></text>
</g>
<g>
<title>char[] (251 samples, 0.97%)</title><rect x="505.0" y="339.0" width="11.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="508.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.17%)</title><rect x="516.4" y="339.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="519.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (106 samples, 0.41%)</title><rect x="518.4" y="339.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (106 samples, 0.41%)</title><rect x="518.4" y="323.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (106 samples, 0.41%)</title><rect x="518.4" y="307.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.4" y="318.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.41%)</title><rect x="518.4" y="291.0" width="4.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="521.4" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (374 samples, 1.44%)</title><rect x="523.3" y="387.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (374 samples, 1.44%)</title><rect x="523.3" y="371.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.3" y="382.0"></text>
</g>
<g>
<title>char[] (170 samples, 0.65%)</title><rect x="523.3" y="355.0" width="7.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="526.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.44%)</title><rect x="531.0" y="355.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="534.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (90 samples, 0.35%)</title><rect x="536.2" y="355.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (90 samples, 0.35%)</title><rect x="536.2" y="339.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (90 samples, 0.35%)</title><rect x="536.2" y="323.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.2" y="334.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.35%)</title><rect x="536.2" y="307.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="539.2" y="318.0"></text>
</g>
<g>
<title>[worker_1 tid=14429] (1,798 samples, 6.92%)</title><rect x="540.3" y="467.0" width="81.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="543.3" y="478.0">[worker_1..</text>
</g>
<g>
<title>java/lang/Thread.run (1,798 samples, 6.92%)</title><rect x="540.3" y="451.0" width="81.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.3" y="462.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,798 samples, 6.92%)</title><rect x="540.3" y="435.0" width="81.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.3" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,798 samples, 6.92%)</title><rect x="540.3" y="419.0" width="81.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.3" y="430.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.run (1,798 samples, 6.92%)</title><rect x="540.3" y="403.0" width="81.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.3" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$2 (1,798 samples, 6.92%)</title><rect x="540.3" y="387.0" width="81.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.3" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.04%)</title><rect x="540.5" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.04%)</title><rect x="540.5" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.03%)</title><rect x="540.5" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="540.5" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.5" y="334.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="540.5" y="307.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="543.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (8 samples, 0.03%)</title><rect x="540.9" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.02%)</title><rect x="541.0" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,775 samples, 6.83%)</title><rect x="541.3" y="371.0" width="80.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.3" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (233 samples, 0.90%)</title><rect x="541.3" y="355.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (233 samples, 0.90%)</title><rect x="541.3" y="339.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (233 samples, 0.90%)</title><rect x="541.3" y="323.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (233 samples, 0.90%)</title><rect x="541.3" y="307.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (233 samples, 0.90%)</title><rect x="541.3" y="291.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (207 samples, 0.80%)</title><rect x="541.3" y="275.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.3" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (62 samples, 0.24%)</title><rect x="541.3" y="259.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (62 samples, 0.24%)</title><rect x="541.3" y="243.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (62 samples, 0.24%)</title><rect x="541.3" y="227.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.24%)</title><rect x="541.3" y="211.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.24%)</title><rect x="541.3" y="195.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (62 samples, 0.24%)</title><rect x="541.3" y="179.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (62 samples, 0.24%)</title><rect x="541.3" y="163.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (62 samples, 0.24%)</title><rect x="541.3" y="147.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (62 samples, 0.24%)</title><rect x="541.3" y="131.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (62 samples, 0.24%)</title><rect x="541.3" y="115.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (62 samples, 0.24%)</title><rect x="541.3" y="99.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="544.3" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (145 samples, 0.56%)</title><rect x="544.1" y="259.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (145 samples, 0.56%)</title><rect x="544.1" y="243.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (145 samples, 0.56%)</title><rect x="544.1" y="227.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (145 samples, 0.56%)</title><rect x="544.1" y="211.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (145 samples, 0.56%)</title><rect x="544.1" y="195.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (145 samples, 0.56%)</title><rect x="544.1" y="179.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (114 samples, 0.44%)</title><rect x="544.1" y="163.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (114 samples, 0.44%)</title><rect x="544.1" y="147.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (114 samples, 0.44%)</title><rect x="544.1" y="131.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (114 samples, 0.44%)</title><rect x="544.1" y="115.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (41 samples, 0.16%)</title><rect x="544.1" y="99.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.10%)</title><rect x="544.1" y="83.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="547.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.05%)</title><rect x="545.3" y="83.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.3" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="545.3" y="67.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="548.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (9 samples, 0.03%)</title><rect x="546.1" y="99.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="549.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (36 samples, 0.14%)</title><rect x="546.5" y="99.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (25 samples, 0.10%)</title><rect x="546.5" y="83.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.07%)</title><rect x="546.5" y="67.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="549.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.03%)</title><rect x="547.3" y="67.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.3" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="547.3" y="51.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="550.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (11 samples, 0.04%)</title><rect x="547.7" y="83.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.04%)</title><rect x="547.7" y="67.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.03%)</title><rect x="547.7" y="51.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="550.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (25 samples, 0.10%)</title><rect x="548.2" y="99.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (25 samples, 0.10%)</title><rect x="548.2" y="83.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.07%)</title><rect x="548.2" y="67.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="551.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="549.0" y="67.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.0" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="549.0" y="51.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="552.0" y="62.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (31 samples, 0.12%)</title><rect x="549.3" y="163.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.12%)</title><rect x="549.3" y="147.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (31 samples, 0.12%)</title><rect x="549.3" y="131.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (31 samples, 0.12%)</title><rect x="549.3" y="115.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.12%)</title><rect x="549.3" y="99.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.12%)</title><rect x="549.3" y="83.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="552.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$83/1556374237.apply (26 samples, 0.10%)</title><rect x="550.7" y="275.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (26 samples, 0.10%)</title><rect x="550.7" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (26 samples, 0.10%)</title><rect x="550.7" y="243.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.10%)</title><rect x="550.7" y="227.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="553.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (1,538 samples, 5.92%)</title><rect x="552.1" y="355.0" width="69.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.1" y="366.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (1,536 samples, 5.91%)</title><rect x="552.2" y="339.0" width="69.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.2" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (244 samples, 0.94%)</title><rect x="552.2" y="323.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (244 samples, 0.94%)</title><rect x="552.2" y="307.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (225 samples, 0.87%)</title><rect x="552.4" y="291.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (225 samples, 0.87%)</title><rect x="552.4" y="275.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (221 samples, 0.85%)</title><rect x="552.6" y="259.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (221 samples, 0.85%)</title><rect x="552.6" y="243.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (221 samples, 0.85%)</title><rect x="552.6" y="227.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (221 samples, 0.85%)</title><rect x="552.6" y="211.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (184 samples, 0.71%)</title><rect x="552.6" y="195.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (184 samples, 0.71%)</title><rect x="552.6" y="179.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (184 samples, 0.71%)</title><rect x="552.6" y="163.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (184 samples, 0.71%)</title><rect x="552.6" y="147.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.6" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (80 samples, 0.31%)</title><rect x="552.6" y="131.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.6" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 0.20%)</title><rect x="552.6" y="115.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="555.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.10%)</title><rect x="555.0" y="115.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.0" y="126.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.10%)</title><rect x="555.0" y="99.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="558.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (7 samples, 0.03%)</title><rect x="556.2" y="131.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="559.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (76 samples, 0.29%)</title><rect x="556.7" y="131.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.21%)</title><rect x="556.7" y="115.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.14%)</title><rect x="556.7" y="99.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="559.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.07%)</title><rect x="558.3" y="99.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.3" y="110.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="558.3" y="83.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="561.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (22 samples, 0.08%)</title><rect x="559.1" y="115.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.08%)</title><rect x="559.1" y="99.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="559.1" y="83.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="562.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.03%)</title><rect x="559.7" y="83.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.7" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="559.7" y="67.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="562.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (19 samples, 0.07%)</title><rect x="560.1" y="131.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.07%)</title><rect x="560.1" y="115.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.05%)</title><rect x="560.1" y="99.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="563.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="560.7" y="99.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.7" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="560.7" y="83.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="563.7" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (37 samples, 0.14%)</title><rect x="561.0" y="195.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (37 samples, 0.14%)</title><rect x="561.0" y="179.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (37 samples, 0.14%)</title><rect x="561.0" y="163.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (37 samples, 0.14%)</title><rect x="561.0" y="147.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.14%)</title><rect x="561.0" y="131.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.14%)</title><rect x="561.0" y="115.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="564.0" y="126.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.05%)</title><rect x="562.7" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.05%)</title><rect x="562.7" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.05%)</title><rect x="562.7" y="259.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (13 samples, 0.05%)</title><rect x="562.7" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="562.9" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.9" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="562.9" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="565.9" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.11%)</title><rect x="563.2" y="323.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="566.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,216 samples, 4.68%)</title><rect x="564.8" y="323.0" width="55.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.8" y="334.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,216 samples, 4.68%)</title><rect x="564.8" y="307.0" width="55.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.8" y="318.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$82/1570121000.accept (1,214 samples, 4.67%)</title><rect x="564.9" y="291.0" width="55.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.9" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (1,214 samples, 4.67%)</title><rect x="564.9" y="275.0" width="55.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.9" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (1,214 samples, 4.67%)</title><rect x="564.9" y="259.0" width="55.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.9" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.SSTable$1 (11 samples, 0.04%)</title><rect x="564.9" y="243.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="567.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (1,203 samples, 4.63%)</title><rect x="565.4" y="243.0" width="54.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.4" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (1,203 samples, 4.63%)</title><rect x="565.4" y="227.0" width="54.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.4" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (1,203 samples, 4.63%)</title><rect x="565.4" y="211.0" width="54.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.4" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (803 samples, 3.09%)</title><rect x="565.4" y="195.0" width="36.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.4" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (514 samples, 1.98%)</title><rect x="565.4" y="179.0" width="23.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="568.4" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (289 samples, 1.11%)</title><rect x="588.7" y="179.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.7" y="190.0"></text>
</g>
<g>
<title>byte[] (289 samples, 1.11%)</title><rect x="588.7" y="163.0" width="13.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="591.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (400 samples, 1.54%)</title><rect x="601.9" y="195.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (400 samples, 1.54%)</title><rect x="601.9" y="179.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (260 samples, 1.00%)</title><rect x="601.9" y="163.0" width="11.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="604.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (140 samples, 0.54%)</title><rect x="613.7" y="163.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.7" y="174.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.54%)</title><rect x="613.7" y="147.0" width="6.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="616.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.07%)</title><rect x="620.4" y="323.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (16 samples, 0.06%)</title><rect x="620.4" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.06%)</title><rect x="620.4" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.4" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.03%)</title><rect x="620.5" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.03%)</title><rect x="620.5" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.03%)</title><rect x="620.5" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.03%)</title><rect x="620.5" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.03%)</title><rect x="620.5" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (8 samples, 0.03%)</title><rect x="620.5" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (8 samples, 0.03%)</title><rect x="620.5" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (8 samples, 0.03%)</title><rect x="620.5" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (8 samples, 0.03%)</title><rect x="620.5" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="620.5" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="620.5" y="115.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="623.5" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.03%)</title><rect x="620.9" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.03%)</title><rect x="620.9" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.03%)</title><rect x="620.9" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.03%)</title><rect x="620.9" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="620.9" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="620.9" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (7 samples, 0.03%)</title><rect x="620.9" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.03%)</title><rect x="620.9" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (7 samples, 0.03%)</title><rect x="620.9" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (7 samples, 0.03%)</title><rect x="620.9" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="620.9" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="620.9" y="99.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="623.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (17 samples, 0.07%)</title><rect x="621.2" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (8 samples, 0.03%)</title><rect x="621.3" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (7 samples, 0.03%)</title><rect x="621.4" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (6 samples, 0.02%)</title><rect x="621.4" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (6 samples, 0.02%)</title><rect x="621.4" y="259.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="624.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.02%)</title><rect x="621.7" y="307.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (6 samples, 0.02%)</title><rect x="621.7" y="291.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="624.7" y="302.0"></text>
</g>
<g>
<title>[worker_2 tid=14430] (1,807 samples, 6.96%)</title><rect x="621.9" y="467.0" width="82.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="624.9" y="478.0">[worker_2..</text>
</g>
<g>
<title>java/lang/Thread.run (1,807 samples, 6.96%)</title><rect x="621.9" y="451.0" width="82.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.9" y="462.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,807 samples, 6.96%)</title><rect x="621.9" y="435.0" width="82.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.9" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,807 samples, 6.96%)</title><rect x="621.9" y="419.0" width="82.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.9" y="430.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.run (1,807 samples, 6.96%)</title><rect x="621.9" y="403.0" width="82.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.9" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$2 (1,807 samples, 6.96%)</title><rect x="621.9" y="387.0" width="82.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.9" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.02%)</title><rect x="622.2" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.02%)</title><rect x="622.2" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,794 samples, 6.91%)</title><rect x="622.5" y="371.0" width="81.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.5" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (224 samples, 0.86%)</title><rect x="622.5" y="355.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (224 samples, 0.86%)</title><rect x="622.5" y="339.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (224 samples, 0.86%)</title><rect x="622.5" y="323.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (224 samples, 0.86%)</title><rect x="622.5" y="307.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (224 samples, 0.86%)</title><rect x="622.5" y="291.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (204 samples, 0.79%)</title><rect x="622.5" y="275.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.5" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (60 samples, 0.23%)</title><rect x="622.6" y="259.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (60 samples, 0.23%)</title><rect x="622.6" y="243.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (60 samples, 0.23%)</title><rect x="622.6" y="227.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (60 samples, 0.23%)</title><rect x="622.6" y="211.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (60 samples, 0.23%)</title><rect x="622.6" y="195.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (60 samples, 0.23%)</title><rect x="622.6" y="179.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (60 samples, 0.23%)</title><rect x="622.6" y="163.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (60 samples, 0.23%)</title><rect x="622.6" y="147.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (60 samples, 0.23%)</title><rect x="622.6" y="131.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (60 samples, 0.23%)</title><rect x="622.6" y="115.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (60 samples, 0.23%)</title><rect x="622.6" y="99.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="625.6" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (143 samples, 0.55%)</title><rect x="625.3" y="259.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (143 samples, 0.55%)</title><rect x="625.3" y="243.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (143 samples, 0.55%)</title><rect x="625.3" y="227.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (143 samples, 0.55%)</title><rect x="625.3" y="211.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (143 samples, 0.55%)</title><rect x="625.3" y="195.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (143 samples, 0.55%)</title><rect x="625.3" y="179.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (110 samples, 0.42%)</title><rect x="625.3" y="163.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (110 samples, 0.42%)</title><rect x="625.3" y="147.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (110 samples, 0.42%)</title><rect x="625.3" y="131.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (110 samples, 0.42%)</title><rect x="625.3" y="115.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (45 samples, 0.17%)</title><rect x="625.3" y="99.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.13%)</title><rect x="625.3" y="83.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="628.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.05%)</title><rect x="626.8" y="83.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.8" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="626.8" y="67.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="629.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (6 samples, 0.02%)</title><rect x="627.4" y="99.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="630.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (46 samples, 0.18%)</title><rect x="627.7" y="99.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (29 samples, 0.11%)</title><rect x="627.7" y="83.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.06%)</title><rect x="627.7" y="67.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="630.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.05%)</title><rect x="628.4" y="67.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.4" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="628.4" y="51.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="631.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (17 samples, 0.07%)</title><rect x="629.0" y="83.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.07%)</title><rect x="629.0" y="67.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.04%)</title><rect x="629.0" y="51.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="632.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="629.5" y="51.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.5" y="62.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="629.5" y="35.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="632.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (11 samples, 0.04%)</title><rect x="629.8" y="99.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.04%)</title><rect x="629.8" y="83.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.02%)</title><rect x="629.8" y="67.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="632.8" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (33 samples, 0.13%)</title><rect x="630.3" y="163.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (33 samples, 0.13%)</title><rect x="630.3" y="147.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (33 samples, 0.13%)</title><rect x="630.3" y="131.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (33 samples, 0.13%)</title><rect x="630.3" y="115.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.13%)</title><rect x="630.3" y="99.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.13%)</title><rect x="630.3" y="83.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="633.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$83/1556374237.apply (20 samples, 0.08%)</title><rect x="631.8" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (20 samples, 0.08%)</title><rect x="631.8" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.08%)</title><rect x="631.8" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.08%)</title><rect x="631.8" y="227.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="634.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (1,563 samples, 6.02%)</title><rect x="633.0" y="355.0" width="71.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.0" y="366.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (1,563 samples, 6.02%)</title><rect x="633.0" y="339.0" width="71.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.0" y="350.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (253 samples, 0.97%)</title><rect x="633.1" y="323.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (253 samples, 0.97%)</title><rect x="633.1" y="307.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (229 samples, 0.88%)</title><rect x="633.7" y="291.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (229 samples, 0.88%)</title><rect x="633.7" y="275.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (225 samples, 0.87%)</title><rect x="633.9" y="259.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (225 samples, 0.87%)</title><rect x="633.9" y="243.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (225 samples, 0.87%)</title><rect x="633.9" y="227.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (225 samples, 0.87%)</title><rect x="633.9" y="211.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (189 samples, 0.73%)</title><rect x="633.9" y="195.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (189 samples, 0.73%)</title><rect x="633.9" y="179.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (189 samples, 0.73%)</title><rect x="633.9" y="163.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (189 samples, 0.73%)</title><rect x="633.9" y="147.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (71 samples, 0.27%)</title><rect x="633.9" y="131.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 0.19%)</title><rect x="633.9" y="115.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="636.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (22 samples, 0.08%)</title><rect x="636.1" y="115.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.1" y="126.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.08%)</title><rect x="636.1" y="99.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="639.1" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (10 samples, 0.04%)</title><rect x="637.1" y="131.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="640.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (12 samples, 0.05%)</title><rect x="637.5" y="131.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="640.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (70 samples, 0.27%)</title><rect x="638.1" y="131.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="641.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (48 samples, 0.18%)</title><rect x="638.1" y="115.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.12%)</title><rect x="638.1" y="99.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="641.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.07%)</title><rect x="639.5" y="99.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.5" y="110.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="639.5" y="83.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="642.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (22 samples, 0.08%)</title><rect x="640.3" y="115.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.08%)</title><rect x="640.3" y="99.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.05%)</title><rect x="640.3" y="83.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="643.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.03%)</title><rect x="640.8" y="83.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.8" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="640.8" y="67.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="643.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (26 samples, 0.10%)</title><rect x="641.3" y="131.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (26 samples, 0.10%)</title><rect x="641.3" y="115.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.07%)</title><rect x="641.3" y="99.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="644.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.03%)</title><rect x="642.0" y="99.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.0" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="642.0" y="83.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="645.0" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (36 samples, 0.14%)</title><rect x="642.4" y="195.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (36 samples, 0.14%)</title><rect x="642.4" y="179.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (36 samples, 0.14%)</title><rect x="642.4" y="163.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (36 samples, 0.14%)</title><rect x="642.4" y="147.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (36 samples, 0.14%)</title><rect x="642.4" y="131.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.14%)</title><rect x="642.4" y="115.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="645.4" y="126.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.04%)</title><rect x="644.1" y="291.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.04%)</title><rect x="644.1" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.04%)</title><rect x="644.1" y="259.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (11 samples, 0.04%)</title><rect x="644.1" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.1" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.08%)</title><rect x="644.6" y="323.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="647.6" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,232 samples, 4.74%)</title><rect x="645.8" y="323.0" width="55.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.8" y="334.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,232 samples, 4.74%)</title><rect x="645.8" y="307.0" width="55.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.8" y="318.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$82/1570121000.accept (1,229 samples, 4.73%)</title><rect x="645.9" y="291.0" width="55.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.9" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (1,229 samples, 4.73%)</title><rect x="645.9" y="275.0" width="55.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.9" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (1,229 samples, 4.73%)</title><rect x="645.9" y="259.0" width="55.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.9" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.SSTable$1 (6 samples, 0.02%)</title><rect x="645.9" y="243.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="648.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (1,223 samples, 4.71%)</title><rect x="646.2" y="243.0" width="55.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.2" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (1,223 samples, 4.71%)</title><rect x="646.2" y="227.0" width="55.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.2" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (1,223 samples, 4.71%)</title><rect x="646.2" y="211.0" width="55.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.2" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (833 samples, 3.21%)</title><rect x="646.2" y="195.0" width="37.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.2" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (534 samples, 2.06%)</title><rect x="646.2" y="179.0" width="24.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="649.2" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (299 samples, 1.15%)</title><rect x="670.4" y="179.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.4" y="190.0"></text>
</g>
<g>
<title>byte[] (299 samples, 1.15%)</title><rect x="670.4" y="163.0" width="13.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="673.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (390 samples, 1.50%)</title><rect x="684.0" y="195.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (390 samples, 1.50%)</title><rect x="684.0" y="179.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (256 samples, 0.99%)</title><rect x="684.0" y="163.0" width="11.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="687.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (134 samples, 0.52%)</title><rect x="695.6" y="163.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.6" y="174.0"></text>
</g>
<g>
<title>byte[] (134 samples, 0.52%)</title><rect x="695.6" y="147.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="698.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (28 samples, 0.11%)</title><rect x="702.0" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (26 samples, 0.10%)</title><rect x="702.1" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 0.10%)</title><rect x="702.1" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.1" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (13 samples, 0.05%)</title><rect x="702.1" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (13 samples, 0.05%)</title><rect x="702.1" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (13 samples, 0.05%)</title><rect x="702.1" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.05%)</title><rect x="702.1" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.05%)</title><rect x="702.1" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (13 samples, 0.05%)</title><rect x="702.1" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (13 samples, 0.05%)</title><rect x="702.1" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (13 samples, 0.05%)</title><rect x="702.1" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (13 samples, 0.05%)</title><rect x="702.1" y="147.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.05%)</title><rect x="702.1" y="131.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.1" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.05%)</title><rect x="702.1" y="115.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="705.1" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.05%)</title><rect x="702.7" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.05%)</title><rect x="702.7" y="259.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.05%)</title><rect x="702.7" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.05%)</title><rect x="702.7" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.05%)</title><rect x="702.7" y="211.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.05%)</title><rect x="702.7" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (12 samples, 0.05%)</title><rect x="702.7" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.05%)</title><rect x="702.7" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (12 samples, 0.05%)</title><rect x="702.7" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (12 samples, 0.05%)</title><rect x="702.7" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.05%)</title><rect x="702.7" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.05%)</title><rect x="702.7" y="99.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="705.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (18 samples, 0.07%)</title><rect x="703.2" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.02%)</title><rect x="703.2" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.2" y="318.0"></text>
</g>
<g>
<title>[worker_3 tid=14431] (1,789 samples, 6.89%)</title><rect x="704.1" y="467.0" width="81.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="707.1" y="478.0">[worker_3..</text>
</g>
<g>
<title>java/lang/Thread.run (1,789 samples, 6.89%)</title><rect x="704.1" y="451.0" width="81.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.1" y="462.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,789 samples, 6.89%)</title><rect x="704.1" y="435.0" width="81.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.1" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,789 samples, 6.89%)</title><rect x="704.1" y="419.0" width="81.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.1" y="430.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.run (1,789 samples, 6.89%)</title><rect x="704.1" y="403.0" width="81.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.1" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$2 (1,789 samples, 6.89%)</title><rect x="704.1" y="387.0" width="81.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.1" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.04%)</title><rect x="704.4" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.04%)</title><rect x="704.4" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.03%)</title><rect x="704.4" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 0.03%)</title><rect x="704.4" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.4" y="334.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="704.4" y="307.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,766 samples, 6.80%)</title><rect x="705.1" y="371.0" width="80.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.1" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (239 samples, 0.92%)</title><rect x="705.1" y="355.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (239 samples, 0.92%)</title><rect x="705.1" y="339.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (239 samples, 0.92%)</title><rect x="705.1" y="323.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (239 samples, 0.92%)</title><rect x="705.1" y="307.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (239 samples, 0.92%)</title><rect x="705.1" y="291.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (212 samples, 0.82%)</title><rect x="705.1" y="275.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.1" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (57 samples, 0.22%)</title><rect x="705.1" y="259.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (57 samples, 0.22%)</title><rect x="705.1" y="243.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (57 samples, 0.22%)</title><rect x="705.1" y="227.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.22%)</title><rect x="705.1" y="211.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.22%)</title><rect x="705.1" y="195.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (57 samples, 0.22%)</title><rect x="705.1" y="179.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (57 samples, 0.22%)</title><rect x="705.1" y="163.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (57 samples, 0.22%)</title><rect x="705.1" y="147.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (57 samples, 0.22%)</title><rect x="705.1" y="131.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.1" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (57 samples, 0.22%)</title><rect x="705.1" y="115.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.22%)</title><rect x="705.1" y="99.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="708.1" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (155 samples, 0.60%)</title><rect x="707.7" y="259.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (155 samples, 0.60%)</title><rect x="707.7" y="243.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (155 samples, 0.60%)</title><rect x="707.7" y="227.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (155 samples, 0.60%)</title><rect x="707.7" y="211.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (155 samples, 0.60%)</title><rect x="707.7" y="195.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (155 samples, 0.60%)</title><rect x="707.7" y="179.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (122 samples, 0.47%)</title><rect x="707.7" y="163.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (122 samples, 0.47%)</title><rect x="707.7" y="147.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (122 samples, 0.47%)</title><rect x="707.7" y="131.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (122 samples, 0.47%)</title><rect x="707.7" y="115.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (50 samples, 0.19%)</title><rect x="707.7" y="99.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.11%)</title><rect x="707.7" y="83.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="710.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (22 samples, 0.08%)</title><rect x="709.0" y="83.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.0" y="94.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.08%)</title><rect x="709.0" y="67.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="712.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (48 samples, 0.18%)</title><rect x="710.3" y="99.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.13%)</title><rect x="710.3" y="83.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.09%)</title><rect x="710.3" y="67.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="713.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.04%)</title><rect x="711.4" y="67.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.4" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="711.4" y="51.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="714.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (14 samples, 0.05%)</title><rect x="711.8" y="83.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.05%)</title><rect x="711.8" y="67.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.04%)</title><rect x="711.8" y="51.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="714.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (17 samples, 0.07%)</title><rect x="712.5" y="99.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.07%)</title><rect x="712.5" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.05%)</title><rect x="712.5" y="67.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="715.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (33 samples, 0.13%)</title><rect x="713.2" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (33 samples, 0.13%)</title><rect x="713.2" y="147.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (33 samples, 0.13%)</title><rect x="713.2" y="131.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (33 samples, 0.13%)</title><rect x="713.2" y="115.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.13%)</title><rect x="713.2" y="99.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.13%)</title><rect x="713.2" y="83.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="716.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$83/1556374237.apply (27 samples, 0.10%)</title><rect x="714.7" y="275.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (27 samples, 0.10%)</title><rect x="714.7" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (27 samples, 0.10%)</title><rect x="714.7" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.10%)</title><rect x="714.7" y="227.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="717.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (1,522 samples, 5.86%)</title><rect x="716.2" y="355.0" width="69.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.2" y="366.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (1,521 samples, 5.86%)</title><rect x="716.2" y="339.0" width="69.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.2" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (241 samples, 0.93%)</title><rect x="716.3" y="323.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (240 samples, 0.92%)</title><rect x="716.4" y="307.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (13 samples, 0.05%)</title><rect x="716.4" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.4" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (13 samples, 0.05%)</title><rect x="716.4" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="719.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (211 samples, 0.81%)</title><rect x="717.1" y="291.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (211 samples, 0.81%)</title><rect x="717.1" y="275.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (206 samples, 0.79%)</title><rect x="717.4" y="259.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (206 samples, 0.79%)</title><rect x="717.4" y="243.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (206 samples, 0.79%)</title><rect x="717.4" y="227.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (206 samples, 0.79%)</title><rect x="717.4" y="211.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (169 samples, 0.65%)</title><rect x="717.4" y="195.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (169 samples, 0.65%)</title><rect x="717.4" y="179.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (169 samples, 0.65%)</title><rect x="717.4" y="163.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (169 samples, 0.65%)</title><rect x="717.4" y="147.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.4" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (79 samples, 0.30%)</title><rect x="717.4" y="131.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.18%)</title><rect x="717.4" y="115.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="720.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (33 samples, 0.13%)</title><rect x="719.5" y="115.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.5" y="126.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.13%)</title><rect x="719.5" y="99.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="722.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (63 samples, 0.24%)</title><rect x="721.4" y="131.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.14%)</title><rect x="721.4" y="115.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.09%)</title><rect x="721.4" y="99.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="724.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.05%)</title><rect x="722.5" y="99.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.5" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="722.5" y="83.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="725.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (26 samples, 0.10%)</title><rect x="723.1" y="115.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (26 samples, 0.10%)</title><rect x="723.1" y="99.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="723.1" y="83.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="726.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.05%)</title><rect x="723.7" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.7" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="723.7" y="67.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="726.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (17 samples, 0.07%)</title><rect x="724.3" y="131.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.07%)</title><rect x="724.3" y="115.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="724.3" y="99.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="727.3" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (37 samples, 0.14%)</title><rect x="725.0" y="195.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (37 samples, 0.14%)</title><rect x="725.0" y="179.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (37 samples, 0.14%)</title><rect x="725.0" y="163.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (37 samples, 0.14%)</title><rect x="725.0" y="147.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.14%)</title><rect x="725.0" y="131.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.14%)</title><rect x="725.0" y="115.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="728.0" y="126.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.05%)</title><rect x="726.7" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.05%)</title><rect x="726.7" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.05%)</title><rect x="726.7" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (11 samples, 0.04%)</title><rect x="726.8" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.8" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.10%)</title><rect x="727.3" y="323.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="730.3" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,194 samples, 4.60%)</title><rect x="728.8" y="323.0" width="54.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.8" y="334.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,194 samples, 4.60%)</title><rect x="728.8" y="307.0" width="54.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.8" y="318.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$82/1570121000.accept (1,193 samples, 4.59%)</title><rect x="728.9" y="291.0" width="54.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.9" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (1,193 samples, 4.59%)</title><rect x="728.9" y="275.0" width="54.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.9" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (1,193 samples, 4.59%)</title><rect x="728.9" y="259.0" width="54.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.9" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.SSTable$1 (9 samples, 0.03%)</title><rect x="728.9" y="243.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="731.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (1,184 samples, 4.56%)</title><rect x="729.3" y="243.0" width="53.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.3" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (1,184 samples, 4.56%)</title><rect x="729.3" y="227.0" width="53.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.3" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (1,184 samples, 4.56%)</title><rect x="729.3" y="211.0" width="53.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.3" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (799 samples, 3.08%)</title><rect x="729.3" y="195.0" width="36.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.3" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (531 samples, 2.04%)</title><rect x="729.3" y="179.0" width="24.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="732.3" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (268 samples, 1.03%)</title><rect x="753.4" y="179.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.4" y="190.0"></text>
</g>
<g>
<title>byte[] (268 samples, 1.03%)</title><rect x="753.4" y="163.0" width="12.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="756.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (385 samples, 1.48%)</title><rect x="765.6" y="195.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (385 samples, 1.48%)</title><rect x="765.6" y="179.0" width="17.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.6" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (261 samples, 1.01%)</title><rect x="765.6" y="163.0" width="11.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="768.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (124 samples, 0.48%)</title><rect x="777.4" y="163.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.4" y="174.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.48%)</title><rect x="777.4" y="147.0" width="5.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="780.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (21 samples, 0.08%)</title><rect x="783.3" y="323.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.08%)</title><rect x="783.3" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.08%)</title><rect x="783.3" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.3" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (18 samples, 0.07%)</title><rect x="783.3" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (18 samples, 0.07%)</title><rect x="783.3" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (18 samples, 0.07%)</title><rect x="783.3" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.07%)</title><rect x="783.3" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.07%)</title><rect x="783.3" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (18 samples, 0.07%)</title><rect x="783.3" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.07%)</title><rect x="783.3" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (18 samples, 0.07%)</title><rect x="783.3" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (18 samples, 0.07%)</title><rect x="783.3" y="147.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.07%)</title><rect x="783.3" y="131.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.07%)</title><rect x="783.3" y="115.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="786.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (24 samples, 0.09%)</title><rect x="784.2" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.03%)</title><rect x="784.2" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.02%)</title><rect x="784.3" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (6 samples, 0.02%)</title><rect x="784.3" y="275.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="787.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (6 samples, 0.02%)</title><rect x="784.9" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.9" y="318.0"></text>
</g>
<g>
<title>[worker_4 tid=14432] (1,773 samples, 6.83%)</title><rect x="785.3" y="467.0" width="80.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="788.3" y="478.0">[worker_4..</text>
</g>
<g>
<title>java/lang/Thread.run (1,773 samples, 6.83%)</title><rect x="785.3" y="451.0" width="80.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.3" y="462.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,773 samples, 6.83%)</title><rect x="785.3" y="435.0" width="80.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.3" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,773 samples, 6.83%)</title><rect x="785.3" y="419.0" width="80.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.3" y="430.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.run (1,773 samples, 6.83%)</title><rect x="785.3" y="403.0" width="80.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.3" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$2 (1,773 samples, 6.83%)</title><rect x="785.3" y="387.0" width="80.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.3" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 0.04%)</title><rect x="785.6" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 0.04%)</title><rect x="785.6" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.03%)</title><rect x="785.6" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 0.03%)</title><rect x="785.6" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.6" y="334.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="785.6" y="307.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="788.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (12 samples, 0.05%)</title><rect x="786.1" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.04%)</title><rect x="786.2" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,745 samples, 6.72%)</title><rect x="786.6" y="371.0" width="79.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.6" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (250 samples, 0.96%)</title><rect x="786.6" y="355.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (250 samples, 0.96%)</title><rect x="786.6" y="339.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (250 samples, 0.96%)</title><rect x="786.6" y="323.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (250 samples, 0.96%)</title><rect x="786.6" y="307.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (250 samples, 0.96%)</title><rect x="786.6" y="291.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (222 samples, 0.85%)</title><rect x="786.6" y="275.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.6" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (66 samples, 0.25%)</title><rect x="786.6" y="259.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (66 samples, 0.25%)</title><rect x="786.6" y="243.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (66 samples, 0.25%)</title><rect x="786.6" y="227.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (66 samples, 0.25%)</title><rect x="786.6" y="211.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (66 samples, 0.25%)</title><rect x="786.6" y="195.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (66 samples, 0.25%)</title><rect x="786.6" y="179.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (66 samples, 0.25%)</title><rect x="786.6" y="163.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (66 samples, 0.25%)</title><rect x="786.6" y="147.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (66 samples, 0.25%)</title><rect x="786.6" y="131.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (66 samples, 0.25%)</title><rect x="786.6" y="115.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (66 samples, 0.25%)</title><rect x="786.6" y="99.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="789.6" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (156 samples, 0.60%)</title><rect x="789.6" y="259.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (156 samples, 0.60%)</title><rect x="789.6" y="243.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (156 samples, 0.60%)</title><rect x="789.6" y="227.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (156 samples, 0.60%)</title><rect x="789.6" y="211.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (156 samples, 0.60%)</title><rect x="789.6" y="195.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (156 samples, 0.60%)</title><rect x="789.6" y="179.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (120 samples, 0.46%)</title><rect x="789.6" y="163.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (120 samples, 0.46%)</title><rect x="789.6" y="147.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (120 samples, 0.46%)</title><rect x="789.6" y="131.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (120 samples, 0.46%)</title><rect x="789.6" y="115.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (49 samples, 0.19%)</title><rect x="789.6" y="99.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.12%)</title><rect x="789.6" y="83.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="792.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.07%)</title><rect x="791.1" y="83.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.1" y="94.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="791.1" y="67.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="794.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (47 samples, 0.18%)</title><rect x="792.1" y="99.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (28 samples, 0.11%)</title><rect x="792.1" y="83.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.08%)</title><rect x="792.1" y="67.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="795.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="793.1" y="67.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.1" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="793.1" y="51.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="796.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (19 samples, 0.07%)</title><rect x="793.4" y="83.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.07%)</title><rect x="793.4" y="67.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="793.4" y="51.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="796.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (18 samples, 0.07%)</title><rect x="794.2" y="99.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.07%)</title><rect x="794.2" y="83.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.05%)</title><rect x="794.2" y="67.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="797.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="794.8" y="67.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.8" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="794.8" y="51.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="797.8" y="62.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (36 samples, 0.14%)</title><rect x="795.1" y="163.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (36 samples, 0.14%)</title><rect x="795.1" y="147.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (36 samples, 0.14%)</title><rect x="795.1" y="131.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (36 samples, 0.14%)</title><rect x="795.1" y="115.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (36 samples, 0.14%)</title><rect x="795.1" y="99.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.14%)</title><rect x="795.1" y="83.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="798.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$83/1556374237.apply (28 samples, 0.11%)</title><rect x="796.7" y="275.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (28 samples, 0.11%)</title><rect x="796.7" y="259.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (28 samples, 0.11%)</title><rect x="796.7" y="243.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.11%)</title><rect x="796.7" y="227.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="799.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (1,491 samples, 5.74%)</title><rect x="798.2" y="355.0" width="67.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.2" y="366.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (1,489 samples, 5.73%)</title><rect x="798.2" y="339.0" width="67.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.2" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (198 samples, 0.76%)</title><rect x="798.4" y="323.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (197 samples, 0.76%)</title><rect x="798.4" y="307.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (9 samples, 0.03%)</title><rect x="798.5" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.5" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (9 samples, 0.03%)</title><rect x="798.5" y="275.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="801.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (179 samples, 0.69%)</title><rect x="798.9" y="291.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (179 samples, 0.69%)</title><rect x="798.9" y="275.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (176 samples, 0.68%)</title><rect x="799.1" y="259.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (176 samples, 0.68%)</title><rect x="799.1" y="243.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (176 samples, 0.68%)</title><rect x="799.1" y="227.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (176 samples, 0.68%)</title><rect x="799.1" y="211.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (142 samples, 0.55%)</title><rect x="799.1" y="195.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (142 samples, 0.55%)</title><rect x="799.1" y="179.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (142 samples, 0.55%)</title><rect x="799.1" y="163.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (142 samples, 0.55%)</title><rect x="799.1" y="147.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (59 samples, 0.23%)</title><rect x="799.1" y="131.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.1" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.13%)</title><rect x="799.1" y="115.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="802.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (25 samples, 0.10%)</title><rect x="800.6" y="115.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.6" y="126.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.10%)</title><rect x="800.6" y="99.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="803.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (66 samples, 0.25%)</title><rect x="802.1" y="131.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (46 samples, 0.18%)</title><rect x="802.1" y="115.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.14%)</title><rect x="802.1" y="99.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="805.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.04%)</title><rect x="803.7" y="99.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.7" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="803.7" y="83.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="806.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (20 samples, 0.08%)</title><rect x="804.1" y="115.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.08%)</title><rect x="804.1" y="99.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.06%)</title><rect x="804.1" y="83.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="807.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (10 samples, 0.04%)</title><rect x="805.1" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.04%)</title><rect x="805.1" y="115.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.03%)</title><rect x="805.1" y="99.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="808.1" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (34 samples, 0.13%)</title><rect x="805.5" y="195.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (34 samples, 0.13%)</title><rect x="805.5" y="179.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (34 samples, 0.13%)</title><rect x="805.5" y="163.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (34 samples, 0.13%)</title><rect x="805.5" y="147.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (34 samples, 0.13%)</title><rect x="805.5" y="131.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.13%)</title><rect x="805.5" y="115.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="808.5" y="126.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.03%)</title><rect x="807.1" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.03%)</title><rect x="807.1" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.03%)</title><rect x="807.1" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (7 samples, 0.03%)</title><rect x="807.1" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.1" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (26 samples, 0.10%)</title><rect x="807.4" y="323.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="810.4" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,211 samples, 4.66%)</title><rect x="808.9" y="323.0" width="55.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.9" y="334.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,211 samples, 4.66%)</title><rect x="808.9" y="307.0" width="55.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.9" y="318.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$82/1570121000.accept (1,207 samples, 4.65%)</title><rect x="809.1" y="291.0" width="54.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.1" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (1,207 samples, 4.65%)</title><rect x="809.1" y="275.0" width="54.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.1" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (1,207 samples, 4.65%)</title><rect x="809.1" y="259.0" width="54.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.1" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.SSTable$1 (10 samples, 0.04%)</title><rect x="809.1" y="243.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="812.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (1,197 samples, 4.61%)</title><rect x="809.5" y="243.0" width="54.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.5" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (1,197 samples, 4.61%)</title><rect x="809.5" y="227.0" width="54.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.5" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (1,197 samples, 4.61%)</title><rect x="809.5" y="211.0" width="54.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.5" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (807 samples, 3.11%)</title><rect x="809.5" y="195.0" width="36.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.5" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (513 samples, 1.98%)</title><rect x="809.5" y="179.0" width="23.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="812.5" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (294 samples, 1.13%)</title><rect x="832.8" y="179.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.8" y="190.0"></text>
</g>
<g>
<title>byte[] (294 samples, 1.13%)</title><rect x="832.8" y="163.0" width="13.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="835.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (390 samples, 1.50%)</title><rect x="846.2" y="195.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (390 samples, 1.50%)</title><rect x="846.2" y="179.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (267 samples, 1.03%)</title><rect x="846.2" y="163.0" width="12.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="849.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (123 samples, 0.47%)</title><rect x="858.3" y="163.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.3" y="174.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.47%)</title><rect x="858.3" y="147.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="861.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (16 samples, 0.06%)</title><rect x="864.2" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (15 samples, 0.06%)</title><rect x="864.2" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.06%)</title><rect x="864.2" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.2" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.03%)</title><rect x="864.3" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.03%)</title><rect x="864.3" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="867.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.03%)</title><rect x="864.3" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="867.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="864.3" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="864.3" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (7 samples, 0.03%)</title><rect x="864.3" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.03%)</title><rect x="864.3" y="179.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (7 samples, 0.03%)</title><rect x="864.3" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (7 samples, 0.03%)</title><rect x="864.3" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="867.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="864.3" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="864.3" y="115.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="867.3" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.03%)</title><rect x="864.6" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.03%)</title><rect x="864.6" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.03%)</title><rect x="864.6" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.03%)</title><rect x="864.6" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="864.6" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="864.6" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (7 samples, 0.03%)</title><rect x="864.6" y="179.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.03%)</title><rect x="864.6" y="163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (7 samples, 0.03%)</title><rect x="864.6" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (7 samples, 0.03%)</title><rect x="864.6" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="864.6" y="115.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="864.6" y="99.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="867.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (22 samples, 0.08%)</title><rect x="864.9" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.9" y="334.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.03%)</title><rect x="864.9" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (7 samples, 0.03%)</title><rect x="865.6" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.6" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (7 samples, 0.03%)</title><rect x="865.6" y="291.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="868.6" y="302.0"></text>
</g>
<g>
<title>[worker_6 tid=14434] (1,795 samples, 6.91%)</title><rect x="865.9" y="467.0" width="81.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="868.9" y="478.0">[worker_6..</text>
</g>
<g>
<title>java/lang/Thread.run (1,795 samples, 6.91%)</title><rect x="865.9" y="451.0" width="81.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.9" y="462.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,795 samples, 6.91%)</title><rect x="865.9" y="435.0" width="81.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.9" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,795 samples, 6.91%)</title><rect x="865.9" y="419.0" width="81.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.9" y="430.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.run (1,795 samples, 6.91%)</title><rect x="865.9" y="403.0" width="81.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.9" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$2 (1,795 samples, 6.91%)</title><rect x="865.9" y="387.0" width="81.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.9" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.04%)</title><rect x="866.0" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="869.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.04%)</title><rect x="866.0" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="869.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.03%)</title><rect x="866.0" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="866.0" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="869.0" y="334.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="866.0" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="869.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,778 samples, 6.85%)</title><rect x="866.7" y="371.0" width="80.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.7" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (221 samples, 0.85%)</title><rect x="866.7" y="355.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (221 samples, 0.85%)</title><rect x="866.7" y="339.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (221 samples, 0.85%)</title><rect x="866.7" y="323.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="869.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (221 samples, 0.85%)</title><rect x="866.7" y="307.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (221 samples, 0.85%)</title><rect x="866.7" y="291.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (205 samples, 0.79%)</title><rect x="866.7" y="275.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="869.7" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (63 samples, 0.24%)</title><rect x="866.7" y="259.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="869.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (63 samples, 0.24%)</title><rect x="866.7" y="243.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="869.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (63 samples, 0.24%)</title><rect x="866.7" y="227.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (63 samples, 0.24%)</title><rect x="866.7" y="211.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (63 samples, 0.24%)</title><rect x="866.7" y="195.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (63 samples, 0.24%)</title><rect x="866.7" y="179.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="869.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (63 samples, 0.24%)</title><rect x="866.7" y="163.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (63 samples, 0.24%)</title><rect x="866.7" y="147.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (63 samples, 0.24%)</title><rect x="866.7" y="131.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (63 samples, 0.24%)</title><rect x="866.7" y="115.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 0.24%)</title><rect x="866.7" y="99.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="869.7" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (142 samples, 0.55%)</title><rect x="869.5" y="259.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (142 samples, 0.55%)</title><rect x="869.5" y="243.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (142 samples, 0.55%)</title><rect x="869.5" y="227.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (142 samples, 0.55%)</title><rect x="869.5" y="211.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (142 samples, 0.55%)</title><rect x="869.5" y="195.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (142 samples, 0.55%)</title><rect x="869.5" y="179.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (110 samples, 0.42%)</title><rect x="869.5" y="163.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (110 samples, 0.42%)</title><rect x="869.5" y="147.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (110 samples, 0.42%)</title><rect x="869.5" y="131.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (110 samples, 0.42%)</title><rect x="869.5" y="115.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (45 samples, 0.17%)</title><rect x="869.5" y="99.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.10%)</title><rect x="869.5" y="83.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="872.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.07%)</title><rect x="870.8" y="83.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.8" y="94.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.07%)</title><rect x="870.8" y="67.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="873.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (8 samples, 0.03%)</title><rect x="871.6" y="99.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="874.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (39 samples, 0.15%)</title><rect x="872.2" y="99.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (28 samples, 0.11%)</title><rect x="872.2" y="83.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.08%)</title><rect x="872.2" y="67.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="875.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.03%)</title><rect x="873.1" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.1" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="873.1" y="51.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="876.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (11 samples, 0.04%)</title><rect x="873.4" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.04%)</title><rect x="873.4" y="67.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.03%)</title><rect x="873.4" y="51.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="876.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (13 samples, 0.05%)</title><rect x="873.9" y="99.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.05%)</title><rect x="873.9" y="83.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.04%)</title><rect x="873.9" y="67.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="876.9" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (32 samples, 0.12%)</title><rect x="874.5" y="163.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (32 samples, 0.12%)</title><rect x="874.5" y="147.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (32 samples, 0.12%)</title><rect x="874.5" y="131.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (32 samples, 0.12%)</title><rect x="874.5" y="115.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (32 samples, 0.12%)</title><rect x="874.5" y="99.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.12%)</title><rect x="874.5" y="83.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="877.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$83/1556374237.apply (16 samples, 0.06%)</title><rect x="876.0" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (16 samples, 0.06%)</title><rect x="876.0" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="879.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.06%)</title><rect x="876.0" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.06%)</title><rect x="876.0" y="227.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="879.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (1,551 samples, 5.97%)</title><rect x="877.0" y="355.0" width="70.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.0" y="366.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (1,549 samples, 5.96%)</title><rect x="877.1" y="339.0" width="70.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.1" y="350.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (244 samples, 0.94%)</title><rect x="877.3" y="323.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (244 samples, 0.94%)</title><rect x="877.3" y="307.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (12 samples, 0.05%)</title><rect x="877.3" y="291.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.3" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (12 samples, 0.05%)</title><rect x="877.3" y="275.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="880.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (218 samples, 0.84%)</title><rect x="877.9" y="291.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (218 samples, 0.84%)</title><rect x="877.9" y="275.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (217 samples, 0.84%)</title><rect x="878.0" y="259.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (217 samples, 0.84%)</title><rect x="878.0" y="243.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (217 samples, 0.84%)</title><rect x="878.0" y="227.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (217 samples, 0.84%)</title><rect x="878.0" y="211.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (174 samples, 0.67%)</title><rect x="878.0" y="195.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (174 samples, 0.67%)</title><rect x="878.0" y="179.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (174 samples, 0.67%)</title><rect x="878.0" y="163.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (174 samples, 0.67%)</title><rect x="878.0" y="147.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (72 samples, 0.28%)</title><rect x="878.0" y="131.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (48 samples, 0.18%)</title><rect x="878.0" y="115.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="881.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.09%)</title><rect x="880.2" y="115.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.2" y="126.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.09%)</title><rect x="880.2" y="99.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="883.2" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (8 samples, 0.03%)</title><rect x="881.3" y="131.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="884.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (68 samples, 0.26%)</title><rect x="881.8" y="131.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (51 samples, 0.20%)</title><rect x="881.8" y="115.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.13%)</title><rect x="881.8" y="99.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="884.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.06%)</title><rect x="883.4" y="99.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.4" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.06%)</title><rect x="883.4" y="83.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="886.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (17 samples, 0.07%)</title><rect x="884.2" y="115.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.07%)</title><rect x="884.2" y="99.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.04%)</title><rect x="884.2" y="83.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="887.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="884.7" y="83.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.7" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="884.7" y="67.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="887.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (21 samples, 0.08%)</title><rect x="884.9" y="131.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.08%)</title><rect x="884.9" y="115.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.07%)</title><rect x="884.9" y="99.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="887.9" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (43 samples, 0.17%)</title><rect x="885.9" y="195.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (43 samples, 0.17%)</title><rect x="885.9" y="179.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="888.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (43 samples, 0.17%)</title><rect x="885.9" y="163.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (43 samples, 0.17%)</title><rect x="885.9" y="147.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="888.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (43 samples, 0.17%)</title><rect x="885.9" y="131.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (43 samples, 0.17%)</title><rect x="885.9" y="115.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="888.9" y="126.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.04%)</title><rect x="887.8" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.04%)</title><rect x="887.8" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.04%)</title><rect x="887.8" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (10 samples, 0.04%)</title><rect x="887.9" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="888.0" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.0" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="888.0" y="211.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="891.0" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.10%)</title><rect x="888.3" y="323.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="891.3" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,215 samples, 4.68%)</title><rect x="889.8" y="323.0" width="55.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.8" y="334.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,215 samples, 4.68%)</title><rect x="889.8" y="307.0" width="55.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="892.8" y="318.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$82/1570121000.accept (1,214 samples, 4.67%)</title><rect x="889.8" y="291.0" width="55.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.8" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (1,214 samples, 4.67%)</title><rect x="889.8" y="275.0" width="55.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.8" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (1,214 samples, 4.67%)</title><rect x="889.8" y="259.0" width="55.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.8" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (1,210 samples, 4.66%)</title><rect x="890.0" y="243.0" width="55.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="893.0" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (1,210 samples, 4.66%)</title><rect x="890.0" y="227.0" width="55.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.0" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (1,210 samples, 4.66%)</title><rect x="890.0" y="211.0" width="55.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.0" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (822 samples, 3.17%)</title><rect x="890.0" y="195.0" width="37.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.0" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (551 samples, 2.12%)</title><rect x="890.0" y="179.0" width="25.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="893.0" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (271 samples, 1.04%)</title><rect x="915.0" y="179.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.0" y="190.0"></text>
</g>
<g>
<title>byte[] (271 samples, 1.04%)</title><rect x="915.0" y="163.0" width="12.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="918.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (388 samples, 1.49%)</title><rect x="927.3" y="195.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (388 samples, 1.49%)</title><rect x="927.3" y="179.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (256 samples, 0.99%)</title><rect x="927.3" y="163.0" width="11.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="930.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (132 samples, 0.51%)</title><rect x="939.0" y="163.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.0" y="174.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.51%)</title><rect x="939.0" y="147.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="942.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (29 samples, 0.11%)</title><rect x="945.3" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (27 samples, 0.10%)</title><rect x="945.4" y="307.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.10%)</title><rect x="945.4" y="291.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.4" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (18 samples, 0.07%)</title><rect x="945.4" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (18 samples, 0.07%)</title><rect x="945.4" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (18 samples, 0.07%)</title><rect x="945.4" y="243.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.07%)</title><rect x="945.4" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.07%)</title><rect x="945.4" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (18 samples, 0.07%)</title><rect x="945.4" y="195.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.07%)</title><rect x="945.4" y="179.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (18 samples, 0.07%)</title><rect x="945.4" y="163.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (18 samples, 0.07%)</title><rect x="945.4" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.07%)</title><rect x="945.4" y="131.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.07%)</title><rect x="945.4" y="115.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="948.4" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.03%)</title><rect x="946.2" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.03%)</title><rect x="946.2" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.03%)</title><rect x="946.2" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.03%)</title><rect x="946.2" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.03%)</title><rect x="946.2" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.03%)</title><rect x="946.2" y="195.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (8 samples, 0.03%)</title><rect x="946.2" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (8 samples, 0.03%)</title><rect x="946.2" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (8 samples, 0.03%)</title><rect x="946.2" y="147.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (8 samples, 0.03%)</title><rect x="946.2" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="949.2" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="946.2" y="115.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.2" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="946.2" y="99.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="949.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (19 samples, 0.07%)</title><rect x="946.6" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.6" y="334.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.03%)</title><rect x="946.6" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (6 samples, 0.02%)</title><rect x="947.1" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.1" y="318.0"></text>
</g>
<g>
<title>[worker_7 tid=14435] (1,798 samples, 6.92%)</title><rect x="947.5" y="467.0" width="81.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="950.5" y="478.0">[worker_7..</text>
</g>
<g>
<title>java/lang/Thread.run (1,798 samples, 6.92%)</title><rect x="947.5" y="451.0" width="81.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="950.5" y="462.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,798 samples, 6.92%)</title><rect x="947.5" y="435.0" width="81.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.5" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,798 samples, 6.92%)</title><rect x="947.5" y="419.0" width="81.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.5" y="430.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.run (1,798 samples, 6.92%)</title><rect x="947.5" y="403.0" width="81.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.5" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$2 (1,798 samples, 6.92%)</title><rect x="947.5" y="387.0" width="81.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.5" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 0.04%)</title><rect x="947.7" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 0.04%)</title><rect x="947.7" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.7" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.02%)</title><rect x="947.9" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.9" y="350.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.02%)</title><rect x="947.9" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="950.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (7 samples, 0.03%)</title><rect x="948.2" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.02%)</title><rect x="948.2" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,775 samples, 6.83%)</title><rect x="948.5" y="371.0" width="80.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.5" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (247 samples, 0.95%)</title><rect x="948.5" y="355.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (247 samples, 0.95%)</title><rect x="948.5" y="339.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (247 samples, 0.95%)</title><rect x="948.5" y="323.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (247 samples, 0.95%)</title><rect x="948.5" y="307.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (247 samples, 0.95%)</title><rect x="948.5" y="291.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (222 samples, 0.85%)</title><rect x="948.5" y="275.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.5" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (54 samples, 0.21%)</title><rect x="948.5" y="259.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (54 samples, 0.21%)</title><rect x="948.5" y="243.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (54 samples, 0.21%)</title><rect x="948.5" y="227.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.21%)</title><rect x="948.5" y="211.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.21%)</title><rect x="948.5" y="195.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (54 samples, 0.21%)</title><rect x="948.5" y="179.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (54 samples, 0.21%)</title><rect x="948.5" y="163.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (54 samples, 0.21%)</title><rect x="948.5" y="147.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (54 samples, 0.21%)</title><rect x="948.5" y="131.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (54 samples, 0.21%)</title><rect x="948.5" y="115.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (54 samples, 0.21%)</title><rect x="948.5" y="99.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="951.5" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (168 samples, 0.65%)</title><rect x="951.0" y="259.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (168 samples, 0.65%)</title><rect x="951.0" y="243.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (168 samples, 0.65%)</title><rect x="951.0" y="227.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (168 samples, 0.65%)</title><rect x="951.0" y="211.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (168 samples, 0.65%)</title><rect x="951.0" y="195.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="954.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (168 samples, 0.65%)</title><rect x="951.0" y="179.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (138 samples, 0.53%)</title><rect x="951.0" y="163.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (138 samples, 0.53%)</title><rect x="951.0" y="147.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (138 samples, 0.53%)</title><rect x="951.0" y="131.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (138 samples, 0.53%)</title><rect x="951.0" y="115.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (56 samples, 0.22%)</title><rect x="951.0" y="99.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.12%)</title><rect x="951.0" y="83.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="954.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.09%)</title><rect x="952.4" y="83.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.4" y="94.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.09%)</title><rect x="952.4" y="67.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="955.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (6 samples, 0.02%)</title><rect x="953.7" y="99.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="956.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (54 samples, 0.21%)</title><rect x="954.0" y="99.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (36 samples, 0.14%)</title><rect x="954.0" y="83.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.08%)</title><rect x="954.0" y="67.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="957.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.05%)</title><rect x="955.0" y="67.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="958.0" y="78.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="955.0" y="51.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="958.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (18 samples, 0.07%)</title><rect x="955.6" y="83.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.07%)</title><rect x="955.6" y="67.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="955.6" y="51.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="958.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (17 samples, 0.07%)</title><rect x="956.5" y="99.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.07%)</title><rect x="956.5" y="83.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.04%)</title><rect x="956.5" y="67.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="959.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="957.0" y="67.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.0" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="957.0" y="51.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="960.0" y="62.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (30 samples, 0.12%)</title><rect x="957.2" y="163.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.12%)</title><rect x="957.2" y="147.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (30 samples, 0.12%)</title><rect x="957.2" y="131.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (30 samples, 0.12%)</title><rect x="957.2" y="115.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (30 samples, 0.12%)</title><rect x="957.2" y="99.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.12%)</title><rect x="957.2" y="83.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="960.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$83/1556374237.apply (25 samples, 0.10%)</title><rect x="958.6" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (25 samples, 0.10%)</title><rect x="958.6" y="259.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (25 samples, 0.10%)</title><rect x="958.6" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.6" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.10%)</title><rect x="958.6" y="227.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="961.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (1,524 samples, 5.87%)</title><rect x="959.9" y="355.0" width="69.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.9" y="366.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (1,522 samples, 5.86%)</title><rect x="960.0" y="339.0" width="69.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="963.0" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (247 samples, 0.95%)</title><rect x="960.2" y="323.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (246 samples, 0.95%)</title><rect x="960.2" y="307.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="963.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.03%)</title><rect x="960.3" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.3" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.03%)</title><rect x="960.3" y="275.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="963.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (232 samples, 0.89%)</title><rect x="960.7" y="291.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (232 samples, 0.89%)</title><rect x="960.7" y="275.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (12 samples, 0.05%)</title><rect x="960.7" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.05%)</title><rect x="960.7" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="963.7" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.05%)</title><rect x="960.7" y="227.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="963.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (220 samples, 0.85%)</title><rect x="961.3" y="259.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (220 samples, 0.85%)</title><rect x="961.3" y="243.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (220 samples, 0.85%)</title><rect x="961.3" y="227.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="964.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (220 samples, 0.85%)</title><rect x="961.3" y="211.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (182 samples, 0.70%)</title><rect x="961.3" y="195.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (182 samples, 0.70%)</title><rect x="961.3" y="179.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (182 samples, 0.70%)</title><rect x="961.3" y="163.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="964.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (182 samples, 0.70%)</title><rect x="961.3" y="147.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (68 samples, 0.26%)</title><rect x="961.3" y="131.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="964.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.17%)</title><rect x="961.3" y="115.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="964.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.09%)</title><rect x="963.3" y="115.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.3" y="126.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.09%)</title><rect x="963.3" y="99.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="966.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (11 samples, 0.04%)</title><rect x="964.4" y="131.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="967.4" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (9 samples, 0.03%)</title><rect x="964.9" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="967.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (74 samples, 0.28%)</title><rect x="965.3" y="131.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (52 samples, 0.20%)</title><rect x="965.3" y="115.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 0.15%)</title><rect x="965.3" y="99.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="968.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.05%)</title><rect x="967.0" y="99.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.0" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="967.0" y="83.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="970.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (22 samples, 0.08%)</title><rect x="967.6" y="115.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.08%)</title><rect x="967.6" y="99.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="967.6" y="83.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="970.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.03%)</title><rect x="968.3" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.3" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="968.3" y="67.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="971.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (20 samples, 0.08%)</title><rect x="968.6" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.08%)</title><rect x="968.6" y="115.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.06%)</title><rect x="968.6" y="99.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="971.6" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (38 samples, 0.15%)</title><rect x="969.5" y="195.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (38 samples, 0.15%)</title><rect x="969.5" y="179.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (38 samples, 0.15%)</title><rect x="969.5" y="163.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (38 samples, 0.15%)</title><rect x="969.5" y="147.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (38 samples, 0.15%)</title><rect x="969.5" y="131.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="972.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.15%)</title><rect x="969.5" y="115.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="972.5" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.08%)</title><rect x="971.4" y="323.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="974.4" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,192 samples, 4.59%)</title><rect x="972.7" y="323.0" width="54.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.7" y="334.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,192 samples, 4.59%)</title><rect x="972.7" y="307.0" width="54.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.7" y="318.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$82/1570121000.accept (1,192 samples, 4.59%)</title><rect x="972.7" y="291.0" width="54.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.7" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (1,192 samples, 4.59%)</title><rect x="972.7" y="275.0" width="54.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.7" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (1,192 samples, 4.59%)</title><rect x="972.7" y="259.0" width="54.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.7" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (1,188 samples, 4.57%)</title><rect x="972.9" y="243.0" width="54.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.9" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (1,188 samples, 4.57%)</title><rect x="972.9" y="227.0" width="54.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.9" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (1,188 samples, 4.57%)</title><rect x="972.9" y="211.0" width="54.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.9" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (804 samples, 3.10%)</title><rect x="972.9" y="195.0" width="36.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.9" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (522 samples, 2.01%)</title><rect x="972.9" y="179.0" width="23.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="975.9" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (282 samples, 1.09%)</title><rect x="996.6" y="179.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.6" y="190.0"></text>
</g>
<g>
<title>byte[] (282 samples, 1.09%)</title><rect x="996.6" y="163.0" width="12.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="999.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (384 samples, 1.48%)</title><rect x="1009.4" y="195.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (384 samples, 1.48%)</title><rect x="1009.4" y="179.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (239 samples, 0.92%)</title><rect x="1009.4" y="163.0" width="10.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1012.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (145 samples, 0.56%)</title><rect x="1020.3" y="163.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1023.3" y="174.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.56%)</title><rect x="1020.3" y="147.0" width="6.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1023.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25 samples, 0.10%)</title><rect x="1027.0" y="323.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.0" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.02%)</title><rect x="1027.0" y="307.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1030.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (19 samples, 0.07%)</title><rect x="1027.3" y="307.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (19 samples, 0.07%)</title><rect x="1027.3" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.3" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (12 samples, 0.05%)</title><rect x="1027.3" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (12 samples, 0.05%)</title><rect x="1027.3" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1030.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (12 samples, 0.05%)</title><rect x="1027.3" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.05%)</title><rect x="1027.3" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.05%)</title><rect x="1027.3" y="211.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (12 samples, 0.05%)</title><rect x="1027.3" y="195.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.05%)</title><rect x="1027.3" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (12 samples, 0.05%)</title><rect x="1027.3" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (12 samples, 0.05%)</title><rect x="1027.3" y="147.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.05%)</title><rect x="1027.3" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.05%)</title><rect x="1027.3" y="115.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1030.3" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.03%)</title><rect x="1027.8" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.03%)</title><rect x="1027.8" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.03%)</title><rect x="1027.8" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.03%)</title><rect x="1027.8" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="1027.8" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="1027.8" y="195.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1030.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (7 samples, 0.03%)</title><rect x="1027.8" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.03%)</title><rect x="1027.8" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (7 samples, 0.03%)</title><rect x="1027.8" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (7 samples, 0.03%)</title><rect x="1027.8" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1030.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="1027.8" y="115.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="1027.8" y="99.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1030.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (22 samples, 0.08%)</title><rect x="1028.2" y="323.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.03%)</title><rect x="1028.2" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (7 samples, 0.03%)</title><rect x="1028.6" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (6 samples, 0.02%)</title><rect x="1028.6" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.02%)</title><rect x="1028.9" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.9" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (6 samples, 0.02%)</title><rect x="1028.9" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1031.9" y="302.0"></text>
</g>
<g>
<title>[worker_8 tid=15534] (1,762 samples, 6.78%)</title><rect x="1029.2" y="467.0" width="80.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1032.2" y="478.0">[worker_8..</text>
</g>
<g>
<title>java/lang/Thread.run (1,762 samples, 6.78%)</title><rect x="1029.2" y="451.0" width="80.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.2" y="462.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,762 samples, 6.78%)</title><rect x="1029.2" y="435.0" width="80.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1032.2" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,762 samples, 6.78%)</title><rect x="1029.2" y="419.0" width="80.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1032.2" y="430.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.run (1,762 samples, 6.78%)</title><rect x="1029.2" y="403.0" width="80.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.2" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$2 (1,762 samples, 6.78%)</title><rect x="1029.2" y="387.0" width="80.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1032.2" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.04%)</title><rect x="1029.4" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1032.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.04%)</title><rect x="1029.4" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1032.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.02%)</title><rect x="1029.4" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.02%)</title><rect x="1029.4" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.4" y="334.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="1029.4" y="307.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1032.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,744 samples, 6.72%)</title><rect x="1030.0" y="371.0" width="79.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.0" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (266 samples, 1.02%)</title><rect x="1030.0" y="355.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (266 samples, 1.02%)</title><rect x="1030.0" y="339.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (266 samples, 1.02%)</title><rect x="1030.0" y="323.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (266 samples, 1.02%)</title><rect x="1030.0" y="307.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (266 samples, 1.02%)</title><rect x="1030.0" y="291.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (246 samples, 0.95%)</title><rect x="1030.0" y="275.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.0" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (67 samples, 0.26%)</title><rect x="1030.0" y="259.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (67 samples, 0.26%)</title><rect x="1030.0" y="243.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (67 samples, 0.26%)</title><rect x="1030.0" y="227.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.26%)</title><rect x="1030.0" y="211.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.26%)</title><rect x="1030.0" y="195.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (67 samples, 0.26%)</title><rect x="1030.0" y="179.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1033.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (67 samples, 0.26%)</title><rect x="1030.0" y="163.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (67 samples, 0.26%)</title><rect x="1030.0" y="147.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (67 samples, 0.26%)</title><rect x="1030.0" y="131.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (67 samples, 0.26%)</title><rect x="1030.0" y="115.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (67 samples, 0.26%)</title><rect x="1030.0" y="99.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1033.0" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (179 samples, 0.69%)</title><rect x="1033.0" y="259.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (179 samples, 0.69%)</title><rect x="1033.0" y="243.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (179 samples, 0.69%)</title><rect x="1033.0" y="227.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1036.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (179 samples, 0.69%)</title><rect x="1033.0" y="211.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (179 samples, 0.69%)</title><rect x="1033.0" y="195.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1036.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (179 samples, 0.69%)</title><rect x="1033.0" y="179.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (142 samples, 0.55%)</title><rect x="1033.0" y="163.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1036.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (142 samples, 0.55%)</title><rect x="1033.0" y="147.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1036.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (142 samples, 0.55%)</title><rect x="1033.0" y="131.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (142 samples, 0.55%)</title><rect x="1033.0" y="115.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.21%)</title><rect x="1033.0" y="99.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1036.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.14%)</title><rect x="1033.0" y="83.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1036.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.07%)</title><rect x="1034.7" y="83.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.7" y="94.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.07%)</title><rect x="1034.7" y="67.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1037.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (10 samples, 0.04%)</title><rect x="1035.5" y="99.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1038.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (6 samples, 0.02%)</title><rect x="1036.0" y="99.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1039.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (52 samples, 0.20%)</title><rect x="1036.2" y="99.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (32 samples, 0.12%)</title><rect x="1036.2" y="83.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1039.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.07%)</title><rect x="1036.2" y="67.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1039.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.05%)</title><rect x="1037.1" y="67.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.1" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="1037.1" y="51.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1040.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (20 samples, 0.08%)</title><rect x="1037.7" y="83.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.08%)</title><rect x="1037.7" y="67.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="1037.7" y="51.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1040.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="1038.3" y="51.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1041.3" y="62.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="1038.3" y="35.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1041.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (19 samples, 0.07%)</title><rect x="1038.6" y="99.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.07%)</title><rect x="1038.6" y="83.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.05%)</title><rect x="1038.6" y="67.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1041.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="1039.1" y="67.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1042.1" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="1039.1" y="51.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1042.1" y="62.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (37 samples, 0.14%)</title><rect x="1039.5" y="163.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1042.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (37 samples, 0.14%)</title><rect x="1039.5" y="147.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1042.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (37 samples, 0.14%)</title><rect x="1039.5" y="131.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (37 samples, 0.14%)</title><rect x="1039.5" y="115.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.14%)</title><rect x="1039.5" y="99.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1042.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.14%)</title><rect x="1039.5" y="83.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1042.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$83/1556374237.apply (20 samples, 0.08%)</title><rect x="1041.1" y="275.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (20 samples, 0.08%)</title><rect x="1041.1" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.08%)</title><rect x="1041.1" y="243.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.08%)</title><rect x="1041.1" y="227.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1044.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (1,474 samples, 5.68%)</title><rect x="1042.2" y="355.0" width="67.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.2" y="366.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (1,472 samples, 5.67%)</title><rect x="1042.3" y="339.0" width="66.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.3" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (252 samples, 0.97%)</title><rect x="1042.3" y="323.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (251 samples, 0.97%)</title><rect x="1042.4" y="307.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (9 samples, 0.03%)</title><rect x="1042.4" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.4" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (9 samples, 0.03%)</title><rect x="1042.4" y="275.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1045.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (233 samples, 0.90%)</title><rect x="1043.0" y="291.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (233 samples, 0.90%)</title><rect x="1043.0" y="275.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (7 samples, 0.03%)</title><rect x="1043.0" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.03%)</title><rect x="1043.0" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="1043.0" y="227.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1046.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (226 samples, 0.87%)</title><rect x="1043.3" y="259.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (226 samples, 0.87%)</title><rect x="1043.3" y="243.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.87%)</title><rect x="1043.3" y="227.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.87%)</title><rect x="1043.3" y="211.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (190 samples, 0.73%)</title><rect x="1043.3" y="195.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (190 samples, 0.73%)</title><rect x="1043.3" y="179.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (190 samples, 0.73%)</title><rect x="1043.3" y="163.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (190 samples, 0.73%)</title><rect x="1043.3" y="147.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (79 samples, 0.30%)</title><rect x="1043.3" y="131.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 0.20%)</title><rect x="1043.3" y="115.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1046.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.10%)</title><rect x="1045.7" y="115.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.7" y="126.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.10%)</title><rect x="1045.7" y="99.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1048.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (9 samples, 0.03%)</title><rect x="1046.9" y="131.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1049.9" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (8 samples, 0.03%)</title><rect x="1047.3" y="131.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1050.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (64 samples, 0.25%)</title><rect x="1047.7" y="131.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (44 samples, 0.17%)</title><rect x="1047.7" y="115.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.12%)</title><rect x="1047.7" y="99.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1050.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.05%)</title><rect x="1049.1" y="99.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.1" y="110.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="1049.1" y="83.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1052.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (20 samples, 0.08%)</title><rect x="1049.7" y="115.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.08%)</title><rect x="1049.7" y="99.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="1049.7" y="83.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1052.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="1050.3" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.3" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="1050.3" y="67.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1053.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (30 samples, 0.12%)</title><rect x="1050.6" y="131.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1053.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30 samples, 0.12%)</title><rect x="1050.6" y="115.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.07%)</title><rect x="1050.6" y="99.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1053.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.05%)</title><rect x="1051.4" y="99.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1054.4" y="110.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="1051.4" y="83.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1054.4" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (36 samples, 0.14%)</title><rect x="1052.0" y="195.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (36 samples, 0.14%)</title><rect x="1052.0" y="179.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (36 samples, 0.14%)</title><rect x="1052.0" y="163.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (36 samples, 0.14%)</title><rect x="1052.0" y="147.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (36 samples, 0.14%)</title><rect x="1052.0" y="131.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.14%)</title><rect x="1052.0" y="115.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1055.0" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.08%)</title><rect x="1053.8" y="323.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1056.8" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,150 samples, 4.43%)</title><rect x="1055.0" y="323.0" width="52.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.0" y="334.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,150 samples, 4.43%)</title><rect x="1055.0" y="307.0" width="52.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.0" y="318.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$82/1570121000.accept (1,149 samples, 4.42%)</title><rect x="1055.0" y="291.0" width="52.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.0" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (1,149 samples, 4.42%)</title><rect x="1055.0" y="275.0" width="52.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.0" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (1,149 samples, 4.42%)</title><rect x="1055.0" y="259.0" width="52.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.0" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.SSTable$1 (8 samples, 0.03%)</title><rect x="1055.0" y="243.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1058.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (1,141 samples, 4.39%)</title><rect x="1055.4" y="243.0" width="51.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.4" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (1,141 samples, 4.39%)</title><rect x="1055.4" y="227.0" width="51.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.4" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (1,141 samples, 4.39%)</title><rect x="1055.4" y="211.0" width="51.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.4" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (757 samples, 2.91%)</title><rect x="1055.4" y="195.0" width="34.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.4" y="206.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (498 samples, 1.92%)</title><rect x="1055.4" y="179.0" width="22.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1058.4" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (259 samples, 1.00%)</title><rect x="1078.0" y="179.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.0" y="190.0"></text>
</g>
<g>
<title>byte[] (259 samples, 1.00%)</title><rect x="1078.0" y="163.0" width="11.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1081.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (384 samples, 1.48%)</title><rect x="1089.8" y="195.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (384 samples, 1.48%)</title><rect x="1089.8" y="179.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1092.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (251 samples, 0.97%)</title><rect x="1089.8" y="163.0" width="11.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1092.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (133 samples, 0.51%)</title><rect x="1101.2" y="163.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1104.2" y="174.0"></text>
</g>
<g>
<title>byte[] (133 samples, 0.51%)</title><rect x="1101.2" y="147.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1104.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (24 samples, 0.09%)</title><rect x="1107.4" y="323.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (24 samples, 0.09%)</title><rect x="1107.4" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.09%)</title><rect x="1107.4" y="291.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.4" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (15 samples, 0.06%)</title><rect x="1107.4" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (15 samples, 0.06%)</title><rect x="1107.4" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1110.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.06%)</title><rect x="1107.4" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.06%)</title><rect x="1107.4" y="227.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.06%)</title><rect x="1107.4" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (15 samples, 0.06%)</title><rect x="1107.4" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.06%)</title><rect x="1107.4" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (15 samples, 0.06%)</title><rect x="1107.4" y="163.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (15 samples, 0.06%)</title><rect x="1107.4" y="147.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.06%)</title><rect x="1107.4" y="131.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.06%)</title><rect x="1107.4" y="115.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1110.4" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.03%)</title><rect x="1108.1" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.03%)</title><rect x="1108.1" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.03%)</title><rect x="1108.1" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.03%)</title><rect x="1108.1" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.03%)</title><rect x="1108.1" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.03%)</title><rect x="1108.1" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (8 samples, 0.03%)</title><rect x="1108.1" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (8 samples, 0.03%)</title><rect x="1108.1" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (8 samples, 0.03%)</title><rect x="1108.1" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (8 samples, 0.03%)</title><rect x="1108.1" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.1" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.03%)</title><rect x="1108.1" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.03%)</title><rect x="1108.1" y="99.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1111.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (17 samples, 0.07%)</title><rect x="1108.4" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.4" y="334.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.03%)</title><rect x="1108.4" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.4" y="318.0"></text>
</g>
<g>
<title>[worker_9 tid=15535] (1,778 samples, 6.85%)</title><rect x="1109.2" y="467.0" width="80.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1112.2" y="478.0">[worker_9..</text>
</g>
<g>
<title>java/lang/Thread.run (1,778 samples, 6.85%)</title><rect x="1109.2" y="451.0" width="80.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.2" y="462.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,778 samples, 6.85%)</title><rect x="1109.2" y="435.0" width="80.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1112.2" y="446.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,778 samples, 6.85%)</title><rect x="1109.2" y="419.0" width="80.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.2" y="430.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl$$Lambda$80/1210990004.run (1,778 samples, 6.85%)</title><rect x="1109.2" y="403.0" width="80.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1112.2" y="414.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/nik27090/ServiceImpl.lambda$getEntity$2 (1,778 samples, 6.85%)</title><rect x="1109.2" y="387.0" width="80.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.2" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,763 samples, 6.79%)</title><rect x="1109.9" y="371.0" width="80.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.9" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (240 samples, 0.92%)</title><rect x="1109.9" y="355.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1112.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (240 samples, 0.92%)</title><rect x="1109.9" y="339.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (240 samples, 0.92%)</title><rect x="1109.9" y="323.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (240 samples, 0.92%)</title><rect x="1109.9" y="307.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (240 samples, 0.92%)</title><rect x="1109.9" y="291.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (215 samples, 0.83%)</title><rect x="1109.9" y="275.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1112.9" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (64 samples, 0.25%)</title><rect x="1109.9" y="259.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1112.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (64 samples, 0.25%)</title><rect x="1109.9" y="243.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (64 samples, 0.25%)</title><rect x="1109.9" y="227.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1112.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.25%)</title><rect x="1109.9" y="211.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.25%)</title><rect x="1109.9" y="195.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1112.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (64 samples, 0.25%)</title><rect x="1109.9" y="179.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (64 samples, 0.25%)</title><rect x="1109.9" y="163.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (64 samples, 0.25%)</title><rect x="1109.9" y="147.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (64 samples, 0.25%)</title><rect x="1109.9" y="131.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1112.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (64 samples, 0.25%)</title><rect x="1109.9" y="115.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (64 samples, 0.25%)</title><rect x="1109.9" y="99.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1112.9" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (151 samples, 0.58%)</title><rect x="1112.8" y="259.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (151 samples, 0.58%)</title><rect x="1112.8" y="243.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (151 samples, 0.58%)</title><rect x="1112.8" y="227.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (151 samples, 0.58%)</title><rect x="1112.8" y="211.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (151 samples, 0.58%)</title><rect x="1112.8" y="195.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (151 samples, 0.58%)</title><rect x="1112.8" y="179.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1115.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (113 samples, 0.44%)</title><rect x="1112.8" y="163.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (113 samples, 0.44%)</title><rect x="1112.8" y="147.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (113 samples, 0.44%)</title><rect x="1112.8" y="131.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1115.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (113 samples, 0.44%)</title><rect x="1112.8" y="115.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (48 samples, 0.18%)</title><rect x="1112.8" y="99.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.12%)</title><rect x="1112.8" y="83.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1115.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.07%)</title><rect x="1114.2" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.2" y="94.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.07%)</title><rect x="1114.2" y="67.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1117.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (6 samples, 0.02%)</title><rect x="1115.0" y="99.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1118.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (6 samples, 0.02%)</title><rect x="1115.3" y="99.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1118.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (44 samples, 0.17%)</title><rect x="1115.5" y="99.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (29 samples, 0.11%)</title><rect x="1115.5" y="83.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.06%)</title><rect x="1115.5" y="67.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1118.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.05%)</title><rect x="1116.3" y="67.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.3" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="1116.3" y="51.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1119.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (15 samples, 0.06%)</title><rect x="1116.8" y="83.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15 samples, 0.06%)</title><rect x="1116.8" y="67.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.05%)</title><rect x="1116.8" y="51.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1119.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (9 samples, 0.03%)</title><rect x="1117.5" y="99.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.03%)</title><rect x="1117.5" y="83.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.5" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (38 samples, 0.15%)</title><rect x="1117.9" y="163.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (38 samples, 0.15%)</title><rect x="1117.9" y="147.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (38 samples, 0.15%)</title><rect x="1117.9" y="131.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (38 samples, 0.15%)</title><rect x="1117.9" y="115.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (38 samples, 0.15%)</title><rect x="1117.9" y="99.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.15%)</title><rect x="1117.9" y="83.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1120.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$83/1556374237.apply (25 samples, 0.10%)</title><rect x="1119.7" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (25 samples, 0.10%)</title><rect x="1119.7" y="259.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (25 samples, 0.10%)</title><rect x="1119.7" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.10%)</title><rect x="1119.7" y="227.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1122.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.iterator (1,513 samples, 5.83%)</title><rect x="1121.3" y="355.0" width="68.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.3" y="366.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.getAliveCells (1,511 samples, 5.82%)</title><rect x="1121.3" y="339.0" width="68.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.3" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (237 samples, 0.91%)</title><rect x="1121.5" y="323.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (236 samples, 0.91%)</title><rect x="1121.5" y="307.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (13 samples, 0.05%)</title><rect x="1121.5" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.5" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (13 samples, 0.05%)</title><rect x="1121.5" y="275.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1124.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (210 samples, 0.81%)</title><rect x="1122.2" y="291.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (210 samples, 0.81%)</title><rect x="1122.2" y="275.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (206 samples, 0.79%)</title><rect x="1122.3" y="259.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (206 samples, 0.79%)</title><rect x="1122.3" y="243.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (206 samples, 0.79%)</title><rect x="1122.3" y="227.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (206 samples, 0.79%)</title><rect x="1122.3" y="211.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (162 samples, 0.62%)</title><rect x="1122.3" y="195.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (162 samples, 0.62%)</title><rect x="1122.3" y="179.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.next (162 samples, 0.62%)</title><rect x="1122.3" y="163.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getCell (162 samples, 0.62%)</title><rect x="1122.3" y="147.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (61 samples, 0.23%)</title><rect x="1122.3" y="131.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 0.15%)</title><rect x="1122.3" y="115.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1125.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.09%)</title><rect x="1124.1" y="115.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.1" y="126.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.09%)</title><rect x="1124.1" y="99.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1127.1" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Cell (9 samples, 0.03%)</title><rect x="1125.1" y="131.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1128.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.Value (9 samples, 0.03%)</title><rect x="1125.5" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1128.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (60 samples, 0.23%)</title><rect x="1125.9" y="131.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (44 samples, 0.17%)</title><rect x="1125.9" y="115.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.11%)</title><rect x="1125.9" y="99.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1128.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.06%)</title><rect x="1127.2" y="99.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.2" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.06%)</title><rect x="1127.2" y="83.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1130.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (16 samples, 0.06%)</title><rect x="1127.9" y="115.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.06%)</title><rect x="1127.9" y="99.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.04%)</title><rect x="1127.9" y="83.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1130.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.02%)</title><rect x="1128.4" y="83.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.4" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="1128.4" y="67.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1131.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (23 samples, 0.09%)</title><rect x="1128.7" y="131.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.09%)</title><rect x="1128.7" y="115.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.05%)</title><rect x="1128.7" y="99.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1131.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.03%)</title><rect x="1129.3" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.3" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="1129.3" y="83.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1132.3" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (44 samples, 0.17%)</title><rect x="1129.7" y="195.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (44 samples, 0.17%)</title><rect x="1129.7" y="179.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (44 samples, 0.17%)</title><rect x="1129.7" y="163.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (44 samples, 0.17%)</title><rect x="1129.7" y="147.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (44 samples, 0.17%)</title><rect x="1129.7" y="131.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.17%)</title><rect x="1129.7" y="115.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1132.7" y="126.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.05%)</title><rect x="1131.7" y="291.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.05%)</title><rect x="1131.7" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.05%)</title><rect x="1131.7" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1134.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (10 samples, 0.04%)</title><rect x="1131.8" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.8" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (26 samples, 0.10%)</title><rect x="1132.2" y="323.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1135.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1,183 samples, 4.56%)</title><rect x="1133.7" y="323.0" width="53.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.7" y="334.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,183 samples, 4.56%)</title><rect x="1133.7" y="307.0" width="53.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.7" y="318.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl$$Lambda$82/1570121000.accept (1,181 samples, 4.55%)</title><rect x="1133.8" y="291.0" width="53.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1136.8" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/DAOImpl.lambda$getAliveCells$3 (1,181 samples, 4.55%)</title><rect x="1133.8" y="275.0" width="53.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.8" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.iterator (1,181 samples, 4.55%)</title><rect x="1133.8" y="259.0" width="53.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.8" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.nik27090.SSTable$1 (8 samples, 0.03%)</title><rect x="1133.8" y="243.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1136.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable$1.&lt;init&gt; (1,173 samples, 4.52%)</title><rect x="1134.2" y="243.0" width="53.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.2" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.findElement (1,173 samples, 4.52%)</title><rect x="1134.2" y="227.0" width="53.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.2" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getKeyByOrder (1,173 samples, 4.52%)</title><rect x="1134.2" y="211.0" width="53.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1137.2" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (799 samples, 3.08%)</title><rect x="1134.2" y="195.0" width="36.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.2" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (525 samples, 2.02%)</title><rect x="1134.2" y="179.0" width="23.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1137.2" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (274 samples, 1.06%)</title><rect x="1158.0" y="179.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.0" y="190.0"></text>
</g>
<g>
<title>byte[] (274 samples, 1.06%)</title><rect x="1158.0" y="163.0" width="12.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1161.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/SSTable.getOffset (374 samples, 1.44%)</title><rect x="1170.5" y="195.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1173.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (374 samples, 1.44%)</title><rect x="1170.5" y="179.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1173.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (247 samples, 0.95%)</title><rect x="1170.5" y="163.0" width="11.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1173.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (127 samples, 0.49%)</title><rect x="1181.7" y="163.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.7" y="174.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.49%)</title><rect x="1181.7" y="147.0" width="5.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1184.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (31 samples, 0.12%)</title><rect x="1187.7" y="323.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (30 samples, 0.12%)</title><rect x="1187.8" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (30 samples, 0.12%)</title><rect x="1187.8" y="291.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.8" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (16 samples, 0.06%)</title><rect x="1188.0" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (16 samples, 0.06%)</title><rect x="1188.0" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (16 samples, 0.06%)</title><rect x="1188.0" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.06%)</title><rect x="1188.0" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.06%)</title><rect x="1188.0" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (16 samples, 0.06%)</title><rect x="1188.0" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (16 samples, 0.06%)</title><rect x="1188.0" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (16 samples, 0.06%)</title><rect x="1188.0" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (16 samples, 0.06%)</title><rect x="1188.0" y="147.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.06%)</title><rect x="1188.0" y="131.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.06%)</title><rect x="1188.0" y="115.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1191.0" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.03%)</title><rect x="1188.7" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.03%)</title><rect x="1188.7" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.03%)</title><rect x="1188.7" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.03%)</title><rect x="1188.7" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.03%)</title><rect x="1188.7" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.03%)</title><rect x="1188.7" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/38668385.compare (9 samples, 0.03%)</title><rect x="1188.7" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.03%)</title><rect x="1188.7" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell$$Lambda$78/1207677352.apply (9 samples, 0.03%)</title><rect x="1188.7" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/Cell.getKey (9 samples, 0.03%)</title><rect x="1188.7" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.03%)</title><rect x="1188.7" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.03%)</title><rect x="1188.7" y="99.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1191.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nik27090/MemTable.iterator (19 samples, 0.07%)</title><rect x="1189.1" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.02%)</title><rect x="1189.7" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (6 samples, 0.02%)</title><rect x="1189.7" y="291.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1192.7" y="302.0"></text>
</g>
</g>
</svg>
